package com.adobe.reader;

import android.graphics.RectF;
import android.text.Layout.Alignment;
import android.text.StaticLayout;
import android.text.TextPaint;

public final class ARUITextBasedView
{
  private ARUITextBasedView()
  {
    throw new AssertionError();
  }
  
  public static RectF getTextMetrics(ARViewer paramARViewer, String paramString1, float paramFloat1, String paramString2, float paramFloat2, boolean paramBoolean)
  {
    int j = 0;
    paramARViewer = new TextPaint();
    paramARViewer.setTypeface(AREditText.getTypefaceForFontName(paramString1));
    paramARViewer.setTextSize(paramFloat1);
    int i;
    if (paramBoolean)
    {
      i = (int)Math.floor(paramFloat2);
      paramARViewer = new StaticLayout(paramString2, paramARViewer, i, Layout.Alignment.ALIGN_NORMAL, 1.0F, 0.0F, false);
      if (!paramBoolean) {
        break label134;
      }
      paramFloat1 = 0.0F;
      i = j;
      label68:
      if (i < paramARViewer.getLineCount()) {
        break label100;
      }
    }
    for (;;)
    {
      return new RectF(0.0F, 0.0F, paramFloat1, paramARViewer.getHeight());
      i = Integer.MAX_VALUE;
      break;
      label100:
      paramFloat2 = paramFloat1;
      if (paramARViewer.getLineWidth(i) > paramFloat1) {
        paramFloat2 = paramARViewer.getLineWidth(i);
      }
      i += 1;
      paramFloat1 = paramFloat2;
      break label68;
      label134:
      paramFloat1 = paramARViewer.getLineWidth(0);
    }
  }
  
  private static native boolean onTextWillChange(long paramLong, String paramString1, String paramString2, int paramInt1, int paramInt2, StringBuffer paramStringBuffer);
  
  public static boolean onTextWillChange(ARTextBasedView paramARTextBasedView, long paramLong, String paramString1, int paramInt1, int paramInt2, String paramString2, int paramInt3, int paramInt4)
  {
    if ((paramString1 == null) || (paramString2 == null)) {}
    while ((paramString1.equals(paramString2)) || ((paramInt2 == 0) && (paramInt4 == 0))) {
      return false;
    }
    String str;
    StringBuffer localStringBuffer;
    boolean bool;
    if (paramInt4 == 0)
    {
      str = "";
      paramInt2 = paramInt1 + paramInt2;
      localStringBuffer = new StringBuffer();
      if (onTextWillChange(paramLong, paramString1, str, paramInt1, paramInt2, localStringBuffer)) {
        break label109;
      }
      paramARTextBasedView.setValueProperty(paramString1);
      paramARTextBasedView.setCursor(paramInt2);
      bool = true;
    }
    for (;;)
    {
      return bool;
      str = paramString2.substring(paramInt3, paramInt3 + paramInt4);
      break;
      label109:
      if (!localStringBuffer.toString().equals(str))
      {
        paramString1 = new StringBuffer(paramString2);
        paramString1.replace(paramInt3, paramInt3 + paramInt4, localStringBuffer.toString());
        paramARTextBasedView.setValueProperty(paramString1.toString());
        paramARTextBasedView.setCursor(localStringBuffer.length() + paramInt1);
        bool = true;
      }
      else
      {
        bool = false;
      }
    }
  }
}
