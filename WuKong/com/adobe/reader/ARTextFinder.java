package com.adobe.reader;

import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;

public class ARTextFinder
  implements View.OnClickListener
{
  private static final int DISPLAY_FIND_PROGRESS_BAR_DELAY = 500;
  public static final int kCanceled = 3;
  public static final int kFound = 1;
  public static final int kNotFound = 2;
  private ARViewer mARContext = null;
  private ImageButton mFindNextButton = null;
  private ImageButton mFindPrevButton = null;
  private String mSearchText = "";
  private long mTextFinderJNIObj = 0L;
  
  public ARTextFinder(ARViewer paramARViewer, long paramLong)
  {
    this.mARContext = paramARViewer;
    this.mTextFinderJNIObj = createTextFinder(paramLong);
    this.mFindNextButton = ((ImageButton)paramARViewer.findViewById(2131492900));
    this.mFindNextButton.setOnClickListener(this);
    this.mFindPrevButton = ((ImageButton)paramARViewer.findViewById(2131492899));
    this.mFindPrevButton.setOnClickListener(this);
  }
  
  private native void cancelSearch(long paramLong);
  
  private void checkTextFinder()
  {
    if (this.mTextFinderJNIObj == 0L) {
      throw new IllegalStateException();
    }
  }
  
  private native long createTextFinder(long paramLong);
  
  private native void findText(long paramLong, String paramString, boolean paramBoolean);
  
  private void findText(String paramString, boolean paramBoolean)
  {
    if (paramString.length() > 0)
    {
      setNextPrevFindButtonsEnabled(false);
      this.mARContext.sendShowProgressDialogMessage(500, ARViewer.PROGRESS_DIALOG_CONTEXT.AR_FIND);
      checkTextFinder();
      findText(this.mTextFinderJNIObj, paramString, paramBoolean);
      return;
    }
    this.mARContext.onSearchComplete(2);
  }
  
  private native void removeTextHighlight(long paramLong);
  
  public void activateFind()
  {
    this.mARContext.getToolbar().pushView(2130903056);
    this.mARContext.pushBackButtonHandler(new ARViewer.BackButtonHandler()
    {
      public void onBackPressed()
      {
        ARTextFinder.this.mARContext.deactivateFind(true);
      }
    });
    this.mARContext.getPageView().addOnCloseDocumentListener(new PageView.OnCloseDocumentListener()
    {
      public void onCloseDocument()
      {
        ARTextFinder.this.mARContext.deactivateFind(false);
      }
    });
    this.mARContext.lockToolbar();
  }
  
  public void cancelSearch()
  {
    checkTextFinder();
    cancelSearch(this.mTextFinderJNIObj);
  }
  
  public void deactivateFind(boolean paramBoolean)
  {
    this.mARContext.getToolbar().popView();
    this.mARContext.popBackButtonHandler();
    this.mARContext.unlockToolbar();
    this.mARContext.findViewById(2131492898).setVisibility(8);
    if (paramBoolean) {
      removeTextHighlight();
    }
  }
  
  public String getSearchText()
  {
    return this.mSearchText;
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
      return;
    case 2131492900: 
      findText(this.mSearchText, false);
      return;
    }
    findText(this.mSearchText, true);
  }
  
  public void removeTextHighlight()
  {
    checkTextFinder();
    removeTextHighlight(this.mTextFinderJNIObj);
  }
  
  public void setNextPrevFindButtonsEnabled(boolean paramBoolean)
  {
    this.mFindNextButton.setEnabled(paramBoolean);
    this.mFindPrevButton.setEnabled(paramBoolean);
  }
  
  public void startSearch(String paramString)
  {
    this.mSearchText = paramString;
    if (paramString.length() > 0) {
      this.mARContext.findViewById(2131492898).setVisibility(0);
    }
    findText(paramString, false);
  }
}
