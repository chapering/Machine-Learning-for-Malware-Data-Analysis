package com.adobe.reader;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Canvas;
import android.graphics.drawable.StateListDrawable;
import android.view.View;
import android.widget.ImageButton;

public class ToolbarButtonDrawable
  extends StateListDrawable
{
  private int mDisabledIcon;
  private boolean mEnabled;
  private int mHLColor;
  private int mIcon;
  private int mIconHL;
  private int mNormalColor;
  private boolean mPressed;
  private int mTouchedColor;
  private ImageButton mView;
  
  ToolbarButtonDrawable(View paramView, int paramInt1, int paramInt2)
  {
    init(paramView, paramInt1, paramInt2, 0);
  }
  
  ToolbarButtonDrawable(View paramView, int paramInt1, int paramInt2, int paramInt3)
  {
    init(paramView, paramInt1, paramInt2, paramInt3);
  }
  
  private void init(View paramView, int paramInt1, int paramInt2, int paramInt3)
  {
    this.mView = ((ImageButton)paramView);
    paramView = this.mView.getContext().getResources();
    if (this.mView != (ImageButton)((View)this.mView.getParent()).findViewById(2131493143))
    {
      this.mHLColor = paramView.getColor(2131230759);
      this.mTouchedColor = paramView.getColor(2131230760);
    }
    for (;;)
    {
      this.mIcon = paramInt1;
      this.mIconHL = paramInt2;
      this.mDisabledIcon = paramInt3;
      this.mEnabled = true;
      return;
      this.mHLColor = paramView.getColor(2131230762);
      this.mTouchedColor = paramView.getColor(2131230764);
      this.mNormalColor = paramView.getColor(2131230763);
    }
  }
  
  public void draw(Canvas paramCanvas)
  {
    if (this.mEnabled)
    {
      if (this.mPressed)
      {
        paramCanvas.drawColor(this.mHLColor);
        this.mView.setImageResource(this.mIconHL);
        return;
      }
      if (this.mView == (ImageButton)((View)this.mView.getParent()).findViewById(2131493143)) {
        paramCanvas.drawColor(this.mNormalColor);
      }
      int[] arrayOfInt = getState();
      int i = 0;
      for (;;)
      {
        if (i >= arrayOfInt.length) {}
        for (;;)
        {
          this.mView.setImageResource(this.mIcon);
          return;
          if (arrayOfInt[i] != 16842919) {
            break;
          }
          paramCanvas.drawColor(this.mTouchedColor);
        }
        i += 1;
      }
    }
    this.mView.setImageResource(this.mDisabledIcon);
  }
  
  public boolean getEnabled()
  {
    return this.mEnabled;
  }
  
  public boolean getPressed()
  {
    return this.mPressed;
  }
  
  protected boolean onStateChange(int[] paramArrayOfInt)
  {
    invalidateSelf();
    return false;
  }
  
  public void setEnabled(boolean paramBoolean)
  {
    this.mEnabled = paramBoolean;
  }
  
  public void setPressed(boolean paramBoolean)
  {
    this.mPressed = paramBoolean;
    invalidateSelf();
  }
}
