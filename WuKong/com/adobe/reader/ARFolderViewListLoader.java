package com.adobe.reader;

import android.app.Activity;
import android.content.Context;
import java.io.File;

public class ARFolderViewListLoader
  extends ARFileListLoader
{
  private ARFileEntryAdapter mAdapter = null;
  private Activity mContext = null;
  private File mCurrentDirectory = null;
  private File[] mExternalMountPoints = null;
  
  public ARFolderViewListLoader(Context paramContext, ARFileEntryAdapter paramARFileEntryAdapter)
  {
    super(paramContext, paramARFileEntryAdapter);
    this.mContext = ((Activity)paramContext);
    this.mAdapter = paramARFileEntryAdapter;
  }
  
  protected void addFiles()
  {
    if ((this.mCurrentDirectory == null) || (isDirectoryParentOfMountPoint(this.mCurrentDirectory.getAbsolutePath())))
    {
      this.mContext.runOnUiThread(this.removeUpDirectoryEntry);
      if (this.mExternalMountPoints == null) {
        this.mExternalMountPoints = ARFileBrowserUtils.getListOfExternalStorageMountPoints();
      }
      addGivenFiles(this.mExternalMountPoints);
      return;
    }
    this.mContext.runOnUiThread(new ARFileListLoader.AddUpDirectoryRunnable(this, this.mCurrentDirectory.getAbsolutePath()));
    if (this.mAdapter.getAdapterType() == ARFileEntryAdapter.ADAPTER_TYPE.FOLDER_VIEW)
    {
      addCurrentDirectoryFiles(this.mCurrentDirectory, 3);
      return;
    }
    addCurrentDirectoryFiles(this.mCurrentDirectory, 2);
  }
  
  public File getCurrentDirectory()
  {
    return this.mCurrentDirectory;
  }
  
  public boolean isDirectoryParentOfMountPoint(String paramString)
  {
    if (this.mExternalMountPoints == null) {
      this.mExternalMountPoints = ARFileBrowserUtils.getListOfExternalStorageMountPoints();
    }
    int i = 0;
    for (;;)
    {
      if (i >= this.mExternalMountPoints.length) {
        return false;
      }
      if (paramString.equals(this.mExternalMountPoints[i].getParent())) {
        return true;
      }
      i += 1;
    }
  }
  
  public void setCurrentDirectory(File paramFile)
  {
    this.mCurrentDirectory = paramFile;
  }
  
  public void setCurrentDirectory(String paramString)
  {
    if (paramString != null) {
      this.mCurrentDirectory = new File(paramString);
    }
  }
}
