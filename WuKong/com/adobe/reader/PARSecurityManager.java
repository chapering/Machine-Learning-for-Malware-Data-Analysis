package com.adobe.reader;

import android.content.Context;
import android.content.res.Resources;
import android.view.Display;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.OrientationEventListener;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.WindowManager;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.PopupWindow.OnDismissListener;

class PARSecurityManager
  implements View.OnClickListener
{
  public static final int SECURITYLOCK_BUTTON_WIDTH = 45;
  private ARViewer mARContext = null;
  private PopupWindow mMenu;
  private OrientationEventListener mOrientationListener;
  private int mRotation;
  private LinearLayout mSecurityViewLayout;
  private boolean mShowSecurityLock = false;
  
  public PARSecurityManager(ARViewer paramARViewer, boolean paramBoolean)
  {
    this.mARContext = paramARViewer;
    paramARViewer = (ImageButton)this.mARContext.findViewById(2131492914);
    this.mShowSecurityLock = paramBoolean;
    if (this.mShowSecurityLock)
    {
      paramARViewer.setOnClickListener(this);
      paramARViewer.setVisibility(0);
    }
    for (;;)
    {
      this.mOrientationListener = new OrientationEventListener(this.mARContext)
      {
        public void onOrientationChanged(int paramAnonymousInt)
        {
          if (PARSecurityManager.this.mRotation != PARSecurityManager.this.mARContext.getWindowManager().getDefaultDisplay().getRotation()) {
            PARSecurityManager.this.hideSecurityView();
          }
        }
      };
      this.mOrientationListener.disable();
      return;
      paramARViewer.setVisibility(8);
    }
  }
  
  private void hideSecurityView()
  {
    if (this.mMenu == null) {
      return;
    }
    this.mARContext.unlockToolbar();
    this.mMenu.setOnDismissListener(null);
    this.mMenu.dismiss();
    this.mSecurityViewLayout.setVisibility(8);
    if (!this.mARContext.isRunningOnTablet()) {
      this.mSecurityViewLayout.findViewById(2131493081).setVisibility(8);
    }
    ImageButton localImageButton = (ImageButton)this.mARContext.findViewById(2131492914);
    localImageButton.setImageResource(2130837721);
    localImageButton.setBackgroundResource(2130837870);
    this.mARContext.findViewById(2131492882).setVisibility(8);
    this.mMenu = null;
    this.mSecurityViewLayout = null;
    this.mOrientationListener.disable();
  }
  
  private boolean isSecurityViewVisible()
  {
    if (this.mMenu == null) {
      return false;
    }
    return this.mMenu.isShowing();
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
      return;
    }
    if (isSecurityViewVisible())
    {
      hideSecurityView();
      return;
    }
    showSecurityView();
  }
  
  public void release()
  {
    if (isSecurityViewVisible()) {
      hideSecurityView();
    }
    this.mOrientationListener = null;
  }
  
  public boolean shouldShowSecurityLock()
  {
    return this.mShowSecurityLock;
  }
  
  public void showSecurityView()
  {
    if (!this.mShowSecurityLock) {
      return;
    }
    this.mARContext.lockToolbar();
    this.mARContext.findViewById(2131492882).setVisibility(0);
    Object localObject = (ImageButton)this.mARContext.findViewById(2131492914);
    ((ImageButton)localObject).setImageResource(2130837722);
    ((ImageButton)localObject).setBackgroundResource(2130837869);
    this.mSecurityViewLayout = new LinearLayout(this.mARContext);
    LayoutInflater.from(this.mARContext).inflate(2130903078, this.mSecurityViewLayout);
    if (!this.mARContext.isRunningOnTablet())
    {
      localObject = this.mSecurityViewLayout.findViewById(2131493081);
      ((View)localObject).setVisibility(0);
      ((View)localObject).setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          PARSecurityManager.this.hideSecurityView();
        }
      });
    }
    this.mMenu = new PopupWindow(this.mARContext);
    this.mMenu.setBackgroundDrawable(this.mARContext.getResources().getDrawable(2130837869));
    this.mMenu.setContentView(this.mSecurityViewLayout);
    this.mMenu.setOnDismissListener(new PopupWindow.OnDismissListener()
    {
      public void onDismiss()
      {
        PARSecurityManager.this.hideSecurityView();
      }
    });
    this.mMenu.setFocusable(true);
    this.mMenu.setOutsideTouchable(true);
    this.mMenu.setTouchInterceptor(new View.OnTouchListener()
    {
      public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
      {
        return false;
      }
    });
    this.mRotation = this.mARContext.getWindowManager().getDefaultDisplay().getRotation();
    this.mOrientationListener.enable();
    int i;
    if (this.mARContext.isRunningOnTablet())
    {
      this.mSecurityViewLayout.measure(0, 0);
      i = this.mSecurityViewLayout.getMeasuredWidth();
    }
    for (int j = this.mSecurityViewLayout.getMeasuredHeight();; j = this.mARContext.getScreenHeight())
    {
      this.mMenu.setWidth(i);
      this.mMenu.setHeight(j);
      if (!this.mARContext.isRunningOnTablet()) {
        break;
      }
      localObject = (LinearLayout)this.mARContext.findViewById(2131492902);
      this.mMenu.showAtLocation(this.mARContext.getPageView(), 0, this.mARContext.getScreenWidth() - i, ((LinearLayout)localObject).getTop() - j);
      return;
      i = this.mARContext.getScreenWidth();
    }
    this.mMenu.showAtLocation(this.mARContext.getPageView(), 0, 0, 0);
  }
}
