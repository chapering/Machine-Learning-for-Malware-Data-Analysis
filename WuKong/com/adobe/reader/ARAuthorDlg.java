package com.adobe.reader;

import android.content.res.Resources;
import android.text.Editable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class ARAuthorDlg
  extends AlertDlg
  implements View.OnClickListener
{
  private ARViewer mContext;
  
  public ARAuthorDlg(ARViewer paramARViewer)
  {
    super(paramARViewer);
    this.mContext = paramARViewer;
    Object localObject = ((LayoutInflater)paramARViewer.getSystemService("layout_inflater")).inflate(2130903042, null);
    if (localObject == null) {
      return;
    }
    setCancelable(false);
    setTitle(paramARViewer.getResources().getString(2131362035));
    setView((View)localObject);
    setIcon(0);
    ((Button)((View)localObject).findViewById(2131492918)).setOnClickListener(this);
    ((Button)((View)localObject).findViewById(2131492919)).setOnClickListener(this);
    TextView localTextView = (TextView)((View)localObject).findViewById(2131492916);
    if (paramARViewer.isRunningOnTablet()) {
      localTextView.setText(paramARViewer.getResources().getString(2131362036));
    }
    for (;;)
    {
      localObject = (EditText)((View)localObject).findViewById(2131492917);
      ((EditText)localObject).setHint(paramARViewer.getResources().getString(2131362038));
      ((EditText)localObject).setOnFocusChangeListener(new View.OnFocusChangeListener()
      {
        public void onFocusChange(View paramAnonymousView, boolean paramAnonymousBoolean)
        {
          if (paramAnonymousBoolean) {
            ARAuthorDlg.this.getWindow().setSoftInputMode(5);
          }
        }
      });
      return;
      localTextView.setText(paramARViewer.getResources().getString(2131362037));
    }
  }
  
  private void setAuthorPreference(String paramString)
  {
    ARPrefsEditor localARPrefsEditor = new ARPrefsEditor(this.mContext.getSharedPreferences("com.adobe.reader.preferences", 0));
    localARPrefsEditor.putString("commentAuthorName", paramString.trim());
    localARPrefsEditor.apply();
    this.mContext.onAuthorPreferenceSet();
  }
  
  public void dismiss()
  {
    if (isShowing())
    {
      EditText localEditText = (EditText)findViewById(2131492917);
      InputMethodManager localInputMethodManager = (InputMethodManager)this.mContext.getSystemService("input_method");
      if (localInputMethodManager.isActive()) {
        localInputMethodManager.hideSoftInputFromWindow(localEditText.getWindowToken(), 0);
      }
    }
    super.dismiss();
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
      return;
    case 2131492918: 
      paramView = ((EditText)findViewById(2131492917)).getText().toString();
      dismiss();
      setAuthorPreference(paramView);
      return;
    }
    dismiss();
    setAuthorPreference(this.mContext.getResources().getString(2131362041));
  }
}
