package com.adobe.reader;

import android.content.res.Resources;
import android.text.Editable;
import android.text.Html;
import android.text.method.LinkMovementMethod;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;

public class ARLCRMDlg
  extends AlertDlg
  implements View.OnClickListener
{
  ARViewer mContext;
  private long mEDCSecurityHandlerInstance;
  private boolean mLCRMAnonymous = true;
  private View mLCRMView = null;
  
  public ARLCRMDlg(ARViewer paramARViewer)
  {
    super(paramARViewer);
    this.mContext = paramARViewer;
    setCancelable(false);
  }
  
  private void flipAuthView()
  {
    if (this.mLCRMView == null) {
      return;
    }
    View localView = this.mLCRMView.findViewById(2131492985);
    if (localView.isShown())
    {
      localView.setVisibility(8);
      this.mLCRMView.findViewById(2131492994).setVisibility(0);
      getWindow().setSoftInputMode(2);
      getWindow().getAttributes().windowAnimations = 0;
    }
    for (;;)
    {
      dismiss();
      show();
      return;
      localView = this.mLCRMView.findViewById(2131492994);
      if (localView.isShown())
      {
        localView.setVisibility(8);
        this.mLCRMView.findViewById(2131492985).setVisibility(0);
        getWindow().setSoftInputMode(5);
      }
    }
  }
  
  private native void setLCRMCredentials(long paramLong, String paramString1, String paramString2);
  
  private native void setLCRMDialogWasCancelled(long paramLong);
  
  private void setUIControls(boolean paramBoolean1, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, boolean paramBoolean2)
  {
    if (this.mLCRMView == null) {
      return;
    }
    if (paramBoolean1) {
      if (paramString4 != null)
      {
        paramString1 = paramString4.trim();
        if (!paramString1.equals("")) {}
      }
      else
      {
        paramString1 = this.mContext.getString(2131361961);
      }
    }
    for (;;)
    {
      paramString2 = (TextView)this.mLCRMView.findViewById(2131492982);
      paramString2.setText(Html.fromHtml(this.mContext.getResources().getString(2131361963, new Object[] { paramString1 })));
      paramString2.setMovementMethod(LinkMovementMethod.getInstance());
      ((TextView)this.mLCRMView.findViewById(2131492981)).setText(paramString3 + " ");
      this.mLCRMView.findViewById(2131492983).setOnClickListener(this);
      this.mLCRMView.findViewById(2131492984).setOnClickListener(this);
      return;
      if ((!paramString1.toLowerCase().startsWith("http://")) && (!paramString1.toLowerCase().startsWith("https://")))
      {
        paramString1 = "http://" + paramString4;
        continue;
        this.mLCRMView.findViewById(2131492987).setOnClickListener(this);
        EditText localEditText = (EditText)this.mLCRMView.findViewById(2131492991);
        localEditText.setOnEditorActionListener(new TextView.OnEditorActionListener()
        {
          public boolean onEditorAction(TextView paramAnonymousTextView, int paramAnonymousInt, KeyEvent paramAnonymousKeyEvent)
          {
            if (paramAnonymousInt == 6)
            {
              ((InputMethodManager)ARLCRMDlg.this.mContext.getSystemService("input_method")).hideSoftInputFromWindow(paramAnonymousTextView.getWindowToken(), 0);
              paramAnonymousKeyEvent = ((EditText)ARLCRMDlg.this.mLCRMView.findViewById(2131492990)).getText().toString();
              paramAnonymousTextView = paramAnonymousTextView.getText().toString();
              ARLCRMDlg.this.setCredentials(paramAnonymousKeyEvent, paramAnonymousTextView);
              return true;
            }
            return false;
          }
        });
        if ((paramString2 != null) && (!paramString2.equals(""))) {
          localEditText.setHint(paramString2);
        }
        this.mLCRMView.findViewById(2131492992).setOnClickListener(this);
        this.mLCRMView.findViewById(2131492993).setOnClickListener(this);
        paramString2 = (EditText)this.mLCRMView.findViewById(2131492990);
        if ((paramString1 != null) && (!paramString1.equals(""))) {
          paramString2.setHint(paramString1);
        }
        paramString2.setOnFocusChangeListener(new View.OnFocusChangeListener()
        {
          public void onFocusChange(View paramAnonymousView, boolean paramAnonymousBoolean)
          {
            if (paramAnonymousBoolean) {
              ARLCRMDlg.this.getWindow().setSoftInputMode(5);
            }
          }
        });
        if (paramBoolean2)
        {
          paramString2.setHintTextColor(-65536);
          localEditText.setHintTextColor(-65536);
          getWindow().getAttributes().windowAnimations = 2131099660;
        }
        ((TextView)this.mLCRMView.findViewById(2131492989)).setText(paramString3 + " ");
        if (paramString4 != null)
        {
          paramString1 = paramString4.trim();
          if (!paramString1.equals("")) {}
        }
        else
        {
          paramString1 = this.mContext.getString(2131361960);
        }
        label580:
        for (;;)
        {
          paramString2 = (TextView)this.mLCRMView.findViewById(2131492995);
          paramString2.setText(Html.fromHtml(String.format(this.mContext.getResources().getString(2131361967), new Object[] { paramString3, paramString1 })));
          paramString2.setMovementMethod(LinkMovementMethod.getInstance());
          paramString1 = (TextView)this.mLCRMView.findViewById(2131492997);
          if (paramString5 == null)
          {
            paramString1.setVisibility(8);
            this.mLCRMView.findViewById(2131492996).setVisibility(8);
          }
          for (;;)
          {
            this.mLCRMView.findViewById(2131492998).setOnClickListener(this);
            return;
            if ((paramString1.toLowerCase().startsWith("http://")) || (paramString1.toLowerCase().startsWith("https://"))) {
              break label580;
            }
            paramString1 = "http://" + paramString4;
            break;
            paramString1.setText(paramString5);
          }
        }
      }
    }
  }
  
  public void cancel()
  {
    dismiss();
    if (this.mEDCSecurityHandlerInstance != 0L)
    {
      setLCRMDialogWasCancelled(this.mEDCSecurityHandlerInstance);
      this.mEDCSecurityHandlerInstance = 0L;
    }
  }
  
  public void onBackPressed()
  {
    View localView;
    if (this.mLCRMAnonymous)
    {
      localView = this.mLCRMView.findViewById(2131492978);
      if (!localView.isShown()) {
        break label42;
      }
      cancel();
    }
    label42:
    while (!this.mLCRMView.findViewById(2131492994).isShown())
    {
      return;
      localView = this.mLCRMView.findViewById(2131492985);
      break;
    }
    flipAuthView();
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
      return;
    case 2131492992: 
      setCredentials(((EditText)this.mLCRMView.findViewById(2131492990)).getText().toString(), ((EditText)this.mLCRMView.findViewById(2131492991)).getText().toString());
      return;
    case 2131492983: 
      setCredentials("", "");
      return;
    case 2131492984: 
    case 2131492993: 
      cancel();
      return;
    }
    flipAuthView();
  }
  
  public void setCredentials(String paramString1, String paramString2)
  {
    dismiss();
    if (this.mEDCSecurityHandlerInstance != 0L)
    {
      setLCRMCredentials(this.mEDCSecurityHandlerInstance, paramString1, paramString2);
      this.mEDCSecurityHandlerInstance = 0L;
    }
  }
  
  public void show(long paramLong, boolean paramBoolean1, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, boolean paramBoolean2)
  {
    this.mEDCSecurityHandlerInstance = paramLong;
    this.mLCRMAnonymous = paramBoolean1;
    LayoutInflater localLayoutInflater = LayoutInflater.from(this.mContext);
    if (paramBoolean1) {}
    for (this.mLCRMView = localLayoutInflater.inflate(2130903063, null);; this.mLCRMView = localLayoutInflater.inflate(2130903064, null))
    {
      setView(this.mLCRMView);
      setUIControls(paramBoolean1, paramString1, paramString2, paramString3, paramString4, paramString5, paramBoolean2);
      show();
      return;
    }
  }
}
