package com.adobe.reader;

class PARTileKey
{
  public static final int kInMemory = 1;
  public static final int kOnDisk = 0;
  public static final int kPage = 0;
  public static final int kPrecisionFactor = 10000;
  public static final int kThumbnail = 1;
  public int mHeight;
  public int mMemoryInfo;
  public int mPage;
  public int mTileType;
  public int mViewMode;
  public int mWidth;
  public int mXPos;
  public int mYPos;
  public double mZoomLevel;
  
  PARTileKey(int paramInt1, int paramInt2, double paramDouble, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7, int paramInt8)
  {
    this.mXPos = paramInt1;
    this.mYPos = paramInt2;
    this.mZoomLevel = paramDouble;
    this.mPage = paramInt3;
    this.mViewMode = paramInt4;
    this.mWidth = paramInt5;
    this.mHeight = paramInt6;
    this.mMemoryInfo = paramInt7;
    this.mTileType = paramInt8;
  }
  
  public boolean equals(Object paramObject)
  {
    if ((paramObject == null) || (getClass() != paramObject.getClass())) {}
    double d1;
    double d2;
    do
    {
      return false;
      paramObject = (PARTileKey)paramObject;
      d1 = (int)(this.mZoomLevel * 10000.0D) / 10000.0D;
      d2 = (int)(paramObject.mZoomLevel * 10000.0D) / 10000.0D;
    } while ((this.mMemoryInfo != paramObject.mMemoryInfo) || (this.mTileType != paramObject.mTileType) || (this.mWidth != paramObject.mWidth) || (this.mHeight != paramObject.mHeight) || (this.mViewMode != paramObject.mViewMode) || (this.mPage != paramObject.mPage) || (d1 != d2) || (this.mXPos != paramObject.mXPos) || (this.mYPos != paramObject.mYPos));
    return true;
  }
  
  public int hashCode()
  {
    int i = this.mXPos;
    int j = this.mYPos;
    int k = this.mPage;
    int m = this.mViewMode;
    int n = this.mWidth;
    int i1 = this.mHeight;
    int i2 = this.mMemoryInfo;
    int i3 = this.mTileType;
    long l = Double.doubleToLongBits((int)(this.mZoomLevel * 10000.0D) / 10000.0D);
    return ((((((((i + 527) * 31 + j) * 31 + k) * 31 + m) * 31 + n) * 31 + i1) * 31 + i2) * 31 + i3) * 31 + (int)(l ^ l >>> 32);
  }
}
