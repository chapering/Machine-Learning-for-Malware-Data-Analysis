package com.adobe.reader;

import android.view.KeyEvent;
import android.view.View;
import android.widget.RelativeLayout;

public class ARWidgetToolbars
{
  private static long sWidgetHandler = 0L;
  
  public ARWidgetToolbars() {}
  
  public static void clearWidget()
  {
    clearWidget(sWidgetHandler);
  }
  
  private static native void clearWidget(long paramLong);
  
  private static native void deactivateWidget(long paramLong);
  
  private static native boolean hasNextWidget(long paramLong);
  
  private static native boolean hasPreviousWidget(long paramLong);
  
  public static void hideToolbars(ARViewer paramARViewer)
  {
    if (sWidgetHandler != 0L)
    {
      paramARViewer.popBackButtonHandler();
      paramARViewer.getToolbar().popView();
      paramARViewer.unlockToolbar();
      ARUtils.hideKeyboard(paramARViewer.getPageView());
      sWidgetHandler = 0L;
    }
  }
  
  public static void nextWidget()
  {
    nextWidget(sWidgetHandler);
    updatePrevNextButtons();
  }
  
  private static native void nextWidget(long paramLong);
  
  public static boolean onKey(View paramView, int paramInt, KeyEvent paramKeyEvent, boolean paramBoolean)
  {
    paramView = (DocumentToolbar)ARViewer.getCurrentActivity().findViewById(2131492885);
    if (paramKeyEvent.getAction() == 0) {
      switch (paramInt)
      {
      }
    }
    do
    {
      return false;
      if (paramKeyEvent.isShiftPressed()) {
        if (paramView.findViewById(2131493152).isEnabled()) {
          previousWidget();
        }
      }
      for (;;)
      {
        return true;
        if (paramView.findViewById(2131493151).isEnabled()) {
          nextWidget();
        }
      }
    } while (paramBoolean);
    if (paramView.findViewById(2131493151).isEnabled()) {
      nextWidget();
    }
    return true;
  }
  
  public static void previousWidget()
  {
    previousWidget(sWidgetHandler);
    updatePrevNextButtons();
  }
  
  private static native void previousWidget(long paramLong);
  
  public static void showToolbars(ARViewer paramARViewer, long paramLong)
  {
    if (sWidgetHandler == 0L)
    {
      ((RelativeLayout)paramARViewer.findViewById(2131492883)).setVisibility(0);
      paramARViewer.lockToolbar();
      paramARViewer.getToolbar().pushView(2130903090);
      paramARViewer.pushBackButtonHandler(new ARViewer.BackButtonHandler()
      {
        public void onBackPressed()
        {
          if (ARWidgetToolbars.sWidgetHandler != 0L) {
            ARWidgetToolbars.deactivateWidget(ARWidgetToolbars.sWidgetHandler);
          }
        }
      });
      paramARViewer.getPageView().addOnCloseDocumentListener(new PageView.OnCloseDocumentListener()
      {
        public void onCloseDocument()
        {
          if (ARWidgetToolbars.sWidgetHandler != 0L) {
            ARWidgetToolbars.deactivateWidget(ARWidgetToolbars.sWidgetHandler);
          }
        }
      });
      sWidgetHandler = paramLong;
    }
    updatePrevNextButtons();
  }
  
  public static void submit()
  {
    submit(sWidgetHandler);
  }
  
  private static native void submit(long paramLong);
  
  public static void updatePrevNextButtons()
  {
    DocumentToolbar localDocumentToolbar = (DocumentToolbar)ARViewer.getCurrentActivity().findViewById(2131492885);
    boolean bool = hasNextWidget(sWidgetHandler);
    localDocumentToolbar.findViewById(2131493151).setEnabled(bool);
    bool = hasPreviousWidget(sWidgetHandler);
    localDocumentToolbar.findViewById(2131493152).setEnabled(bool);
  }
}
