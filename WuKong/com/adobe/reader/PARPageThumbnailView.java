package com.adobe.reader;

import android.content.Context;
import android.graphics.Bitmap;
import android.util.AttributeSet;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.TextView;
import java.io.File;

public class PARPageThumbnailView
  extends GridView
{
  private ARViewer mARViewer = null;
  private boolean mAreThumbnailsVisible = false;
  protected int mThumbnailHeight = 0;
  private PARThumbnailTileAdapter mThumbnailTileAdapter = null;
  protected int mThumbnailWidth = 0;
  
  public PARPageThumbnailView(Context paramContext)
  {
    super(paramContext);
    this.mARViewer = ((ARViewer)paramContext);
  }
  
  public PARPageThumbnailView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    this.mARViewer = ((ARViewer)paramContext);
  }
  
  public boolean areThumbnailsVisible()
  {
    return this.mAreThumbnailsVisible;
  }
  
  protected void displayThumbnails()
  {
    if (areThumbnailsVisible()) {
      return;
    }
    initializePageThumbnailView();
    this.mARViewer.findViewById(2131492872).setVisibility(4);
    this.mARViewer.findViewById(2131493118).setVisibility(0);
    this.mAreThumbnailsVisible = true;
    int k;
    int i;
    int j;
    if (this.mThumbnailWidth == 0)
    {
      k = this.mARViewer.getPageView().getDocViewManager().getPageWidth(0);
      int m = this.mARViewer.getPageView().getDocViewManager().getPageHeight(0);
      i = this.mARViewer.getPageView().getWidth();
      j = this.mARViewer.getPageView().getHeight();
      if (i < j) {
        if (!this.mARViewer.isRunningOnTablet()) {
          break label140;
        }
      }
      label140:
      for (i = (int)(i * 0.25D);; i = (int)(i * 0.4D))
      {
        if (k > 0) {
          break label151;
        }
        hideThumbnails();
        return;
        i = j;
        break;
      }
      label151:
      j = m * i / k;
      if (m >= k) {
        break label222;
      }
      if (m <= 0)
      {
        hideThumbnails();
        return;
      }
      k = k * i / m;
      j = i;
    }
    for (;;)
    {
      this.mThumbnailWidth = k;
      this.mThumbnailHeight = j;
      setColumnWidth(this.mThumbnailWidth);
      post(new Runnable()
      {
        public void run()
        {
          int i = PARPageThumbnailView.this.mARViewer.getPageView().getCurrentPageNumber();
          PARPageThumbnailView.this.setSelection(i);
          PARPageThumbnailView.this.requestFocus();
        }
      });
      this.mThumbnailTileAdapter.notifyDataSetChanged();
      return;
      label222:
      k = i;
    }
  }
  
  protected void hideThumbnails()
  {
    if (areThumbnailsVisible())
    {
      this.mARViewer.findViewById(2131492872).setVisibility(0);
      this.mARViewer.findViewById(2131493118).setVisibility(8);
      this.mAreThumbnailsVisible = false;
    }
  }
  
  public void initializePageThumbnailView()
  {
    this.mThumbnailTileAdapter = new PARThumbnailTileAdapter(this.mARViewer, 2130903084);
    setAdapter(this.mThumbnailTileAdapter);
    setPadding(8, 0, 8, 0);
    Object localObject = new File(this.mARViewer.getCurrentDocPath());
    if ((localObject != null) && (((File)localObject).exists()))
    {
      localObject = ((File)localObject).getName();
      TextView localTextView = (TextView)this.mARViewer.findViewById(2131493124);
      localTextView.setText((CharSequence)localObject);
      localTextView.setTypeface(null, 1);
    }
    setOnItemClickListener(new AdapterView.OnItemClickListener()
    {
      public void onItemClick(AdapterView<?> paramAnonymousAdapterView, View paramAnonymousView, int paramAnonymousInt, long paramAnonymousLong)
      {
        PARPageThumbnailView.this.navigateToPage(paramAnonymousInt);
      }
    });
  }
  
  protected void navigateToPage(int paramInt)
  {
    this.mARViewer.getPageView().gotoPage(paramInt);
    this.mARViewer.hideThumbnails();
  }
  
  void setImageBitmapForChild(int paramInt, Bitmap paramBitmap)
  {
    int i = getChildCount();
    paramInt -= getFirstVisiblePosition();
    if ((paramInt >= 0) && (paramInt < i)) {
      ((ImageView)getChildAt(paramInt).findViewById(2131493129)).setImageBitmap(paramBitmap);
    }
  }
}
