package com.adobe.reader;

import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.TextView.OnEditorActionListener;

public class ARGotoPageDialog
  extends AlertDlg
  implements View.OnClickListener
{
  private static int DEFAULT_HINT_TEXT_COLOR;
  private ARViewer mContext;
  private PageView mPageView;
  
  public ARGotoPageDialog(ARViewer paramARViewer)
  {
    super(paramARViewer);
    this.mContext = paramARViewer;
    this.mPageView = this.mContext.getPageView();
    View localView = ((LayoutInflater)paramARViewer.getSystemService("layout_inflater")).inflate(2130903057, null);
    if (localView == null) {
      return;
    }
    setTitle(paramARViewer.getResources().getString(2131362008));
    setView(localView);
    setIcon(0);
    localView.findViewById(2131492970).setOnClickListener(this);
    localView.findViewById(2131492971).setOnClickListener(this);
    paramARViewer = (EditText)localView.findViewById(2131492969);
    paramARViewer.setOnFocusChangeListener(new View.OnFocusChangeListener()
    {
      public void onFocusChange(View paramAnonymousView, boolean paramAnonymousBoolean)
      {
        if (paramAnonymousBoolean) {
          ARGotoPageDialog.this.getWindow().setSoftInputMode(5);
        }
      }
    });
    paramARViewer.addTextChangedListener(new TextWatcher()
    {
      public void afterTextChanged(Editable paramAnonymousEditable)
      {
        if (paramAnonymousEditable.length() == 0)
        {
          ARGotoPageDialog.this.findViewById(2131492970).setEnabled(false);
          return;
        }
        ARGotoPageDialog.this.findViewById(2131492970).setEnabled(true);
      }
      
      public void beforeTextChanged(CharSequence paramAnonymousCharSequence, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3) {}
      
      public void onTextChanged(CharSequence paramAnonymousCharSequence, int paramAnonymousInt1, int paramAnonymousInt2, int paramAnonymousInt3) {}
    });
    paramARViewer.setOnEditorActionListener(new TextView.OnEditorActionListener()
    {
      public boolean onEditorAction(TextView paramAnonymousTextView, int paramAnonymousInt, KeyEvent paramAnonymousKeyEvent)
      {
        if ((paramAnonymousKeyEvent != null) && (paramAnonymousKeyEvent.getKeyCode() == 66)) {
          ARGotoPageDialog.this.gotoPage();
        }
        return false;
      }
    });
    paramARViewer.setHint(this.mContext.getString(2131362009).replace("$FIRST_PAGE_NUM$", "1").replace("$NUM_PAGES$", this.mPageView.getNumPages()));
    DEFAULT_HINT_TEXT_COLOR = paramARViewer.getHintTextColors().getDefaultColor();
  }
  
  private void gotoPage()
  {
    EditText localEditText = (EditText)findViewById(2131492969);
    String str = localEditText.getText().toString();
    if ((str != null) && (str.length() != 0)) {}
    try
    {
      i = Integer.parseInt(str);
      if ((i > 0) && (i <= this.mPageView.getNumPages()))
      {
        this.mPageView.gotoPage(i - 1);
        dismiss();
        return;
      }
    }
    catch (NumberFormatException localNumberFormatException)
    {
      for (;;)
      {
        int i = 0;
      }
      localEditText.setText("");
      localEditText.setHintTextColor(-65536);
    }
  }
  
  public void dismiss()
  {
    if (isShowing())
    {
      EditText localEditText = (EditText)findViewById(2131492969);
      InputMethodManager localInputMethodManager = (InputMethodManager)this.mContext.getSystemService("input_method");
      if (localInputMethodManager.isActive()) {
        localInputMethodManager.hideSoftInputFromWindow(localEditText.getWindowToken(), 0);
      }
    }
    super.dismiss();
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
      return;
    case 2131492970: 
      gotoPage();
      return;
    }
    dismiss();
  }
  
  public void show()
  {
    super.show();
    EditText localEditText = (EditText)findViewById(2131492969);
    localEditText.setText("");
    localEditText.setHintTextColor(DEFAULT_HINT_TEXT_COLOR);
  }
}
