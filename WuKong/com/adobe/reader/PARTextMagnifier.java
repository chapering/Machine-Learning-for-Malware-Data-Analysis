package com.adobe.reader;

import android.app.Activity;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Rect;
import android.os.Handler;
import android.os.Message;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageView;
import android.widget.RelativeLayout.LayoutParams;

class PARTextMagnifier
  extends ImageView
{
  private static final int GRAY_REGION_PADDING = 6;
  private static final int MAGNIFIER_HEIGHT = 120;
  private static final int MAGNIFIER_WIDTH = 200;
  private static final int REQUEST_LAYOUT_MSG = 1;
  private static final int SELECTED_REGION_HEIGHT = 80;
  private static final int SELECTED_REGION_WIDTH = 120;
  private Bitmap mBitmap;
  private Rect mDestRect;
  private PageView mPageView;
  private Handler mRequestLayoutHandler;
  private Rect mSrcRect;
  
  public PARTextMagnifier(PageView paramPageView)
  {
    super(paramPageView.getContext());
    this.mPageView = paramPageView;
    this.mDestRect = new Rect(6, 6, 194, 114);
    this.mRequestLayoutHandler = new Handler()
    {
      public void handleMessage(Message paramAnonymousMessage)
      {
        switch (paramAnonymousMessage.what)
        {
        }
        for (;;)
        {
          super.handleMessage(paramAnonymousMessage);
          return;
          PARTextMagnifier.this.requestLayout();
        }
      }
    };
  }
  
  private void attachToMainView()
  {
    ((ViewGroup)((Activity)this.mPageView.getContext()).findViewById(2131492871)).addView(this, new RelativeLayout.LayoutParams(0, 0));
  }
  
  private void drawBorder(Canvas paramCanvas, Paint paramPaint, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    paramCanvas.drawLine(paramInt1, paramInt2, paramInt3, paramInt2, paramPaint);
    paramCanvas.drawLine(paramInt3, paramInt2, paramInt3, paramInt4, paramPaint);
    paramCanvas.drawLine(paramInt3, paramInt4, paramInt1, paramInt4, paramPaint);
    paramCanvas.drawLine(paramInt1, paramInt4, paramInt1, paramInt2, paramPaint);
  }
  
  private void removeFromMainView()
  {
    ((ViewGroup)((Activity)this.mPageView.getContext()).findViewById(2131492871)).removeView(this);
  }
  
  private void setPositionInMainView(int paramInt1, int paramInt2)
  {
    Object localObject = (RelativeLayout.LayoutParams)getLayoutParams();
    ((RelativeLayout.LayoutParams)localObject).width = 200;
    ((RelativeLayout.LayoutParams)localObject).height = 120;
    ((RelativeLayout.LayoutParams)localObject).leftMargin = paramInt1;
    ((RelativeLayout.LayoutParams)localObject).topMargin = paramInt2;
    setLayoutParams((ViewGroup.LayoutParams)localObject);
    this.mRequestLayoutHandler.removeMessages(1);
    localObject = Message.obtain();
    ((Message)localObject).what = 1;
    this.mRequestLayoutHandler.sendMessage((Message)localObject);
  }
  
  protected void onDraw(Canvas paramCanvas)
  {
    super.onDraw(paramCanvas);
    if (this.mBitmap == null) {
      return;
    }
    paramCanvas.drawColor(-1);
    Paint localPaint = new Paint(2);
    paramCanvas.drawBitmap(this.mBitmap, this.mSrcRect, this.mDestRect, localPaint);
    localPaint = new Paint();
    localPaint.setColor(-16777216);
    localPaint.setStrokeWidth(2.0F);
    drawBorder(paramCanvas, localPaint, 5, 5, 195, 115);
    localPaint.setStrokeWidth(1.0F);
    drawBorder(paramCanvas, localPaint, 0, 0, getWidth() - 1, getHeight() - 1);
  }
  
  public void setPosition(int paramInt1, int paramInt2)
  {
    if (isShown())
    {
      this.mSrcRect = new Rect(paramInt1 - 60, paramInt2 - 40, paramInt1 + 60, paramInt2 + 40);
      this.mBitmap = this.mPageView.getDrawingCache(true);
      if (this.mBitmap != null) {}
    }
    else
    {
      return;
    }
    setPositionInMainView(paramInt1 - 100, (int)(paramInt2 - 156.0D));
  }
  
  public void showMagnifier(boolean paramBoolean)
  {
    if (paramBoolean)
    {
      attachToMainView();
      setVisibility(0);
      this.mPageView.setDrawingCacheEnabled(true);
      this.mPageView.buildDrawingCache(true);
      return;
    }
    setVisibility(8);
    removeFromMainView();
    this.mPageView.setDrawingCacheEnabled(false);
  }
}
