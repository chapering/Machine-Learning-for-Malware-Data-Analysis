package com.adobe.reader;

import java.util.HashMap;

class SynchronizedTileCache
{
  private HashMap<PARTileKey, PARTile> mMap;
  
  public SynchronizedTileCache(int paramInt, float paramFloat)
  {
    this.mMap = new HashMap(paramInt, paramFloat);
  }
  
  public void clear()
  {
    try
    {
      this.mMap.clear();
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public PARTile getTile(PARTileKey paramPARTileKey, boolean paramBoolean)
  {
    synchronized (this.mMap)
    {
      PARTile localPARTile2 = (PARTile)this.mMap.get(paramPARTileKey);
      PARTile localPARTile1 = localPARTile2;
      if (localPARTile2 == null)
      {
        localPARTile1 = localPARTile2;
        if (paramBoolean)
        {
          localPARTile2 = new PARTile(paramPARTileKey.mWidth, paramPARTileKey.mHeight, paramPARTileKey);
          localPARTile1 = localPARTile2;
          if (localPARTile2.getState() == 2)
          {
            this.mMap.put(paramPARTileKey, localPARTile2);
            localPARTile2.addRef();
            localPARTile1 = localPARTile2;
          }
        }
      }
      return localPARTile1;
    }
  }
  
  public PARTile remove(PARTileKey paramPARTileKey)
  {
    try
    {
      paramPARTileKey = (PARTile)this.mMap.remove(paramPARTileKey);
      return paramPARTileKey;
    }
    finally
    {
      paramPARTileKey = finally;
      throw paramPARTileKey;
    }
  }
}
