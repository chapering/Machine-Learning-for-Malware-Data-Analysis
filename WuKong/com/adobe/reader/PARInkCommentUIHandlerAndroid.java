package com.adobe.reader;

import android.graphics.Color;
import android.graphics.RectF;
import android.view.View;
import java.util.ArrayList;

public class PARInkCommentUIHandlerAndroid
{
  public static final int MODE_FREE_FORM = 1;
  public static final int MODE_INK_SIGNATURE = 2;
  public static final int MODE_NONE = 0;
  ARViewer mContext = null;
  private OverLayView mDrawingView = null;
  private PARInkSignatureCommentUIHandlerAndroid mInkSignatureCommentHandler;
  private long mJNIObj;
  private PageView mPageView = null;
  
  public PARInkCommentUIHandlerAndroid() {}
  
  public PARInkCommentUIHandlerAndroid(long paramLong, ARViewer paramARViewer)
  {
    this.mJNIObj = create(paramLong);
    cacheObject(this.mJNIObj);
    this.mContext = paramARViewer;
    this.mPageView = this.mContext.getPageView();
    this.mInkSignatureCommentHandler = new PARInkSignatureCommentUIHandlerAndroid(this, this.mContext);
    this.mDrawingView = ((OverLayView)paramARViewer.findViewById(2131492875));
  }
  
  private static ArrayList<ArrayList<Float>> DeflattenInklist(float[] paramArrayOfFloat, int paramInt1, int paramInt2)
  {
    ArrayList localArrayList1 = new ArrayList();
    int i = 0;
    if (i >= paramArrayOfFloat.length) {
      return localArrayList1;
    }
    int j = i + 1;
    int m = (int)paramArrayOfFloat[i];
    ArrayList localArrayList2 = new ArrayList();
    int k = j;
    i = j;
    for (;;)
    {
      if ((k >= m + j) || (k >= paramArrayOfFloat.length))
      {
        localArrayList1.add(localArrayList2);
        break;
      }
      localArrayList2.add(Float.valueOf(paramArrayOfFloat[k] - paramInt1));
      localArrayList2.add(Float.valueOf(paramArrayOfFloat[(k + 1)] - paramInt2));
      k += 2;
      i += 2;
    }
  }
  
  private static float[] FlattenInkList(ArrayList<ArrayList<Float>> paramArrayList, int paramInt1, int paramInt2)
  {
    int m = paramArrayList.size();
    int i = 0;
    int j = 0;
    float[] arrayOfFloat;
    if (i >= m)
    {
      arrayOfFloat = new float[j + m];
      j = 0;
      i = 0;
    }
    ArrayList localArrayList;
    int k;
    for (;;)
    {
      if (j >= m)
      {
        return arrayOfFloat;
        j += ((ArrayList)paramArrayList.get(i)).size();
        i += 1;
        break;
      }
      localArrayList = (ArrayList)paramArrayList.get(j);
      int n = localArrayList.size();
      arrayOfFloat[i] = n;
      k = 0;
      i += 1;
      if (k < n) {
        break label112;
      }
      j += 1;
    }
    label112:
    if (k % 2 == 0)
    {
      arrayOfFloat[i] = (((Float)localArrayList.get(k)).floatValue() + paramInt1);
      i += 1;
    }
    for (;;)
    {
      k += 1;
      break;
      arrayOfFloat[i] = (((Float)localArrayList.get(k)).floatValue() + paramInt2);
      i += 1;
    }
  }
  
  private native void cacheObject(long paramLong);
  
  private native long create(long paramLong);
  
  private static void createInkComment(long paramLong, ArrayList<ArrayList<Float>> paramArrayList, RectF paramRectF, int paramInt1, int paramInt2, int paramInt3, float paramFloat, int paramInt4, String paramString)
  {
    if (paramArrayList.isEmpty()) {
      return;
    }
    paramArrayList = FlattenInkList(paramArrayList, paramInt1, paramInt2);
    paramRectF.offset(paramInt1, paramInt2);
    float f1 = Color.red(paramInt4) / 255.0F;
    float f2 = Color.green(paramInt4) / 255.0F;
    float f3 = Color.blue(paramInt4) / 255.0F;
    float f4 = Color.alpha(paramInt4) / 255.0F;
    createNewInkComment(paramLong, paramArrayList, paramArrayList.length, paramRectF, paramString, paramInt3, f1, f2, f3, f4, paramFloat);
  }
  
  private native void createInkCommentFromContextMenu(long paramLong);
  
  private native void createInkSignatureFromContextMenu(long paramLong, int paramInt1, int paramInt2, int paramInt3);
  
  private static native void createNewInkComment(long paramLong, float[] paramArrayOfFloat, int paramInt1, RectF paramRectF, String paramString, int paramInt2, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5);
  
  private native int getInkToolMode(long paramLong);
  
  private native float getStrokeWidthInDeviceSpace(long paramLong, float paramFloat, int paramInt);
  
  private native boolean setInkToolMode(long paramLong, int paramInt);
  
  public void clearUI()
  {
    ARCommentManager localARCommentManager = this.mPageView.getDocViewManager().getCommentManager();
    switch (getInkToolMode(this.mJNIObj))
    {
    }
    for (;;)
    {
      setInkToolMode(0);
      return;
      if (this.mDrawingView.getVisibility() == 0)
      {
        this.mContext.getToolbar().popView();
        this.mContext.enableClickOnPageNumberIndicator();
        this.mContext.popBackButtonHandler();
      }
      this.mDrawingView.clear();
      this.mDrawingView.setVisibility(8);
      localARCommentManager.resetActiveTool();
      continue;
      this.mInkSignatureCommentHandler.clearUI();
    }
  }
  
  public void continueCreation()
  {
    ARCommentManager localARCommentManager = this.mPageView.getDocViewManager().getCommentManager();
    switch (getInkToolMode(this.mJNIObj))
    {
    }
    for (;;)
    {
      setInkToolMode(0);
      return;
      this.mContext.getToolbar().popView();
      this.mContext.enableClickOnPageNumberIndicator();
      this.mContext.popBackButtonHandler();
      int i = this.mPageView.getDocViewManager().getPageAtOffset(this.mDrawingView.getStartPointY() + this.mPageView.getScrollY());
      createInkComment(this.mDrawingView, 0, 0, i, this.mPageView.getDocViewManager().getCommentManager().getAnnotStrokeWidthFromPreferences(6));
      this.mDrawingView.setVisibility(8);
      localARCommentManager.resetActiveTool();
      continue;
      this.mInkSignatureCommentHandler.creationDone();
      localARCommentManager.resetActiveTool();
    }
  }
  
  public void createInkComment(OverLayView paramOverLayView, int paramInt1, int paramInt2, int paramInt3, float paramFloat)
  {
    String str = this.mPageView.getDocViewManager().getCommentManager().getAuthorNameFromPreferences();
    createInkComment(this.mJNIObj, paramOverLayView.mInkList, new RectF(paramOverLayView.mRectLeft, paramOverLayView.mRectTop, paramOverLayView.mRectRight, paramOverLayView.mRectBottom), paramInt1, paramInt2, paramInt3, paramFloat, paramOverLayView.getStrokeColor(), str);
    paramOverLayView.clear();
  }
  
  public void createInkComment(ArrayList<ArrayList<Float>> paramArrayList, RectF paramRectF, int paramInt1, int paramInt2, int paramInt3, float paramFloat, int paramInt4)
  {
    String str = this.mPageView.getDocViewManager().getCommentManager().getAuthorNameFromPreferences();
    createInkComment(this.mJNIObj, paramArrayList, paramRectF, paramInt1, paramInt2, paramInt3, paramFloat, paramInt4, str);
  }
  
  public void createInkCommentFromContextMenu()
  {
    createInkCommentFromContextMenu(this.mJNIObj);
  }
  
  public void createInkSignatureFromContextMenu(int paramInt1, int paramInt2, int paramInt3)
  {
    createInkSignatureFromContextMenu(this.mJNIObj, paramInt1, paramInt2, paramInt3);
  }
  
  void creationDone()
  {
    if (getInkToolMode(this.mJNIObj) == 2) {
      this.mInkSignatureCommentHandler.onDonePressed();
    }
    if (this.mPageView.getDocViewManager().getCommentManager().verifyAuthorName(6)) {
      continueCreation();
    }
  }
  
  public void enterFreeFormDrawingMode()
  {
    if (getInkToolMode(this.mJNIObj) != 1) {
      return;
    }
    this.mContext.getToolbar().pushView(2130903070);
    this.mContext.disableClickOnPageNumberIndicator();
    this.mContext.pushBackButtonHandler(new ARViewer.BackButtonHandler()
    {
      public void onBackPressed()
      {
        PARInkCommentUIHandlerAndroid.this.clearUI();
      }
    });
    this.mPageView.addOnCloseDocumentListener(new PageView.OnCloseDocumentListener()
    {
      public void onCloseDocument()
      {
        PARInkCommentUIHandlerAndroid.this.clearUI();
      }
    });
    this.mContext.hideBottomBar();
    this.mDrawingView.initializeOverlayView();
    int i = this.mPageView.getDocViewManager().getCommentManager().getAnnotColorFromPreferences(6);
    float f = this.mPageView.getDocViewManager().getCommentManager().getAnnotOpacityFromPreferences(6);
    this.mDrawingView.setStrokeColor((int)(f * 255.0F), Color.red(i), Color.green(i), Color.blue(i));
    i = this.mPageView.getDocViewManager().getCommentManager().getAnnotStrokeWidthFromPreferences(6);
    this.mDrawingView.setStrokeWidthInDocSpace(i);
    this.mDrawingView.setVisibility(0);
  }
  
  public void enterInkSignatureCreationMode(int paramInt1, int paramInt2, int paramInt3)
  {
    if (getInkToolMode(this.mJNIObj) != 2) {
      return;
    }
    this.mInkSignatureCommentHandler.setSignatureCreationPoint(paramInt1, paramInt2, paramInt3);
    this.mInkSignatureCommentHandler.enterInkSignatureDrawingMode();
  }
  
  void freeformRedo()
  {
    this.mDrawingView.redoGesture();
  }
  
  void freeformUndo()
  {
    this.mDrawingView.undoGesture();
  }
  
  public float getStrokeWidthInDeviceSpace(float paramFloat, int paramInt)
  {
    return getStrokeWidthInDeviceSpace(this.mJNIObj, paramFloat, paramInt);
  }
  
  public View getUIViewForMoveResize(float[] paramArrayOfFloat, int[] paramArrayOfInt, int paramInt, float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    paramArrayOfFloat = DeflattenInklist(paramArrayOfFloat, paramArrayOfInt[0], paramArrayOfInt[1]);
    OverLayView localOverLayView = new OverLayView(this.mContext);
    localOverLayView.initializeInkList(paramArrayOfFloat);
    localOverLayView.setEditable(false);
    localOverLayView.setStartPointY(paramArrayOfInt[1]);
    localOverLayView.setStrokeWidthInDocSpace(paramFloat5);
    localOverLayView.setStrokeColor((int)(paramFloat4 * 255.0F), (int)(paramFloat1 * 255.0F), (int)(paramFloat2 * 255.0F), (int)(255.0F * paramFloat3));
    return localOverLayView;
  }
  
  public boolean setInkToolMode(int paramInt)
  {
    return setInkToolMode(this.mJNIObj, paramInt);
  }
}
