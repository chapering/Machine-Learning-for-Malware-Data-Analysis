package com.adobe.reader;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.os.ParcelFileDescriptor;
import android.webkit.MimeTypeMap;
import com.adobe.reader.cloud.CloudUtilities;
import java.io.File;

public class ARContentProvider
  extends ContentProvider
{
  private MimeTypeMap mMimeTypeMap;
  
  public ARContentProvider() {}
  
  public int delete(Uri paramUri, String paramString, String[] paramArrayOfString)
  {
    return 0;
  }
  
  public String getType(Uri paramUri)
  {
    paramUri = new File(paramUri.getPath()).getName();
    int i = paramUri.lastIndexOf('.');
    if (i == -1) {
      return null;
    }
    paramUri = paramUri.substring(i + 1).toLowerCase();
    return this.mMimeTypeMap.getMimeTypeFromExtension(paramUri);
  }
  
  public Uri insert(Uri paramUri, ContentValues paramContentValues)
  {
    return null;
  }
  
  public boolean onCreate()
  {
    this.mMimeTypeMap = MimeTypeMap.getSingleton();
    return true;
  }
  
  public ParcelFileDescriptor openFile(Uri paramUri, String paramString)
  {
    paramUri = paramUri.getPath();
    if (paramUri == null) {
      return null;
    }
    if (!paramUri.startsWith(File.separator)) {
      paramUri = File.separator + paramUri;
    }
    for (;;)
    {
      try
      {
        if (paramUri.startsWith(File.separator + "attachment_extracted_docs"))
        {
          paramString = getContext().getCacheDir().getCanonicalPath();
          paramUri = new File(paramString + paramUri);
          if (!paramUri.getCanonicalPath().startsWith(paramString + File.separator + "attachment_extracted_docs")) {
            break;
          }
          return ParcelFileDescriptor.open(paramUri, 268435456);
        }
        paramUri = new File(CloudUtilities.getAppPrivateExternalDir() + paramUri);
        boolean bool = paramUri.getCanonicalPath().startsWith(CloudUtilities.getAppPrivateExternalDir() + File.separator + ".Skybox.Cache");
        if (!bool) {
          return null;
        }
      }
      catch (Exception paramUri)
      {
        return null;
      }
    }
  }
  
  public Cursor query(Uri paramUri, String[] paramArrayOfString1, String paramString1, String[] paramArrayOfString2, String paramString2)
  {
    return null;
  }
  
  public int update(Uri paramUri, ContentValues paramContentValues, String paramString, String[] paramArrayOfString)
  {
    return 0;
  }
}
