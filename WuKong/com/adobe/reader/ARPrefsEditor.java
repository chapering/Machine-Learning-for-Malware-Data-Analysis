package com.adobe.reader;

import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Build.VERSION;
import android.os.Looper;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class ARPrefsEditor
{
  private SharedPreferences.Editor mPrefEditor;
  
  public ARPrefsEditor(SharedPreferences paramSharedPreferences)
  {
    this.mPrefEditor = paramSharedPreferences.edit();
  }
  
  public void apply()
  {
    if ((Thread.currentThread().getId() == Looper.getMainLooper().getThread().getId()) || (Build.VERSION.SDK_INT <= 8))
    {
      this.mPrefEditor.commit();
      return;
    }
    try
    {
      SharedPreferences.Editor.class.getMethod("apply", new Class[0]).invoke(this.mPrefEditor, new Object[0]);
      return;
    }
    catch (NoSuchMethodException localNoSuchMethodException)
    {
      localNoSuchMethodException = localNoSuchMethodException;
      this.mPrefEditor.commit();
      return;
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      localIllegalArgumentException = localIllegalArgumentException;
      this.mPrefEditor.commit();
      return;
    }
    catch (IllegalAccessException localIllegalAccessException)
    {
      localIllegalAccessException = localIllegalAccessException;
      this.mPrefEditor.commit();
      return;
    }
    catch (InvocationTargetException localInvocationTargetException)
    {
      localInvocationTargetException = localInvocationTargetException;
      this.mPrefEditor.commit();
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public SharedPreferences.Editor clear()
  {
    return this.mPrefEditor.clear();
  }
  
  public SharedPreferences.Editor putBoolean(String paramString, boolean paramBoolean)
  {
    return this.mPrefEditor.putBoolean(paramString, paramBoolean);
  }
  
  public SharedPreferences.Editor putFloat(String paramString, float paramFloat)
  {
    return this.mPrefEditor.putFloat(paramString, paramFloat);
  }
  
  public SharedPreferences.Editor putInt(String paramString, int paramInt)
  {
    return this.mPrefEditor.putInt(paramString, paramInt);
  }
  
  public SharedPreferences.Editor putLong(String paramString, long paramLong)
  {
    return this.mPrefEditor.putLong(paramString, paramLong);
  }
  
  public SharedPreferences.Editor putString(String paramString1, String paramString2)
  {
    return this.mPrefEditor.putString(paramString1, paramString2);
  }
  
  public SharedPreferences.Editor remove(String paramString)
  {
    return this.mPrefEditor.remove(paramString);
  }
}
