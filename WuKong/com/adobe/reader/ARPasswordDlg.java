package com.adobe.reader;

import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnKeyListener;
import android.text.Editable;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnFocusChangeListener;
import android.view.Window;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class ARPasswordDlg
  extends AlertDlg
  implements View.OnClickListener
{
  private static String sPasswd = null;
  private ARViewer mContext;
  private int mDefaultPasswordHintTextColor;
  private boolean mIsFirstPasswdAttempt = true;
  private long mPasswordCallback;
  private View mPasswordView = null;
  
  public ARPasswordDlg(ARViewer paramARViewer)
  {
    super(paramARViewer);
    this.mContext = paramARViewer;
    this.mPasswordView = ((LayoutInflater)paramARViewer.getSystemService("layout_inflater")).inflate(2130903069, null);
    ((Button)this.mPasswordView.findViewById(2131493013)).setOnClickListener(this);
    ((Button)this.mPasswordView.findViewById(2131493014)).setOnClickListener(this);
    setCancelable(false);
    setTitle(2131361972);
    setView(this.mPasswordView);
    setOnKeyListener(new DialogInterface.OnKeyListener()
    {
      public boolean onKey(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt, KeyEvent paramAnonymousKeyEvent)
      {
        if ((66 == paramAnonymousInt) && (paramAnonymousKeyEvent.getAction() == 0))
        {
          if (ARPasswordDlg.this.mPasswordView != null)
          {
            paramAnonymousDialogInterface = (EditText)ARPasswordDlg.this.mPasswordView.findViewById(2131493012);
            ((InputMethodManager)ARPasswordDlg.this.getContext().getSystemService("input_method")).hideSoftInputFromWindow(paramAnonymousDialogInterface.getWindowToken(), 0);
            ARPasswordDlg.sPasswd = paramAnonymousDialogInterface.getText().toString();
            ARPasswordDlg.this.cancel();
            if (ARPasswordDlg.this.mPasswordCallback != 0L) {
              ARPasswordDlg.this.setDocumentPassword(ARPasswordDlg.this.mPasswordCallback, ARPasswordDlg.sPasswd);
            }
          }
          return true;
        }
        if (4 == paramAnonymousInt)
        {
          ARPasswordDlg.this.dismiss();
          return true;
        }
        return false;
      }
    });
    this.mDefaultPasswordHintTextColor = ((EditText)this.mPasswordView.findViewById(2131493012)).getCurrentHintTextColor();
  }
  
  private native void setDocumentPassword(long paramLong, String paramString);
  
  private native void setPasswordDialogWasCancelled(long paramLong);
  
  public void cancel()
  {
    super.dismiss();
  }
  
  public void dismiss()
  {
    if (this.mPasswordView == null) {
      return;
    }
    if (this.mPasswordCallback != 0L)
    {
      setPasswordDialogWasCancelled(this.mPasswordCallback);
      this.mPasswordCallback = 0L;
    }
    getWindow().getAttributes().windowAnimations = 0;
    ((EditText)this.mPasswordView.findViewById(2131493012)).setHintTextColor(this.mDefaultPasswordHintTextColor);
    this.mIsFirstPasswdAttempt = true;
    super.dismiss();
  }
  
  public void getPassword(long paramLong, String paramString)
  {
    if (this.mPasswordView == null) {
      return;
    }
    this.mPasswordCallback = paramLong;
    TextView localTextView = (TextView)this.mPasswordView.findViewById(2131493010);
    EditText localEditText = (EditText)this.mPasswordView.findViewById(2131493012);
    if (!this.mIsFirstPasswdAttempt)
    {
      localEditText.setHintTextColor(-65536);
      getWindow().getAttributes().windowAnimations = 2131099660;
    }
    for (;;)
    {
      localEditText.setText("");
      localEditText.setOnFocusChangeListener(new View.OnFocusChangeListener()
      {
        public void onFocusChange(View paramAnonymousView, boolean paramAnonymousBoolean)
        {
          if (paramAnonymousBoolean) {
            ARPasswordDlg.this.getWindow().setSoftInputMode(5);
          }
        }
      });
      show();
      this.mIsFirstPasswdAttempt = false;
      return;
      localTextView.setText(getContext().getString(2131361841, new Object[] { paramString }));
    }
  }
  
  public void onClick(View paramView)
  {
    switch (paramView.getId())
    {
    default: 
    case 2131493013: 
      do
      {
        return;
        sPasswd = ((EditText)this.mPasswordView.findViewById(2131493012)).getText().toString();
        cancel();
      } while (this.mPasswordCallback == 0L);
      setDocumentPassword(this.mPasswordCallback, sPasswd);
      return;
    }
    dismiss();
  }
  
  public void resetDialog()
  {
    getWindow().getAttributes().windowAnimations = 0;
    ((EditText)this.mPasswordView.findViewById(2131493012)).setHintTextColor(this.mDefaultPasswordHintTextColor);
    this.mIsFirstPasswdAttempt = true;
  }
}
