package com.adobe.reader;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.net.Uri;
import android.view.View;
import java.io.File;

public class ShareMenu
  extends BasePopupMenu
{
  private static final int CLOUD_PRINT = 1;
  public static final String FILEPATH_KEY = "filePath";
  public static final String FLATTENED_KEY = "wasFlattened";
  private static final int SHARE = 0;
  private ARViewer mReader;
  
  public ShareMenu(View paramView)
  {
    super(paramView.getContext());
    this.mReader = ((ARViewer)paramView.getContext());
    addItem(0, this.mReader.getString(2131361876), 2130837815, 2130837814, false, false);
    addSeparator();
    addItem(1, this.mReader.getString(2131362267), 2130837701, 2130837700, false, false);
    addSeparator();
  }
  
  public void handleClick(int paramInt)
  {
    int i = 1;
    switch (paramInt)
    {
    }
    Object localObject2;
    do
    {
      do
      {
        return;
        this.mReader.getARAnalytics().track("Android Share Document");
        this.mReader.shareDocument();
        return;
        localObject2 = this.mReader.getPageView();
      } while (localObject2 == null);
      localObject1 = ((PageView)localObject2).getDocLoaderManager();
      localObject2 = ((PageView)localObject2).getDocViewManager();
    } while ((localObject1 == null) || (localObject2 == null));
    ((ARDocViewManager)localObject2).setAnalyticsFlagStatus(5, true);
    boolean bool = ((ARDocLoaderManager)localObject1).wasDocumentPasswordRequested();
    paramInt = i;
    if (((ARDocViewManager)localObject2).isOperationPermitted(0, 4)) {
      paramInt = 0;
    }
    if ((bool) || (paramInt != 0))
    {
      localObject2 = new AlertDlg(this.mReader);
      ((AlertDialog)localObject2).setTitle(2131361832);
      if (bool) {}
      for (localObject1 = this.mReader.getString(2131361970);; localObject1 = this.mReader.getString(2131361968))
      {
        ((AlertDialog)localObject2).setMessage((CharSequence)localObject1);
        ((AlertDialog)localObject2).setCancelable(false);
        ((AlertDialog)localObject2).setButton(this.mReader.getString(2131361831), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            paramAnonymousDialogInterface.dismiss();
          }
        });
        ((AlertDialog)localObject2).show();
        return;
      }
    }
    Object localObject1 = new File(this.mReader.getTempDirForFlattenedCopies());
    if ((localObject1 != null) && ((!((File)localObject1).exists()) || (!((File)localObject1).isDirectory())))
    {
      ((File)localObject1).delete();
      ((File)localObject1).mkdirs();
    }
    localObject1 = this.mReader.getTempDirForFlattenedCopies() + this.mReader.getCurrentDocName();
    bool = ((ARDocViewManager)localObject2).createFlattenedCopy((String)localObject1, ARCommentManager.ANNOTS_TO_FLATTEN.ALL_ANNOTS);
    if (bool) {}
    for (;;)
    {
      localObject1 = new File((String)localObject1);
      if (!((File)localObject1).exists()) {
        break;
      }
      localObject2 = Uri.fromFile((File)localObject1);
      Intent localIntent = new Intent(this.mReader, PrintDialogActivity.class);
      localIntent.setDataAndType((Uri)localObject2, "application/pdf");
      localIntent.putExtra("filePath", ((File)localObject1).getPath());
      localIntent.putExtra("wasFlattened", bool);
      this.mReader.startActivity(localIntent);
      return;
      localObject1 = this.mReader.getCurrentDocPath();
    }
  }
}
