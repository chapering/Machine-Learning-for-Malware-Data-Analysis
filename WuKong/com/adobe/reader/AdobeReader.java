package com.adobe.reader;

import android.app.Activity;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

public class AdobeReader
  extends Activity
{
  public AdobeReader() {}
  
  private String getDocPathFromIntentData(Intent paramIntent, ContentResolver paramContentResolver, File paramFile)
  {
    int i = 1;
    Uri localUri = paramIntent.getData();
    if (localUri == null) {
      paramIntent = null;
    }
    String str;
    boolean bool;
    for (;;)
    {
      return paramIntent;
      str = paramIntent.getScheme();
      if (str == null) {
        break label328;
      }
      paramIntent = localUri.getPath();
      if (paramIntent == null) {
        return null;
      }
      if (str.equals("file")) {}
      while (i == 0)
      {
        if (!str.equals("content")) {
          break label328;
        }
        try
        {
          localObject = paramContentResolver.openInputStream(localUri);
          try
          {
            paramIntent = managedQuery(localUri, new String[] { "_display_name" }, null, null, null);
            if (paramIntent == null) {
              break label247;
            }
            paramIntent.moveToFirst();
            i = paramIntent.getColumnIndex("_display_name");
            if (i == -1) {
              break label247;
            }
            str = paramIntent.getString(i);
          }
          catch (Exception paramIntent)
          {
            for (;;)
            {
              str = "downloaded_file.pdf";
              continue;
              paramIntent = paramFile.getCanonicalPath() + File.separator + str;
            }
          }
          bool = ARFileBrowserUtils.isPermanentStorageAvailable();
          if (bool)
          {
            paramIntent = ARFileBrowserUtils.availablePathInExtStorageForFileNamed(str);
            if (ARUtils.copyInputStreamDeleteOnFail((InputStream)localObject, paramIntent)) {
              break label343;
            }
            if (!bool) {
              break label353;
            }
            paramIntent = paramFile.getCanonicalPath() + File.separator + str;
            paramFile = paramContentResolver.openInputStream(localUri);
            bool = ARUtils.copyInputStreamDeleteOnFail(paramFile, paramIntent);
            if (bool) {
              break label355;
            }
            return null;
            localObject = new File(paramIntent);
          }
        }
        catch (FileNotFoundException paramIntent)
        {
          Object localObject;
          return null;
        }
        catch (RuntimeException paramIntent)
        {
          for (;;) {}
        }
        catch (IOException paramIntent)
        {
          for (;;)
          {
            label240:
            continue;
            paramFile = localSecurityException;
            paramContentResolver = paramIntent;
            paramIntent = paramFile;
          }
        }
        try
        {
          if (((File)localObject).exists())
          {
            bool = ((File)localObject).isFile();
            if (bool) {
              continue;
            }
          }
        }
        catch (SecurityException localSecurityException)
        {
          break label240;
        }
        i = 0;
      }
    }
    for (;;)
    {
      label247:
      paramIntent.close();
      paramIntent = paramContentResolver;
      if (bool) {
        break;
      }
      paramFile = new File(paramContentResolver);
      paramIntent = paramContentResolver;
      if (paramFile == null) {
        break;
      }
      paramIntent = paramContentResolver;
      if (!paramFile.exists()) {
        break;
      }
      paramFile.deleteOnExit();
      return paramContentResolver;
      label328:
      label343:
      label353:
      return null;
      label355:
      bool = false;
      paramContentResolver = paramIntent;
      paramIntent = paramFile;
    }
  }
  
  public File getCacheDir()
  {
    File localFile2 = super.getCacheDir();
    File localFile1 = localFile2;
    if (localFile2 == null) {
      localFile1 = new File("/data/data/com.adobe.reader/cache/");
    }
    return localFile1;
  }
  
  /* Error */
  public void onCreate(android.os.Bundle paramBundle)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: aload_0
    //   4: aload_1
    //   5: invokespecial 141	android/app/Activity:onCreate	(Landroid/os/Bundle;)V
    //   8: aload_0
    //   9: ldc -114
    //   11: invokevirtual 146	com/adobe/reader/AdobeReader:setContentView	(I)V
    //   14: invokestatic 151	com/adobe/reader/ARApp:checkAndUpdateFirstLaunch	()Z
    //   17: istore_2
    //   18: iload_2
    //   19: ifeq +169 -> 188
    //   22: aload_0
    //   23: invokestatic 155	com/adobe/reader/ARUtils:copyGettingStarted	(Landroid/content/Context;)Ljava/io/File;
    //   26: astore 4
    //   28: aload_0
    //   29: invokevirtual 159	com/adobe/reader/AdobeReader:getIntent	()Landroid/content/Intent;
    //   32: astore_1
    //   33: aload_1
    //   34: invokevirtual 27	android/content/Intent:getData	()Landroid/net/Uri;
    //   37: ifnull +146 -> 183
    //   40: aload_0
    //   41: aload_1
    //   42: aload_0
    //   43: invokevirtual 163	com/adobe/reader/AdobeReader:getContentResolver	()Landroid/content/ContentResolver;
    //   46: aload_0
    //   47: invokevirtual 164	com/adobe/reader/AdobeReader:getCacheDir	()Ljava/io/File;
    //   50: invokespecial 166	com/adobe/reader/AdobeReader:getDocPathFromIntentData	(Landroid/content/Intent;Landroid/content/ContentResolver;Ljava/io/File;)Ljava/lang/String;
    //   53: astore_3
    //   54: aload_3
    //   55: astore_1
    //   56: aload_3
    //   57: ifnonnull +21 -> 78
    //   60: aload_0
    //   61: ldc -89
    //   63: sipush 1500
    //   66: invokestatic 173	android/widget/Toast:makeText	(Landroid/content/Context;II)Landroid/widget/Toast;
    //   69: invokevirtual 176	android/widget/Toast:show	()V
    //   72: aload_0
    //   73: invokevirtual 179	com/adobe/reader/AdobeReader:finish	()V
    //   76: aload_3
    //   77: astore_1
    //   78: aload_1
    //   79: ifnonnull +69 -> 148
    //   82: iload_2
    //   83: ifeq +97 -> 180
    //   86: aload 4
    //   88: ifnull +92 -> 180
    //   91: aload 4
    //   93: invokevirtual 94	java/io/File:getCanonicalPath	()Ljava/lang/String;
    //   96: astore_1
    //   97: new 23	android/content/Intent
    //   100: dup
    //   101: aload_0
    //   102: ldc -75
    //   104: invokespecial 184	android/content/Intent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
    //   107: astore_3
    //   108: aload_1
    //   109: ifnull +11 -> 120
    //   112: aload_3
    //   113: ldc -70
    //   115: aload_1
    //   116: invokevirtual 190	android/content/Intent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
    //   119: pop
    //   120: aload_0
    //   121: aload_3
    //   122: invokevirtual 194	com/adobe/reader/AdobeReader:startActivity	(Landroid/content/Intent;)V
    //   125: return
    //   126: astore_1
    //   127: aload_0
    //   128: ldc -61
    //   130: sipush 1500
    //   133: invokestatic 173	android/widget/Toast:makeText	(Landroid/content/Context;II)Landroid/widget/Toast;
    //   136: invokevirtual 176	android/widget/Toast:show	()V
    //   139: aload_0
    //   140: invokevirtual 179	com/adobe/reader/AdobeReader:finish	()V
    //   143: aconst_null
    //   144: astore_3
    //   145: goto -91 -> 54
    //   148: new 23	android/content/Intent
    //   151: dup
    //   152: aload_0
    //   153: ldc -59
    //   155: invokespecial 184	android/content/Intent:<init>	(Landroid/content/Context;Ljava/lang/Class;)V
    //   158: astore_3
    //   159: aload_3
    //   160: ldc -57
    //   162: aload_1
    //   163: invokevirtual 190	android/content/Intent:putExtra	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
    //   166: pop
    //   167: aload_0
    //   168: aload_3
    //   169: invokevirtual 194	com/adobe/reader/AdobeReader:startActivity	(Landroid/content/Intent;)V
    //   172: return
    //   173: astore_1
    //   174: aload 5
    //   176: astore_1
    //   177: goto -80 -> 97
    //   180: goto -83 -> 97
    //   183: aconst_null
    //   184: astore_1
    //   185: goto -107 -> 78
    //   188: aconst_null
    //   189: astore 4
    //   191: goto -163 -> 28
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	194	0	this	AdobeReader
    //   0	194	1	paramBundle	android.os.Bundle
    //   17	66	2	bool	boolean
    //   53	116	3	localObject1	Object
    //   26	164	4	localFile	File
    //   1	174	5	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   40	54	126	java/lang/IncompatibleClassChangeError
    //   91	97	173	java/io/IOException
  }
  
  public void onPause()
  {
    super.onPause();
    finish();
  }
  
  public void onStop()
  {
    super.onStop();
  }
}
