package com.adobe.reader;

import android.content.Context;
import java.io.File;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

public class ARAllPDFListLoader
  extends ARFileListLoader
{
  Context mContext;
  File[] mExternalMountPoints = null;
  
  public ARAllPDFListLoader(Context paramContext, ARFileEntryAdapter paramARFileEntryAdapter)
  {
    super(paramContext, paramARFileEntryAdapter);
    this.mContext = paramContext;
  }
  
  public void addFiles()
  {
    Object localObject = getDirectoriesContainingPDFs();
    if (localObject != null)
    {
      localObject = ((List)localObject).iterator();
      if (((Iterator)localObject).hasNext()) {}
    }
    else
    {
      if (this.mExternalMountPoints == null) {
        this.mExternalMountPoints = ARFileBrowserUtils.getListOfExternalStorageMountPoints();
      }
      if ((this.mExternalMountPoints != null) && (this.mExternalMountPoints.length != 0)) {
        break label79;
      }
    }
    for (;;)
    {
      return;
      addCurrentDirectoryFiles(new File((String)((Iterator)localObject).next()), 1);
      break;
      label79:
      Arrays.sort(this.mExternalMountPoints, new Comparator()
      {
        public int compare(File paramAnonymousFile1, File paramAnonymousFile2)
        {
          return paramAnonymousFile1.getAbsolutePath().compareToIgnoreCase(paramAnonymousFile2.getAbsolutePath());
        }
      });
      localObject = this.mExternalMountPoints;
      int j = localObject.length;
      int i = 0;
      while (i < j)
      {
        addAllPDFFiles(localObject[i]);
        i += 1;
      }
    }
  }
}
