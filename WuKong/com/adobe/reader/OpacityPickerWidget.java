package com.adobe.reader;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.drawable.GradientDrawable;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TableRow;

public class OpacityPickerWidget
  extends ARPopupWindow
  implements View.OnClickListener, View.OnTouchListener
{
  private static final int ITEMS_PER_ROW = 4;
  private static final int NUM_ITEMS = OPACITY.length;
  private static final int NUM_ROWS = (NUM_ITEMS + 4 - 1) / 4;
  private static final float[] OPACITY = { 0.25F, 0.5F, 0.75F, 1.0F };
  private PARCommentEditUIHandlerAndroid mCommentEditHandler = null;
  private TableRow[] mRow = new TableRow[NUM_ROWS];
  private TableLayout mWidgetContainer;
  
  public OpacityPickerWidget(Context paramContext, PARCommentEditUIHandlerAndroid paramPARCommentEditUIHandlerAndroid)
  {
    super(paramContext);
    this.mCommentEditHandler = paramPARCommentEditUIHandlerAndroid;
    paramPARCommentEditUIHandlerAndroid = new LinearLayout(paramContext);
    setContentView(paramPARCommentEditUIHandlerAndroid);
    setBackgroundDrawable(paramContext.getResources().getDrawable(2130837897));
    this.mWidgetContainer = new TableLayout(paramContext);
    int i = (int)paramContext.getResources().getDimension(2131296419);
    this.mWidgetContainer.setPadding(i, i, i, i);
    paramPARCommentEditUIHandlerAndroid.addView(this.mWidgetContainer);
    i = 0;
    for (;;)
    {
      if (i >= NUM_ROWS)
      {
        addItemsToWidget(paramContext);
        setFocusable(true);
        setOutsideTouchable(true);
        setTouchInterceptor(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return false;
          }
        });
        return;
      }
      this.mWidgetContainer.addView(new TableRow(paramContext));
      this.mRow[i] = ((TableRow)this.mWidgetContainer.getChildAt(i));
      i += 1;
    }
  }
  
  private void addItemsToWidget(Context paramContext)
  {
    LayoutInflater localLayoutInflater = LayoutInflater.from(this.mWidgetContainer.getContext());
    int i = 0;
    for (;;)
    {
      if (i >= NUM_ITEMS)
      {
        paramContext = getContentView();
        paramContext.measure(0, 0);
        setWidth(paramContext.getMeasuredWidth());
        setHeight(paramContext.getMeasuredHeight());
        return;
      }
      int j = i / 4;
      localLayoutInflater.inflate(2130903068, this.mRow[j]);
      Object localObject = (LinearLayout)this.mRow[j].getChildAt(this.mRow[j].getChildCount() - 1);
      localObject = ((LinearLayout)localObject).getChildAt(((LinearLayout)localObject).getChildCount() - 1);
      ((View)localObject).setId(i);
      ((View)localObject).setOnTouchListener(this);
      GradientDrawable localGradientDrawable = (GradientDrawable)paramContext.getResources().getDrawable(2130837524);
      localGradientDrawable.setColor((int)(OPACITY[i] * 255.0F) << 24 | this.mCommentEditHandler.getColor());
      ((View)localObject).setBackgroundDrawable(localGradientDrawable);
      ((View)localObject).setClickable(true);
      ((View)localObject).setOnClickListener(this);
      i += 1;
    }
  }
  
  public void onClick(View paramView)
  {
    int i = paramView.getId();
    if ((i >= 0) && (i < NUM_ITEMS)) {
      this.mCommentEditHandler.handleOpacityChange(OPACITY[i]);
    }
    dismiss();
  }
  
  public boolean onTouch(View paramView, MotionEvent paramMotionEvent)
  {
    int i = paramMotionEvent.getAction();
    GradientDrawable localGradientDrawable;
    if ((i == 0) || (i == 1))
    {
      paramMotionEvent = paramView.getContext().getResources();
      localGradientDrawable = (GradientDrawable)paramView.getBackground();
      if (i != 0) {
        break label60;
      }
      localGradientDrawable.setStroke(paramMotionEvent.getDimensionPixelSize(2131296418), paramMotionEvent.getColor(2131230751));
    }
    for (;;)
    {
      paramView.setBackgroundDrawable(localGradientDrawable);
      return false;
      label60:
      if (i == 1) {
        localGradientDrawable.setStroke(paramMotionEvent.getDimensionPixelSize(2131296417), paramMotionEvent.getColor(2131230750));
      }
    }
  }
}
