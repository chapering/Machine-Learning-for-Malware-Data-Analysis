package com.adobe.reader;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Color;
import android.graphics.drawable.GradientDrawable;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TableRow;

public class ColorPickerWidget
  extends ARPopupWindow
  implements View.OnClickListener, View.OnTouchListener
{
  private static final int[] COLORS = { -65536, 65280, -16738048, -16711834, -16711681, -16763905, -6749953, -6710887, -16777216, -1 };
  private static final int COLORS_PER_ROW = 5;
  private static final int NUM_COLORS = COLORS.length;
  private static final int NUM_ROWS = (NUM_COLORS + 5 - 1) / 5;
  private PARCommentEditUIHandlerAndroid mCommentEditHandler = null;
  private TableRow[] mRow = new TableRow[NUM_ROWS];
  private TableLayout mWidgetContainer;
  
  public ColorPickerWidget(Context paramContext, PARCommentEditUIHandlerAndroid paramPARCommentEditUIHandlerAndroid)
  {
    super(paramContext);
    this.mCommentEditHandler = paramPARCommentEditUIHandlerAndroid;
    paramPARCommentEditUIHandlerAndroid = new LinearLayout(paramContext);
    setContentView(paramPARCommentEditUIHandlerAndroid);
    setBackgroundDrawable(paramContext.getResources().getDrawable(2130837897));
    this.mWidgetContainer = new TableLayout(paramContext);
    int i = (int)paramContext.getResources().getDimension(2131296419);
    this.mWidgetContainer.setPadding(i, i, i, i);
    paramPARCommentEditUIHandlerAndroid.addView(this.mWidgetContainer);
    i = 0;
    for (;;)
    {
      if (i >= NUM_ROWS)
      {
        addColorsToWidget(paramContext);
        setFocusable(true);
        setOutsideTouchable(true);
        setTouchInterceptor(new View.OnTouchListener()
        {
          public boolean onTouch(View paramAnonymousView, MotionEvent paramAnonymousMotionEvent)
          {
            return false;
          }
        });
        return;
      }
      this.mWidgetContainer.addView(new TableRow(paramContext));
      this.mRow[i] = ((TableRow)this.mWidgetContainer.getChildAt(i));
      i += 1;
    }
  }
  
  private void addColorsToWidget(Context paramContext)
  {
    LayoutInflater localLayoutInflater = LayoutInflater.from(this.mWidgetContainer.getContext());
    int i = 0;
    for (;;)
    {
      if (i >= NUM_COLORS)
      {
        paramContext = getContentView();
        paramContext.measure(0, 0);
        setWidth(paramContext.getMeasuredWidth());
        setHeight(paramContext.getMeasuredHeight());
        return;
      }
      int j = i / 5;
      localLayoutInflater.inflate(2130903049, this.mRow[j]);
      View localView = this.mRow[j].getChildAt(this.mRow[j].getChildCount() - 1);
      localView.setId(i);
      localView.setOnTouchListener(this);
      GradientDrawable localGradientDrawable = (GradientDrawable)paramContext.getResources().getDrawable(2130837524);
      localGradientDrawable.setColor(COLORS[i]);
      localView.setBackgroundDrawable(localGradientDrawable);
      localView.setClickable(true);
      localView.setOnClickListener(this);
      i += 1;
    }
  }
  
  public void onClick(View paramView)
  {
    int i = paramView.getId();
    if ((i >= 0) && (i < NUM_COLORS))
    {
      int k = COLORS[i];
      i = Color.red(k);
      int j = Color.green(k);
      k = Color.blue(k);
      this.mCommentEditHandler.handleColorChange(i, j, k);
    }
    dismiss();
  }
  
  public boolean onTouch(View paramView, MotionEvent paramMotionEvent)
  {
    int i = paramMotionEvent.getAction();
    GradientDrawable localGradientDrawable;
    if ((i == 0) || (i == 1))
    {
      paramMotionEvent = paramView.getContext().getResources();
      localGradientDrawable = (GradientDrawable)paramView.getBackground();
      if (i != 0) {
        break label60;
      }
      localGradientDrawable.setStroke(paramMotionEvent.getDimensionPixelSize(2131296418), paramMotionEvent.getColor(2131230751));
    }
    for (;;)
    {
      paramView.setBackgroundDrawable(localGradientDrawable);
      return false;
      label60:
      if (i == 1) {
        localGradientDrawable.setStroke(paramMotionEvent.getDimensionPixelSize(2131296417), paramMotionEvent.getColor(2131230750));
      }
    }
  }
}
