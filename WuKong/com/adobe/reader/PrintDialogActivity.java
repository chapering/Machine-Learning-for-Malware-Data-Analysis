package com.adobe.reader;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import java.io.File;

public class PrintDialogActivity
  extends Activity
{
  private static final String CLOSE_POST_MESSAGE_NAME = "cp-dialog-on-close";
  private static final String CONTENT_TRANSFER_ENCODING = "base64";
  private static final String JS_INTERFACE = "ReaderPrintDialog";
  private Intent mCloudPrintIntent;
  private String mFilePath;
  private WebView mPrintWebView;
  
  public PrintDialogActivity() {}
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(2130903074);
    this.mPrintWebView = ((WebView)findViewById(2131493034));
    this.mCloudPrintIntent = getIntent();
    paramBundle = this.mPrintWebView.getSettings();
    paramBundle.setJavaScriptEnabled(true);
    paramBundle.setLoadWithOverviewMode(true);
    paramBundle.setUseWideViewPort(true);
    this.mPrintWebView.setWebViewClient(new PrintDialogWebClient(null));
    this.mPrintWebView.addJavascriptInterface(new PrintDialogJavaScriptInterface(), "ReaderPrintDialog");
    this.mPrintWebView.loadUrl(getString(2131362268));
  }
  
  protected void onDestroy()
  {
    if (this.mCloudPrintIntent.getExtras().getBoolean("wasFlattened")) {}
    try
    {
      File localFile = new File(this.mFilePath);
      if ((localFile != null) && (localFile.exists())) {
        localFile.delete();
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    super.onDestroy();
  }
  
  final class PrintDialogJavaScriptInterface
  {
    PrintDialogJavaScriptInterface() {}
    
    /* Error */
    public String getContent()
    {
      // Byte code:
      //   0: aload_0
      //   1: getfield 13	com/adobe/reader/PrintDialogActivity$PrintDialogJavaScriptInterface:this$0	Lcom/adobe/reader/PrintDialogActivity;
      //   4: invokevirtual 27	com/adobe/reader/PrintDialogActivity:getContentResolver	()Landroid/content/ContentResolver;
      //   7: aload_0
      //   8: getfield 13	com/adobe/reader/PrintDialogActivity$PrintDialogJavaScriptInterface:this$0	Lcom/adobe/reader/PrintDialogActivity;
      //   11: invokestatic 31	com/adobe/reader/PrintDialogActivity:access$0	(Lcom/adobe/reader/PrintDialogActivity;)Landroid/content/Intent;
      //   14: invokevirtual 37	android/content/Intent:getData	()Landroid/net/Uri;
      //   17: invokevirtual 43	android/content/ContentResolver:openInputStream	(Landroid/net/Uri;)Ljava/io/InputStream;
      //   20: astore_2
      //   21: new 45	java/io/ByteArrayOutputStream
      //   24: dup
      //   25: invokespecial 46	java/io/ByteArrayOutputStream:<init>	()V
      //   28: astore_3
      //   29: sipush 4096
      //   32: newarray byte
      //   34: astore 4
      //   36: aload_2
      //   37: aload 4
      //   39: invokevirtual 52	java/io/InputStream:read	([B)I
      //   42: istore_1
      //   43: iload_1
      //   44: ifge +20 -> 64
      //   47: aload_2
      //   48: invokevirtual 55	java/io/InputStream:close	()V
      //   51: aload_3
      //   52: invokevirtual 58	java/io/ByteArrayOutputStream:flush	()V
      //   55: aload_3
      //   56: invokevirtual 62	java/io/ByteArrayOutputStream:toByteArray	()[B
      //   59: iconst_0
      //   60: invokestatic 68	android/util/Base64:encodeToString	([BI)Ljava/lang/String;
      //   63: areturn
      //   64: aload_3
      //   65: aload 4
      //   67: iconst_0
      //   68: iload_1
      //   69: invokevirtual 72	java/io/ByteArrayOutputStream:write	([BII)V
      //   72: aload_2
      //   73: aload 4
      //   75: invokevirtual 52	java/io/InputStream:read	([B)I
      //   78: istore_1
      //   79: goto -36 -> 43
      //   82: astore_2
      //   83: aload_2
      //   84: invokevirtual 75	java/io/FileNotFoundException:printStackTrace	()V
      //   87: ldc 77
      //   89: areturn
      //   90: astore_2
      //   91: aload_2
      //   92: invokevirtual 78	java/io/IOException:printStackTrace	()V
      //   95: goto -8 -> 87
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	98	0	this	PrintDialogJavaScriptInterface
      //   42	37	1	i	int
      //   20	53	2	localInputStream	java.io.InputStream
      //   82	2	2	localFileNotFoundException	java.io.FileNotFoundException
      //   90	2	2	localIOException	java.io.IOException
      //   28	37	3	localByteArrayOutputStream	java.io.ByteArrayOutputStream
      //   34	40	4	arrayOfByte	byte[]
      // Exception table:
      //   from	to	target	type
      //   0	43	82	java/io/FileNotFoundException
      //   47	64	82	java/io/FileNotFoundException
      //   64	79	82	java/io/FileNotFoundException
      //   0	43	90	java/io/IOException
      //   47	64	90	java/io/IOException
      //   64	79	90	java/io/IOException
    }
    
    public String getEncoding()
    {
      return "base64";
    }
    
    public String getTitle()
    {
      PrintDialogActivity.this.mFilePath = PrintDialogActivity.this.mCloudPrintIntent.getExtras().getString("filePath");
      return PrintDialogActivity.this.mFilePath.subSequence(PrintDialogActivity.this.mFilePath.lastIndexOf('/') + 1, PrintDialogActivity.this.mFilePath.length()).toString();
    }
    
    public String getType()
    {
      return PrintDialogActivity.this.mCloudPrintIntent.getType();
    }
    
    public void onPostMessage(String paramString)
    {
      if (paramString.startsWith("cp-dialog-on-close")) {
        PrintDialogActivity.this.finish();
      }
    }
  }
  
  private final class PrintDialogWebClient
    extends WebViewClient
  {
    private PrintDialogWebClient() {}
    
    public void onPageFinished(WebView paramWebView, String paramString)
    {
      if (paramWebView.getContext().getString(2131362268).equals(paramString))
      {
        paramWebView.loadUrl("javascript:printDialog.setPrintDocument(printDialog.createPrintDocument(window.ReaderPrintDialog.getType(),window.ReaderPrintDialog.getTitle(),window.ReaderPrintDialog.getContent(),window.ReaderPrintDialog.getEncoding()))");
        paramWebView.loadUrl("javascript:window.addEventListener('message',function(evt){window.ReaderPrintDialog.onPostMessage(evt.data)}, false)");
      }
    }
  }
}
