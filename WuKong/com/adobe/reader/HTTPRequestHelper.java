package com.adobe.reader;

import java.io.ByteArrayOutputStream;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpRequestBase;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;

public class HTTPRequestHelper
{
  private static final Pattern s_pattern = Pattern.compile(".*\r\n");
  private static final int s_timeout = 30000;
  
  public HTTPRequestHelper() {}
  
  public static byte[] makeHTTPGetRequest(String paramString, byte[] paramArrayOfByte)
  {
    byte[] arrayOfByte = (byte[])null;
    try
    {
      paramString = makeRequest(new HttpGet(paramString), paramArrayOfByte);
      return paramString;
    }
    catch (Exception paramString) {}
    return arrayOfByte;
  }
  
  public static byte[] makeHTTPPostRequest(String paramString, byte[] paramArrayOfByte1, byte[] paramArrayOfByte2)
  {
    byte[] arrayOfByte = (byte[])null;
    try
    {
      paramString = new HttpPost(paramString);
      paramString.setEntity(new ByteArrayEntity(paramArrayOfByte2));
      paramString = makeRequest(paramString, paramArrayOfByte1);
      return paramString;
    }
    catch (Exception paramString) {}
    return arrayOfByte;
  }
  
  private static byte[] makeRequest(HttpRequestBase paramHttpRequestBase, byte[] paramArrayOfByte)
  {
    arrayOfByte = (byte[])null;
    try
    {
      paramArrayOfByte = new String(paramArrayOfByte);
      paramArrayOfByte = s_pattern.matcher(paramArrayOfByte);
      paramArrayOfByte.reset();
      for (;;)
      {
        if (!paramArrayOfByte.find())
        {
          paramArrayOfByte = new BasicHttpParams();
          HttpConnectionParams.setConnectionTimeout(paramArrayOfByte, 30000);
          HttpConnectionParams.setSoTimeout(paramArrayOfByte, 30000);
          paramHttpRequestBase = new DefaultHttpClient(paramArrayOfByte).execute(paramHttpRequestBase);
          if ((paramHttpRequestBase == null) || (paramHttpRequestBase.getStatusLine() == null) || (paramHttpRequestBase.getStatusLine().getStatusCode() >= 400)) {
            break;
          }
          paramArrayOfByte = new ByteArrayOutputStream();
          paramHttpRequestBase.getEntity().writeTo(paramArrayOfByte);
          return paramArrayOfByte.toByteArray();
        }
        String str = paramArrayOfByte.group();
        int i = str.indexOf(':');
        paramHttpRequestBase.addHeader(str.substring(0, i), str.substring(i + 1, str.length() - 2));
      }
      return arrayOfByte;
    }
    catch (Exception paramHttpRequestBase) {}
  }
}
