package com.adobe.reader.cloud.async;

import android.content.Context;
import android.os.AsyncTask;
import com.adobe.reader.cloud.CloudUtilities;
import com.adobe.reader.cloud.network.BlueHeronAPI.API_LIST;
import com.adobe.reader.cloud.network.BlueHeronAPI.HTTP_METHOD_TYPE;
import com.adobe.reader.cloud.network.CloudNetworkManager;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.entity.StringEntity;
import org.json.JSONObject;

public class UpdateLastViewedPageNumAsyncTask
  extends AsyncTask<Void, Void, Void>
{
  private String mAssetID;
  private int mLastViewedPageNum = -1;
  
  public UpdateLastViewedPageNumAsyncTask(Context paramContext, String paramString, int paramInt)
  {
    if (CloudUtilities.isNetworkAvailable(paramContext))
    {
      this.mAssetID = paramString;
      this.mLastViewedPageNum = paramInt;
    }
  }
  
  protected Void doInBackground(Void... paramVarArgs)
  {
    if ((this.mAssetID != null) && (this.mLastViewedPageNum != -1)) {}
    try
    {
      paramVarArgs = CloudNetworkManager.getHttpRequest(BlueHeronAPI.API_LIST.PUT_ASSETS_ID_METADATA_KEY, new String[] { this.mAssetID, "last_pagenum" });
      Object localObject = new JSONObject();
      ((JSONObject)localObject).put("value", this.mLastViewedPageNum);
      localObject = new StringEntity(((JSONObject)localObject).toString());
      ((HttpPut)paramVarArgs).setEntity((HttpEntity)localObject);
      CloudNetworkManager.getHttpMethodResponse(paramVarArgs, BlueHeronAPI.HTTP_METHOD_TYPE.PUT);
      return null;
    }
    catch (Exception paramVarArgs)
    {
      for (;;)
      {
        CloudUtilities.logit("last_pagenum not updated to cloud ..");
      }
    }
  }
}
