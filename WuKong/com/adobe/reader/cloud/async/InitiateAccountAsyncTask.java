package com.adobe.reader.cloud.async;

import android.content.Intent;
import android.os.AsyncTask;
import com.adobe.reader.ARApp;
import com.adobe.reader.LocalBroadcastManager;
import com.adobe.reader.cloud.CloudTransferManager;
import com.adobe.reader.cloud.network.BlueHeronAPI.HTTP_METHOD_TYPE;
import com.adobe.reader.cloud.network.CloudNetworkManager;
import com.adobe.reader.cloud.ui.CloudAuthenticationInterface;
import org.apache.http.client.methods.HttpPost;
import org.json.JSONObject;

public class InitiateAccountAsyncTask
  extends AsyncTask<HttpPost, Void, JSONObject>
{
  private CloudAuthenticationInterface mAuthHandler;
  private boolean mTaskFailed = false;
  
  public InitiateAccountAsyncTask(CloudAuthenticationInterface paramCloudAuthenticationInterface)
  {
    this.mAuthHandler = paramCloudAuthenticationInterface;
  }
  
  protected JSONObject doInBackground(HttpPost... paramVarArgs)
  {
    try
    {
      paramVarArgs = CloudNetworkManager.executeHttpRequest(paramVarArgs[0], BlueHeronAPI.HTTP_METHOD_TYPE.POST);
      return paramVarArgs;
    }
    catch (Exception paramVarArgs)
    {
      this.mTaskFailed = true;
    }
    return null;
  }
  
  protected void onPostExecute(JSONObject paramJSONObject)
  {
    if (this.mTaskFailed)
    {
      this.mAuthHandler.onPageLoadError();
      return;
    }
    try
    {
      CloudNetworkManager.initiateCloudAccount(paramJSONObject);
      CloudTransferManager.getInstance().openDBConnection();
      paramJSONObject = new Intent("com.adobe.reader.ARSplitPane.cloudLoginSuccess");
      LocalBroadcastManager.getInstance(ARApp.getAppContext()).sendBroadcast(paramJSONObject);
      this.mAuthHandler.onLoginSuccess();
      return;
    }
    catch (Exception paramJSONObject)
    {
      this.mAuthHandler.onPageLoadError();
    }
  }
  
  protected void onPreExecute() {}
}
