package com.adobe.reader.cloud.ui;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.NotificationManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.res.Configuration;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;
import com.adobe.reader.ARApp;
import com.adobe.reader.ARConstants.CloudConstants.CLOUD_TASK_RESULT;
import com.adobe.reader.ARUtils;
import com.adobe.reader.ARViewer;
import com.adobe.reader.LocalBroadcastManager;
import com.adobe.reader.cloud.network.CloudFileTransferService;
import com.adobe.reader.cloud.network.CloudFileTransferService.TRANSFER_TYPE;
import java.io.File;
import java.io.IOException;

public class FileTransferActivity
  extends Activity
{
  public static final String BROADCAST_ACTION_ON_RESTART = "com.adobe.adobereader.cloud.onRestart";
  public static final String BROADCAST_ACTION_ON_STOP = "com.adobe.adobereader.cloud.onStop";
  private BroadcastReceiver broadcastReceiver_downloadComplete = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      ((NotificationManager)FileTransferActivity.this.getSystemService("notification")).cancelAll();
      ((TextView)FileTransferActivity.this.findViewById(2131492962)).setTextColor(-16777216);
      int i = paramAnonymousIntent.getExtras().getInt("RESULT_key", -1);
      paramAnonymousContext = ARConstants.CloudConstants.CLOUD_TASK_RESULT.values()[i];
      if (paramAnonymousContext == ARConstants.CloudConstants.CLOUD_TASK_RESULT.SUCCESS)
      {
        paramAnonymousContext = paramAnonymousIntent.getExtras().getString("FILE_PATH_key");
        paramAnonymousIntent = paramAnonymousIntent.getExtras().getString("FILE_ID_key");
        paramAnonymousContext = new File(paramAnonymousContext);
        FileTransferActivity.this.openFile(paramAnonymousContext, paramAnonymousIntent);
        return;
      }
      if (paramAnonymousContext == ARConstants.CloudConstants.CLOUD_TASK_RESULT.OFFLINE) {}
      for (FileTransferActivity.this.mErrorMessage = FileTransferActivity.this.mActivity.getString(2131362090);; FileTransferActivity.this.mErrorMessage = FileTransferActivity.this.mActivity.getString(2131362091))
      {
        FileTransferActivity.this.displayErrorDialog();
        return;
      }
    }
  };
  private BroadcastReceiver broadcastReceiver_progressUpdated = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      int i = paramAnonymousIntent.getExtras().getInt("PROGRESS_UPDATED_key", 0);
      FileTransferActivity.this.mProgressBar.setProgress(i);
      FileTransferActivity.this.mProgressPercentage.setText(Integer.toString(i) + "%");
    }
  };
  private BroadcastReceiver broadcastReceiver_uploadComplete = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      ((NotificationManager)FileTransferActivity.this.getSystemService("notification")).cancelAll();
      ((TextView)FileTransferActivity.this.findViewById(2131492962)).setTextColor(-16777216);
      int i = paramAnonymousIntent.getExtras().getInt("RESULT_key", -1);
      paramAnonymousContext = ARConstants.CloudConstants.CLOUD_TASK_RESULT.values()[i];
      if (paramAnonymousContext == ARConstants.CloudConstants.CLOUD_TASK_RESULT.SUCCESS)
      {
        paramAnonymousContext = FileTransferActivity.this.getString(2131362104);
        FileTransferActivity.this.setTransferStatusText(paramAnonymousContext);
        paramAnonymousContext = paramAnonymousIntent.getExtras().getString("FILE_PATH_key");
        paramAnonymousIntent = paramAnonymousIntent.getExtras().getString("FILE_ID_key");
        Intent localIntent = new Intent();
        localIntent.putExtra("com.adobe.reader.FileBrowserReturnData", paramAnonymousContext);
        localIntent.putExtra("com.adobe.reader.CloudFileID", paramAnonymousIntent);
        FileTransferActivity.this.mActivity.setResult(-1, localIntent);
        FileTransferActivity.this.onFinish();
        return;
      }
      if (paramAnonymousContext == ARConstants.CloudConstants.CLOUD_TASK_RESULT.OFFLINE) {
        FileTransferActivity.this.mErrorMessage = FileTransferActivity.this.mActivity.getString(2131362090);
      }
      for (;;)
      {
        FileTransferActivity.this.mActivity.setResult(0);
        FileTransferActivity.this.displayErrorDialog();
        return;
        if (paramAnonymousContext == ARConstants.CloudConstants.CLOUD_TASK_RESULT.QUOTA_EXCEEDED) {
          FileTransferActivity.this.mErrorMessage = FileTransferActivity.this.mActivity.getString(2131362097);
        } else {
          FileTransferActivity.this.mErrorMessage = FileTransferActivity.this.mActivity.getString(2131362093);
        }
      }
    }
  };
  private Activity mActivity;
  private AlertDialog mAlertDialog = null;
  private Context mAppContext;
  private String mErrorMessage;
  private String mFileID;
  private long mFileModifiedDateOnCloud;
  private String mFilePath;
  private ProgressBar mProgressBar;
  private TextView mProgressPercentage;
  private Intent mServiceIntent;
  private CloudFileTransferService.TRANSFER_TYPE mTransferType;
  
  public FileTransferActivity() {}
  
  private void displayErrorDialog()
  {
    this.mAlertDialog = new AlertDialog.Builder(this.mActivity).create();
    this.mAlertDialog.setMessage(this.mErrorMessage);
    this.mAlertDialog.setButton(this.mActivity.getString(2131361831), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        FileTransferActivity.this.onFinish();
      }
    });
    this.mAlertDialog.show();
  }
  
  private void onFinish()
  {
    finish();
    overridePendingTransition(2130968580, 2130968581);
  }
  
  private void registerBroadcastReceivers()
  {
    switch (this.mTransferType)
    {
    }
    for (;;)
    {
      LocalBroadcastManager.getInstance(this.mAppContext).registerReceiver(this.broadcastReceiver_progressUpdated, new IntentFilter("com.adobe.reader.cloud.CloudFileTransferService.ProgressUpdate"));
      return;
      LocalBroadcastManager.getInstance(this.mAppContext).registerReceiver(this.broadcastReceiver_downloadComplete, new IntentFilter("com.adobe.reader.cloud.CloudFilTransferService.DownloadComplete"));
      continue;
      LocalBroadcastManager.getInstance(this.mAppContext).registerReceiver(this.broadcastReceiver_uploadComplete, new IntentFilter("com.adobe.reader.cloud.CloudFilTransferService.UploadComplete"));
    }
  }
  
  private void setTransferStatusText(String paramString)
  {
    ((TextView)findViewById(2131492962)).setText(paramString);
  }
  
  private void unregisterBroadcastReceivers()
  {
    switch (this.mTransferType)
    {
    }
    for (;;)
    {
      LocalBroadcastManager.getInstance(this.mAppContext).unregisterReceiver(this.broadcastReceiver_progressUpdated);
      return;
      LocalBroadcastManager.getInstance(this.mAppContext).unregisterReceiver(this.broadcastReceiver_downloadComplete);
      continue;
      LocalBroadcastManager.getInstance(this.mAppContext).unregisterReceiver(this.broadcastReceiver_uploadComplete);
    }
  }
  
  public void onBackPressed()
  {
    super.onBackPressed();
    finish();
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(2130903055);
    int i = getIntent().getIntExtra("TRANSFER_TYPE_key", -1);
    if (i == -1)
    {
      onFinish();
      return;
    }
    this.mTransferType = CloudFileTransferService.TRANSFER_TYPE.values()[i];
    this.mActivity = this;
    this.mAppContext = ARApp.getAppContext();
    this.mProgressBar = ((ProgressBar)this.mActivity.findViewById(2131492960));
    this.mProgressPercentage = ((TextView)this.mActivity.findViewById(2131492961));
    Bundle localBundle = getIntent().getExtras();
    this.mFilePath = ((String)localBundle.get("FILE_PATH_key"));
    this.mServiceIntent = new Intent(ARApp.getAppContext(), CloudFileTransferService.class);
    Object localObject = new Bundle();
    ((Bundle)localObject).putCharSequence("FILE_PATH_key", this.mFilePath);
    if (this.mTransferType == CloudFileTransferService.TRANSFER_TYPE.DOWNLOAD)
    {
      paramBundle = getString(2131362104);
      ((Bundle)localObject).putInt("TRANSFER_TYPE_key", CloudFileTransferService.TRANSFER_TYPE.DOWNLOAD.ordinal());
      this.mFileID = ((String)localBundle.get("FILE_ID_key"));
      ((Bundle)localObject).putCharSequence("FILE_ID_key", this.mFileID);
      this.mFileModifiedDateOnCloud = localBundle.getLong("FILE_MODIFIED_DATE_key");
      ((Bundle)localObject).putLong("FILE_MODIFIED_DATE_key", this.mFileModifiedDateOnCloud);
    }
    for (;;)
    {
      this.mServiceIntent.putExtras((Bundle)localObject);
      startService(this.mServiceIntent);
      localObject = new File(this.mFilePath).getName();
      ((TextView)this.mActivity.findViewById(2131492963)).setText((CharSequence)localObject);
      setTransferStatusText(paramBundle);
      ((ImageView)findViewById(2131492959)).setImageResource(ARUtils.getProgressViewDrawableIconForFile((String)localObject));
      ((Button)this.mActivity.findViewById(2131492958)).setOnClickListener(new View.OnClickListener()
      {
        public void onClick(View paramAnonymousView)
        {
          FileTransferActivity.this.onFinish();
        }
      });
      registerBroadcastReceivers();
      return;
      if (this.mTransferType == CloudFileTransferService.TRANSFER_TYPE.UPLOAD)
      {
        paramBundle = getString(2131362108);
        ((Bundle)localObject).putInt("TRANSFER_TYPE_key", CloudFileTransferService.TRANSFER_TYPE.UPLOAD.ordinal());
      }
      else
      {
        paramBundle = null;
      }
    }
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    if (this.mAlertDialog != null) {
      this.mAlertDialog.dismiss();
    }
    Intent localIntent;
    if (this.mTransferType != null)
    {
      localIntent = null;
      switch (this.mTransferType)
      {
      }
    }
    for (;;)
    {
      if (localIntent != null) {
        LocalBroadcastManager.getInstance(this).sendBroadcast(localIntent);
      }
      return;
      localIntent = new Intent("com.adobe.reader.cloud.CloudFileTransferService.CancelDownload");
      continue;
      localIntent = new Intent("com.adobe.reader.cloud.CloudFileTransferService.CancelUpload");
    }
  }
  
  protected void onRestart()
  {
    registerBroadcastReceivers();
    Intent localIntent = new Intent("com.adobe.adobereader.cloud.onRestart");
    LocalBroadcastManager.getInstance(this).sendBroadcast(localIntent);
    super.onRestart();
  }
  
  protected void onStop()
  {
    super.onStop();
    Intent localIntent = new Intent("com.adobe.adobereader.cloud.onStop");
    LocalBroadcastManager.getInstance(this).sendBroadcast(localIntent);
    unregisterBroadcastReceivers();
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    return true;
  }
  
  public void openFile(File paramFile, String paramString)
  {
    try
    {
      Intent localIntent = new Intent(this, ARViewer.class);
      localIntent.putExtra("com.adobe.reader.FileBrowserReturnData", paramFile.getCanonicalPath());
      localIntent.putExtra("com.adobe.reader.LEFT_PANE_ENTRY", 2131361901);
      localIntent.putExtra("com.adobe.reader.CloudFileID", paramString);
      startActivity(localIntent);
      onFinish();
      return;
    }
    catch (IOException paramFile)
    {
      for (;;)
      {
        Toast.makeText(this, 2131361833, 1500).show();
      }
    }
  }
}
