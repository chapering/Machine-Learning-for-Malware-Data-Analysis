package com.adobe.reader.cloud.ui;

import android.text.TextUtils;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import com.adobe.reader.cloud.async.InitiateAccountAsyncTask;
import com.adobe.reader.cloud.network.CloudNetworkManager;
import java.net.MalformedURLException;
import java.net.URL;
import org.apache.http.client.methods.HttpPost;

public class CloudAuthenticationWebViewClient
  extends WebViewClient
{
  private CloudAuthenticationInterface mHandler = null;
  private boolean mReceivedError = false;
  
  public CloudAuthenticationWebViewClient(CloudAuthenticationInterface paramCloudAuthenticationInterface)
  {
    this.mHandler = paramCloudAuthenticationInterface;
  }
  
  public void onPageFinished(WebView paramWebView, String paramString)
  {
    if (this.mReceivedError) {
      this.mHandler.onPageLoadError();
    }
    while (paramString.startsWith("readermobile://")) {
      return;
    }
    this.mHandler.onPageLoadSuccess();
  }
  
  public void onReceivedError(WebView paramWebView, int paramInt, String paramString1, String paramString2)
  {
    super.onReceivedError(paramWebView, paramInt, paramString1, paramString2);
    this.mReceivedError = true;
  }
  
  public boolean shouldOverrideUrlLoading(WebView paramWebView, String paramString)
  {
    try
    {
      if (TextUtils.equals(new URL(paramString).getProtocol(), "https")) {
        return false;
      }
      this.mHandler.onPageLoadError();
      return true;
    }
    catch (MalformedURLException paramWebView)
    {
      if (paramString.startsWith("readermobile://"))
      {
        int i = paramString.indexOf("code=");
        if (i != -1)
        {
          paramWebView = CloudNetworkManager.getAccessTokenHttpPostRequest(paramString.substring(i + "code=".length()));
          new InitiateAccountAsyncTask(this.mHandler).execute(new HttpPost[] { paramWebView });
        }
      }
      return true;
    }
    catch (IllegalArgumentException paramWebView)
    {
      this.mHandler.reloadWebView();
    }
    return true;
  }
}
