package com.adobe.reader.cloud.ui;

import android.content.res.Configuration;
import android.content.res.Resources;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import com.adobe.reader.ARUtils;
import com.adobe.reader.ARViewer;
import com.adobe.reader.ARViewer.BackButtonHandler;
import com.adobe.reader.PageView;
import com.adobe.reader.PageView.OnCloseDocumentListener;
import com.adobe.reader.cloud.async.PopulateBaseURIsAsyncTask;
import com.adobe.reader.cloud.network.BlueHeronAPI;
import com.adobe.reader.cloud.network.PopulateBaseURIsInterface;

public class CloudLoginPopupHandler
  implements CloudAuthenticationInterface, PopulateBaseURIsInterface
{
  private ARViewer mActivity;
  private TextView mErrorScreen;
  private View mGreyBackgroundView = null;
  private LinearLayout mLoadingScreen;
  private FrameLayout mLoginViewLayout = null;
  private WebView mLoginWebView;
  private LinearLayout mPopupLayout = null;
  
  public CloudLoginPopupHandler(ARViewer paramARViewer)
  {
    this.mActivity = paramARViewer;
    initializePopup();
    this.mLoginWebView = ((WebView)this.mPopupLayout.findViewById(2131492936));
    this.mLoadingScreen = ((LinearLayout)this.mPopupLayout.findViewById(2131492938));
    this.mErrorScreen = ((TextView)this.mPopupLayout.findViewById(2131492937));
    this.mActivity.getPageView().addOnCloseDocumentListener(new PageView.OnCloseDocumentListener()
    {
      public void onCloseDocument()
      {
        CloudLoginPopupHandler.this.mActivity.closeCloudLoginPopup();
      }
    });
    this.mActivity.pushBackButtonHandler(new ARViewer.BackButtonHandler()
    {
      public void onBackPressed()
      {
        CloudLoginPopupHandler.this.mActivity.closeCloudLoginPopup();
      }
    });
    ((ImageButton)this.mPopupLayout.findViewById(2131492932)).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        CloudLoginPopupHandler.this.displayPopup();
      }
    });
    ((Button)this.mPopupLayout.findViewById(2131492934)).setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        CloudLoginPopupHandler.this.mActivity.closeCloudLoginPopup();
      }
    });
  }
  
  private void hideAllViews()
  {
    int j = this.mLoginViewLayout.getChildCount();
    int i = 0;
    for (;;)
    {
      if (i >= j) {
        return;
      }
      this.mLoginViewLayout.getChildAt(i).setVisibility(4);
      i += 1;
    }
  }
  
  private void initializePopup()
  {
    ViewGroup localViewGroup = (ViewGroup)this.mActivity.findViewById(2131492871);
    LayoutInflater localLayoutInflater = (LayoutInflater)this.mActivity.getSystemService("layout_inflater");
    this.mGreyBackgroundView = localLayoutInflater.inflate(2130903058, localViewGroup, false);
    localViewGroup.addView(this.mGreyBackgroundView);
    this.mPopupLayout = ((LinearLayout)localLayoutInflater.inflate(2130903048, localViewGroup, false));
    localViewGroup.addView(this.mPopupLayout);
    this.mLoginViewLayout = ((FrameLayout)this.mPopupLayout.findViewById(2131492935));
    this.mActivity.getPageView().blockGesturesOnPage();
    this.mActivity.fadeOutUIElems(true);
    setPopupNoteWidgetPosition(this.mActivity.getResources().getConfiguration().orientation);
  }
  
  private void showErrorScreen()
  {
    hideAllViews();
    String str = this.mActivity.getString(2131362090);
    this.mErrorScreen.setText(str);
    this.mErrorScreen.setVisibility(0);
  }
  
  private void showLoadingScreen()
  {
    hideAllViews();
    this.mLoadingScreen.setVisibility(0);
  }
  
  private void showWebView()
  {
    hideAllViews();
    this.mLoginWebView.setVisibility(0);
  }
  
  public void displayPopup()
  {
    this.mGreyBackgroundView.setVisibility(0);
    this.mPopupLayout.setVisibility(0);
    if (!CloudUIHandler.sBHMarketingPageShown)
    {
      CloudUIHandler.showCloudGettingStartedWebView(this.mActivity, this.mLoginWebView, this);
      return;
    }
    showLoadingScreen();
    if (!BlueHeronAPI.isBaseURIPopulated())
    {
      new PopulateBaseURIsAsyncTask(this).execute(new Void[0]);
      return;
    }
    CloudUIHandler.setupCloudLoginWebView(this.mLoginWebView, this);
  }
  
  public void hidePopup()
  {
    ARUtils.hideKeyboard(this.mLoginWebView);
    this.mPopupLayout.setVisibility(8);
    this.mGreyBackgroundView.setVisibility(8);
    ViewGroup localViewGroup = (ViewGroup)this.mActivity.findViewById(2131492871);
    localViewGroup.removeView(this.mPopupLayout);
    localViewGroup.removeView(this.mGreyBackgroundView);
    this.mActivity.getPageView().allowGesturesOnPage();
    this.mActivity.showUIElems();
    this.mActivity.popBackButtonHandler();
    if (!this.mActivity.isRunningOnTablet()) {
      this.mActivity.setRequestedOrientation(2);
    }
  }
  
  public void onBHGettingStartedClicked()
  {
    CloudUIHandler.sBHMarketingPageShown = true;
    if (!BlueHeronAPI.isBaseURIPopulated()) {
      new PopulateBaseURIsAsyncTask(this).execute(new Void[0]);
    }
  }
  
  public void onLoginSuccess()
  {
    this.mActivity.initiateMoveDocToCloud();
  }
  
  public void onPageLoadError()
  {
    showErrorScreen();
  }
  
  public void onPageLoadSuccess()
  {
    showWebView();
  }
  
  public void onPopulateBaseURIsSuccess()
  {
    CloudUIHandler.setupCloudLoginWebView(this.mLoginWebView, this);
  }
  
  public void onPopuplateBaseURIsFailure()
  {
    showErrorScreen();
  }
  
  public void reloadWebView()
  {
    displayPopup();
  }
  
  public void setPopupNoteWidgetPosition(int paramInt)
  {
    Object localObject;
    if (!this.mActivity.isRunningOnTablet())
    {
      localObject = new RelativeLayout.LayoutParams(-1, -1);
      this.mActivity.setRequestedOrientation(1);
    }
    for (;;)
    {
      ((RelativeLayout.LayoutParams)localObject).addRule(13);
      this.mPopupLayout.setLayoutParams((ViewGroup.LayoutParams)localObject);
      this.mPopupLayout.invalidate();
      return;
      RelativeLayout.LayoutParams localLayoutParams = new RelativeLayout.LayoutParams((int)this.mActivity.getResources().getDimension(2131296501), (int)this.mActivity.getResources().getDimension(2131296502));
      localObject = localLayoutParams;
      if (paramInt == 2)
      {
        localLayoutParams.addRule(10);
        localLayoutParams.topMargin = 20;
        localObject = localLayoutParams;
      }
    }
  }
}
