package com.adobe.reader.cloud.ui;

import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.LinearLayout;
import android.widget.ListView;
import com.adobe.reader.ARFileEntry;
import com.adobe.reader.ARFileEntry.FILE_ENTRY_TYPE;
import com.adobe.reader.ARFileEntryAdapter;
import com.adobe.reader.ARFileEntryAdapter.ADAPTER_TYPE;
import com.adobe.reader.ARSplitPane;

public class CloudFileListViewManager
  implements AdapterView.OnItemClickListener
{
  private ARSplitPane mARSplitPaneActivity;
  private CloudFileListLoader mCloudFileListLoader;
  private LinearLayout mCloudFolderView;
  private CloudUIHandler mCloudUIHandler;
  private ARFileEntryAdapter mPdfFilesAdapter;
  private ListView mPdfFilesListView;
  
  public CloudFileListViewManager(CloudUIHandler paramCloudUIHandler, ARSplitPane paramARSplitPane)
  {
    this.mCloudUIHandler = paramCloudUIHandler;
    this.mARSplitPaneActivity = paramARSplitPane;
    this.mCloudFolderView = ((LinearLayout)paramARSplitPane.findViewById(2131493066));
    this.mPdfFilesAdapter = new ARFileEntryAdapter(this.mARSplitPaneActivity, 2130903054, ARFileEntryAdapter.ADAPTER_TYPE.FOLDER_VIEW);
    this.mPdfFilesListView = ((ListView)paramARSplitPane.findViewById(2131493069));
    this.mPdfFilesListView.setAdapter(this.mPdfFilesAdapter);
    this.mCloudFileListLoader = new CloudFileListLoader(paramCloudUIHandler, this.mARSplitPaneActivity, this.mPdfFilesAdapter, CloudFileListLoader.FILE_LIST_SOURCE.FROM_CLOUD);
    this.mPdfFilesListView.setOnItemClickListener(this);
    this.mPdfFilesAdapter.setNotifyOnChange(true);
  }
  
  public void cleanUp()
  {
    this.mPdfFilesAdapter.resetAdapter();
    this.mPdfFilesAdapter.notifyDataSetChanged();
    this.mCloudFileListLoader.cleanUp();
  }
  
  public String getCurrentDirectory()
  {
    return this.mCloudFileListLoader.getCurrentDirectory();
  }
  
  public void hideView()
  {
    this.mCloudFolderView.setVisibility(8);
  }
  
  public boolean isVisible()
  {
    return this.mCloudFolderView.isShown();
  }
  
  public void onItemClick(AdapterView<?> paramAdapterView, View paramView, int paramInt, long paramLong)
  {
    paramInt = (int)paramLong;
    if ((paramInt < 0) || (paramInt > this.mPdfFilesAdapter.getCount() - 1)) {
      return;
    }
    paramAdapterView = (ARFileEntry)this.mPdfFilesAdapter.getItem((int)paramLong);
    if (paramAdapterView.getFileEntryType() == ARFileEntry.FILE_ENTRY_TYPE.DIRECTORY)
    {
      this.mCloudUIHandler.openDirectory(paramAdapterView.getFilePath(), paramAdapterView.getFileID());
      return;
    }
    this.mCloudUIHandler.openFile(paramAdapterView);
  }
  
  public void resetFileListPosition()
  {
    this.mPdfFilesListView.post(new Runnable()
    {
      public void run()
      {
        CloudFileListViewManager.this.mPdfFilesListView.setSelection(0);
      }
    });
  }
  
  public void setCurrentDirectory(String paramString1, String paramString2)
  {
    this.mCloudFileListLoader.setCurrentDirectory(paramString1, paramString2);
  }
  
  public void showCurrentDirectory()
  {
    this.mCloudFileListLoader.updateFileList();
  }
  
  public void showCurrentDirectory(String paramString1, String paramString2)
  {
    setCurrentDirectory(paramString1, paramString2);
    showCurrentDirectory();
  }
  
  public void showView()
  {
    this.mCloudFolderView.setVisibility(0);
    View localView = this.mARSplitPaneActivity.findViewById(2131493070);
    if ((this.mPdfFilesAdapter != null) && (!this.mPdfFilesAdapter.isEmpty()))
    {
      localView.setVisibility(8);
      this.mPdfFilesListView.setVisibility(0);
      return;
    }
    localView.setVisibility(0);
    this.mPdfFilesListView.setVisibility(8);
  }
}
