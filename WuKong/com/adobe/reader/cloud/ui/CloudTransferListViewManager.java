package com.adobe.reader.cloud.ui;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ListView;
import com.adobe.reader.ARFileEntryAdapter;
import com.adobe.reader.ARFileEntryAdapter.ADAPTER_TYPE;
import com.adobe.reader.ARSplitPane;
import com.adobe.reader.LocalBroadcastManager;
import com.adobe.reader.cloud.CloudTransferManager;
import com.adobe.reader.cloud.network.CloudNetworkManager;

public class CloudTransferListViewManager
  implements LoadCloudFileListInterface
{
  private static boolean mShowOutboxInLeftPane = false;
  private BroadcastReceiver broadcastReceiver_transferListChanged = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      CloudTransferListViewManager.this.updateFileList();
    }
  };
  private ARSplitPane mARSplitPaneActivity;
  private CloudFileListLoader mCloudFileListLoader;
  private FrameLayout mCloudFolderView;
  private CloudTransferManager mCloudTransferManager;
  private ARFileEntryAdapter mPdfFilesAdapter;
  private ListView mPdfFilesListView;
  private Button mRetryButton;
  
  public CloudTransferListViewManager(ARSplitPane paramARSplitPane)
  {
    this.mARSplitPaneActivity = paramARSplitPane;
    this.mCloudFolderView = ((FrameLayout)paramARSplitPane.findViewById(2131493074));
    this.mPdfFilesAdapter = new ARFileEntryAdapter(this.mARSplitPaneActivity, 2130903054, ARFileEntryAdapter.ADAPTER_TYPE.FOLDER_VIEW);
    this.mPdfFilesListView = ((ListView)paramARSplitPane.findViewById(2131493075));
    this.mPdfFilesListView.setAdapter(this.mPdfFilesAdapter);
    this.mCloudFileListLoader = new CloudFileListLoader(this, this.mARSplitPaneActivity, this.mPdfFilesAdapter, CloudFileListLoader.FILE_LIST_SOURCE.IN_TRANSFER);
    this.mRetryButton = ((Button)this.mARSplitPaneActivity.findViewById(2131493112));
    this.mPdfFilesAdapter.setNotifyOnChange(true);
    this.mCloudTransferManager = CloudTransferManager.getInstance();
    this.mCloudTransferManager.openDBConnection();
    this.mRetryButton.setOnClickListener(new View.OnClickListener()
    {
      public void onClick(View paramAnonymousView)
      {
        CloudTransferListViewManager.this.mCloudTransferManager.executePendingTransfers();
      }
    });
    if ((CloudNetworkManager.isSignedIn()) && (this.mCloudTransferManager.getCount() > 0)) {
      mShowOutboxInLeftPane = true;
    }
    LocalBroadcastManager.getInstance(this.mARSplitPaneActivity).registerReceiver(this.broadcastReceiver_transferListChanged, new IntentFilter("com.adobe.adobereader.cloud.cloudTransferListChanged"));
  }
  
  private static void setOutboxVisibility(boolean paramBoolean)
  {
    try
    {
      mShowOutboxInLeftPane = paramBoolean;
      return;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  public static boolean showOutboxInLeftPane()
  {
    try
    {
      boolean bool = mShowOutboxInLeftPane;
      return bool;
    }
    finally
    {
      localObject = finally;
      throw localObject;
    }
  }
  
  private void updateFileList()
  {
    this.mCloudFileListLoader.updateFileList();
  }
  
  public void cleanUp()
  {
    this.mPdfFilesAdapter.resetAdapter();
    this.mPdfFilesAdapter.notifyDataSetChanged();
    this.mCloudFileListLoader.cleanUp();
    mShowOutboxInLeftPane = false;
  }
  
  public void hideView()
  {
    this.mCloudFolderView.setVisibility(8);
  }
  
  public boolean isVisible()
  {
    return this.mCloudFolderView.isShown();
  }
  
  public void onLoadCloudFileListFailed() {}
  
  public void onLoadCloudFileListLoading() {}
  
  public void onLoadCloudFileListStarted() {}
  
  public void onLoadCloudFileListSuccess()
  {
    if ((this.mPdfFilesAdapter != null) && (!this.mPdfFilesAdapter.isEmpty()))
    {
      setOutboxVisibility(true);
      this.mARSplitPaneActivity.refreshLeftPane();
      if (this.mARSplitPaneActivity.getCurrentLeftPaneSelectedItem() == 2131361902) {
        showView();
      }
      return;
    }
    setOutboxVisibility(false);
    if (this.mARSplitPaneActivity.getCurrentLeftPaneSelectedItem() == 2131361902)
    {
      showView();
      return;
    }
    this.mARSplitPaneActivity.refreshLeftPane();
  }
  
  public void setTopBarButtonsVisibility()
  {
    if (this.mARSplitPaneActivity.getCurrentLeftPaneSelectedItem() == 2131361902) {}
    for (int i = 1; i != 0; i = 0)
    {
      this.mRetryButton.setVisibility(0);
      return;
    }
    this.mRetryButton.setVisibility(8);
  }
  
  public void showFileList()
  {
    updateFileList();
  }
  
  public void showView()
  {
    setTopBarButtonsVisibility();
    this.mCloudFolderView.setVisibility(0);
    View localView = this.mARSplitPaneActivity.findViewById(2131493076);
    if ((this.mPdfFilesAdapter != null) && (!this.mPdfFilesAdapter.isEmpty()))
    {
      this.mRetryButton.setVisibility(0);
      localView.setVisibility(8);
      this.mPdfFilesListView.setVisibility(0);
    }
    for (;;)
    {
      this.mPdfFilesListView.setVisibility(0);
      return;
      this.mRetryButton.setVisibility(8);
      localView.setVisibility(0);
      this.mPdfFilesListView.setVisibility(8);
    }
  }
}
