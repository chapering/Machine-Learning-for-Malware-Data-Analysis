package com.adobe.reader;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Build;
import android.os.Build.VERSION;
import android.text.Html;
import android.text.method.LinkMovementMethod;
import android.util.DisplayMetrics;
import android.view.Display;
import android.view.WindowManager;
import android.widget.TextView;
import com.adobe.omniture.android.AppMeasurementWrapper;
import com.adobe.omniture.android.OptInDialogCallback;
import java.util.Hashtable;

class ARAnalytics
{
  public static final int AF_BOOKMARK_NAVIGATED = 3;
  public static final int AF_BOOKMARK_UI = 2;
  public static final int AF_FILL_FORM = 0;
  public static final int AF_FREEHAND_COMMENT_ADDED = 10;
  public static final int AF_FREETEXT_COMMENT_ADDED = 12;
  public static final int AF_GOTO_PAGE = 1;
  public static final int AF_HIGHLIGHT_COMMENT_ADDED = 13;
  public static final int AF_NIGHT_MODE = 4;
  public static final int AF_PREVIOUS_POS = 7;
  public static final int AF_PRINT = 5;
  public static final int AF_SCRUBBER = 6;
  public static final int AF_SIGNATURE_COMMENT_ADDED = 11;
  public static final int AF_SMART_ZOOM = 8;
  public static final int AF_STICKYNOTE_COMMENT_ADDED = 9;
  public static final int AF_STRIKEOUT_COMMENT_ADDED = 15;
  public static final int AF_UNDERLINE_COMMENT_ADDED = 14;
  static final String DOCUMENT_TYPE_ACROFORM = "Acroform Document";
  static final String DOCUMENT_TYPE_DYNAMIC_XFA = "Dynamic XFA Form Document";
  static final String DOCUMENT_TYPE_PORTFOLIO = "Portfolio Document";
  static final String DOCUMENT_TYPE_STANDARD = "Standard Document";
  static final String DOCUMENT_TYPE_STATIC_XFA = "Static XFA Form Document";
  static final String DOC_DOES_NOT_HAVE_UNIQUE_PAGESIZE_AND_GEOMETRY = "Not Unique";
  static final String DOC_HAS_UNIQUE_PAGESIZE_AND_GEOMETRY = "Unique";
  static final String EVENT_DOCUMENT_OPENED = "Document Opened";
  static final String EVENT_KEY_PAGENAME = "pageName";
  static final String EVENT_TRACKING_DEVICE_INFO = "Tracking Device Info";
  static final String[] FLAG_NAMES = { "Android Form Filled", "Android Goto Page", "Android Bookmark UI Opened", "Android Bookmark Navigated", "Android Night Mode Toggled", "Android Google Cloud Print", "Android Scrubber", "Android Previous Position", "Android Smart Zoom", "Android Sticky Note Comment Added", "Android Freehand Comment Added", "Android Signature Comment Added", "Android FreeText Comment Added", "Android Highlight Comment Added", "Android Underline Comment Added", "Android Strike-out Comment Added" };
  private static final String MODE_DEVELOPMENT = "qa";
  private static final String MODE_PRODUCTION = "prod";
  static final String PLATFORM = "Android";
  static final String PROP_DEVICE_TYPE = "prop5";
  static final String PROP_DOCUMENT_HAS_UNIFORM_PAGESIZE_AND_GEOMETRY = "prop4";
  static final String PROP_DOCUMENT_SECURITY_TYPE = "prop3";
  static final String PROP_DOCUMENT_TYPE = "prop2";
  static final String PROP_OPENGL_EXTENSION = "prop9";
  static final String PROP_OPENGL_MAX_TEXTURE_SIZE = "prop10";
  static final String PROP_OPENGL_RENDERER = "prop8";
  static final String PROP_OS_VERSION = "prop6";
  static final String PROP_SCREEN_RESOLUTION = "prop7";
  static final String PROP_TOTAL_PAGES = "prop1";
  private static final String RSID_DEVELOPMENT = "amreadermobileqa";
  private static final String RSID_PRODUCTION = "amreadermobile";
  static final String SECURITY_HANDLER_TYPE_LCRM = "LCRM";
  static final String SECURITY_HANDLER_TYPE_NONE = "None";
  static final String SECURITY_HANDLER_TYPE_STANDARD_NO_PASSWORD = "Standard : Password Not Required";
  static final String SECURITY_HANDLER_TYPE_STANDARD_PASSWORD = "Standard : Password Required";
  static final String SECURITY_HANDLER_TYPE_UNKNOWN = "UNKNOWN";
  static final String SHARE_DOC = "Android Share Document";
  private static final boolean SHOW_LOGS_ANALYTICS = false;
  public static boolean sShouldUpdateSystemInfo = false;
  private static final boolean sUseDevelopmentRSID = false;
  public final int OPTIN_ACCEPTED = 1;
  public final int OPTIN_DECLINED = 0;
  public final int OPTIN_UNSET = -1;
  Activity mAppContext;
  OptInDialogCallback mOptInDialogCallback = null;
  private AlertDlg mOptInDlg = null;
  private AppMeasurementWrapper mTracker;
  
  ARAnalytics(Activity paramActivity, boolean paramBoolean)
  {
    this.mAppContext = paramActivity;
    String str = this.mAppContext.getString(2131361825);
    this.mOptInDialogCallback = new OptInDialogCallbackImpl(null);
    this.mTracker = new AppMeasurementWrapper(paramActivity, str, "amreadermobile", this.mOptInDialogCallback, false, "prod");
    if (!paramBoolean)
    {
      this.mTracker.setup();
      if ((sShouldUpdateSystemInfo) && (readOptInLocal() == 1)) {
        trackSystemInfo();
      }
    }
  }
  
  private String buildPageName(String paramString)
  {
    return String.format("%s : %s", new Object[] { "Reader Mobile", paramString });
  }
  
  private void trackSystemInfo()
  {
    sShouldUpdateSystemInfo = false;
    Hashtable localHashtable = new Hashtable();
    localHashtable.put("prop5", Build.MANUFACTURER + " " + Build.MODEL);
    localHashtable.put("prop6", "Android " + Build.VERSION.RELEASE);
    DisplayMetrics localDisplayMetrics = new DisplayMetrics();
    this.mAppContext.getWindowManager().getDefaultDisplay().getMetrics(localDisplayMetrics);
    if (this.mAppContext.getResources().getConfiguration().orientation == 2) {
      localHashtable.put("prop7", String.valueOf(localDisplayMetrics.heightPixels) + "x" + String.valueOf(localDisplayMetrics.widthPixels));
    }
    for (;;)
    {
      loadOpenGLAnalyticsData(localHashtable);
      trackWithExtraData("Tracking Device Info", localHashtable);
      return;
      localHashtable.put("prop7", String.valueOf(localDisplayMetrics.widthPixels) + "x" + String.valueOf(localDisplayMetrics.heightPixels));
    }
  }
  
  private void updateOptIn(int paramInt)
  {
    if (paramInt == 1)
    {
      this.mTracker.restartOptInWorkflowWithValue(1);
      trackSystemInfo();
      return;
    }
    this.mTracker.optIn = 0;
    this.mTracker.writeOptInLocal(0);
  }
  
  public void cleanUpOptInDlg()
  {
    if (this.mOptInDlg != null)
    {
      this.mOptInDlg.dismiss();
      this.mOptInDlg = null;
    }
  }
  
  /* Error */
  public void loadOpenGLAnalyticsData(Hashtable<String, String> paramHashtable)
  {
    // Byte code:
    //   0: invokestatic 375	javax/microedition/khronos/egl/EGLContext:getEGL	()Ljavax/microedition/khronos/egl/EGL;
    //   3: checkcast 377	javax/microedition/khronos/egl/EGL10
    //   6: astore 6
    //   8: aload 6
    //   10: ifnonnull +4 -> 14
    //   13: return
    //   14: aload 6
    //   16: getstatic 381	javax/microedition/khronos/egl/EGL10:EGL_DEFAULT_DISPLAY	Ljava/lang/Object;
    //   19: invokeinterface 385 2 0
    //   24: astore 7
    //   26: aload 7
    //   28: getstatic 389	javax/microedition/khronos/egl/EGL10:EGL_NO_DISPLAY	Ljavax/microedition/khronos/egl/EGLDisplay;
    //   31: if_acmpeq -18 -> 13
    //   34: aload 6
    //   36: aload 7
    //   38: aconst_null
    //   39: invokeinterface 393 3 0
    //   44: ifeq -31 -> 13
    //   47: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   50: astore_3
    //   51: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   54: astore 4
    //   56: iconst_1
    //   57: newarray int
    //   59: astore 5
    //   61: iconst_3
    //   62: newarray int
    //   64: astore 9
    //   66: aload 9
    //   68: dup
    //   69: iconst_0
    //   70: sipush 12352
    //   73: iastore
    //   74: dup
    //   75: iconst_1
    //   76: iconst_4
    //   77: iastore
    //   78: dup
    //   79: iconst_2
    //   80: sipush 12344
    //   83: iastore
    //   84: pop
    //   85: aload 6
    //   87: aload 7
    //   89: aload 9
    //   91: aconst_null
    //   92: iconst_0
    //   93: aload 5
    //   95: invokeinterface 405 6 0
    //   100: istore_2
    //   101: iload_2
    //   102: ifne +88 -> 190
    //   105: aload 4
    //   107: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   110: if_acmpeq +29 -> 139
    //   113: aload_3
    //   114: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   117: if_acmpeq +22 -> 139
    //   120: aload 6
    //   122: aload 7
    //   124: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   127: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   130: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   133: invokeinterface 409 5 0
    //   138: pop
    //   139: aload 4
    //   141: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   144: if_acmpeq +15 -> 159
    //   147: aload 6
    //   149: aload 7
    //   151: aload 4
    //   153: invokeinterface 413 3 0
    //   158: pop
    //   159: aload_3
    //   160: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   163: if_acmpeq +14 -> 177
    //   166: aload 6
    //   168: aload 7
    //   170: aload_3
    //   171: invokeinterface 417 3 0
    //   176: pop
    //   177: aload 6
    //   179: aload 7
    //   181: invokeinterface 421 2 0
    //   186: pop
    //   187: return
    //   188: astore_1
    //   189: return
    //   190: aload 5
    //   192: iconst_0
    //   193: iaload
    //   194: ifle -89 -> 105
    //   197: iconst_1
    //   198: anewarray 423	javax/microedition/khronos/egl/EGLConfig
    //   201: astore 8
    //   203: aload 6
    //   205: aload 7
    //   207: aload 9
    //   209: aload 8
    //   211: iconst_1
    //   212: aload 5
    //   214: invokeinterface 405 6 0
    //   219: istore_2
    //   220: iload_2
    //   221: ifne +88 -> 309
    //   224: aload 4
    //   226: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   229: if_acmpeq +29 -> 258
    //   232: aload_3
    //   233: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   236: if_acmpeq +22 -> 258
    //   239: aload 6
    //   241: aload 7
    //   243: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   246: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   249: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   252: invokeinterface 409 5 0
    //   257: pop
    //   258: aload 4
    //   260: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   263: if_acmpeq +15 -> 278
    //   266: aload 6
    //   268: aload 7
    //   270: aload 4
    //   272: invokeinterface 413 3 0
    //   277: pop
    //   278: aload_3
    //   279: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   282: if_acmpeq +14 -> 296
    //   285: aload 6
    //   287: aload 7
    //   289: aload_3
    //   290: invokeinterface 417 3 0
    //   295: pop
    //   296: aload 6
    //   298: aload 7
    //   300: invokeinterface 421 2 0
    //   305: pop
    //   306: return
    //   307: astore_1
    //   308: return
    //   309: aload 6
    //   311: aload 7
    //   313: aload 8
    //   315: iconst_0
    //   316: aaload
    //   317: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   320: iconst_3
    //   321: newarray int
    //   323: dup
    //   324: iconst_0
    //   325: sipush 12440
    //   328: iastore
    //   329: dup
    //   330: iconst_1
    //   331: iconst_2
    //   332: iastore
    //   333: dup
    //   334: iconst_2
    //   335: sipush 12344
    //   338: iastore
    //   339: invokeinterface 427 5 0
    //   344: astore 5
    //   346: aload 5
    //   348: astore_3
    //   349: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   352: astore 5
    //   354: aload_3
    //   355: aload 5
    //   357: if_acmpne +88 -> 445
    //   360: aload 4
    //   362: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   365: if_acmpeq +29 -> 394
    //   368: aload_3
    //   369: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   372: if_acmpeq +22 -> 394
    //   375: aload 6
    //   377: aload 7
    //   379: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   382: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   385: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   388: invokeinterface 409 5 0
    //   393: pop
    //   394: aload 4
    //   396: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   399: if_acmpeq +15 -> 414
    //   402: aload 6
    //   404: aload 7
    //   406: aload 4
    //   408: invokeinterface 413 3 0
    //   413: pop
    //   414: aload_3
    //   415: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   418: if_acmpeq +14 -> 432
    //   421: aload 6
    //   423: aload 7
    //   425: aload_3
    //   426: invokeinterface 417 3 0
    //   431: pop
    //   432: aload 6
    //   434: aload 7
    //   436: invokeinterface 421 2 0
    //   441: pop
    //   442: return
    //   443: astore_1
    //   444: return
    //   445: aload 6
    //   447: aload 7
    //   449: aload 8
    //   451: iconst_0
    //   452: aaload
    //   453: iconst_5
    //   454: newarray int
    //   456: dup
    //   457: iconst_0
    //   458: sipush 12375
    //   461: iastore
    //   462: dup
    //   463: iconst_1
    //   464: iconst_1
    //   465: iastore
    //   466: dup
    //   467: iconst_2
    //   468: sipush 12374
    //   471: iastore
    //   472: dup
    //   473: iconst_3
    //   474: iconst_1
    //   475: iastore
    //   476: dup
    //   477: iconst_4
    //   478: sipush 12344
    //   481: iastore
    //   482: invokeinterface 431 4 0
    //   487: astore 5
    //   489: aload 5
    //   491: astore 4
    //   493: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   496: astore 5
    //   498: aload 4
    //   500: aload 5
    //   502: if_acmpne +88 -> 590
    //   505: aload 4
    //   507: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   510: if_acmpeq +29 -> 539
    //   513: aload_3
    //   514: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   517: if_acmpeq +22 -> 539
    //   520: aload 6
    //   522: aload 7
    //   524: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   527: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   530: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   533: invokeinterface 409 5 0
    //   538: pop
    //   539: aload 4
    //   541: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   544: if_acmpeq +15 -> 559
    //   547: aload 6
    //   549: aload 7
    //   551: aload 4
    //   553: invokeinterface 413 3 0
    //   558: pop
    //   559: aload_3
    //   560: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   563: if_acmpeq +14 -> 577
    //   566: aload 6
    //   568: aload 7
    //   570: aload_3
    //   571: invokeinterface 417 3 0
    //   576: pop
    //   577: aload 6
    //   579: aload 7
    //   581: invokeinterface 421 2 0
    //   586: pop
    //   587: return
    //   588: astore_1
    //   589: return
    //   590: aload 6
    //   592: aload 7
    //   594: aload 4
    //   596: aload 4
    //   598: aload_3
    //   599: invokeinterface 409 5 0
    //   604: istore_2
    //   605: iload_2
    //   606: ifne +88 -> 694
    //   609: aload 4
    //   611: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   614: if_acmpeq +29 -> 643
    //   617: aload_3
    //   618: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   621: if_acmpeq +22 -> 643
    //   624: aload 6
    //   626: aload 7
    //   628: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   631: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   634: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   637: invokeinterface 409 5 0
    //   642: pop
    //   643: aload 4
    //   645: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   648: if_acmpeq +15 -> 663
    //   651: aload 6
    //   653: aload 7
    //   655: aload 4
    //   657: invokeinterface 413 3 0
    //   662: pop
    //   663: aload_3
    //   664: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   667: if_acmpeq +14 -> 681
    //   670: aload 6
    //   672: aload 7
    //   674: aload_3
    //   675: invokeinterface 417 3 0
    //   680: pop
    //   681: aload 6
    //   683: aload 7
    //   685: invokeinterface 421 2 0
    //   690: pop
    //   691: return
    //   692: astore_1
    //   693: return
    //   694: aload_3
    //   695: invokevirtual 435	javax/microedition/khronos/egl/EGLContext:getGL	()Ljavax/microedition/khronos/opengles/GL;
    //   698: checkcast 437	javax/microedition/khronos/opengles/GL10
    //   701: astore 8
    //   703: aload 8
    //   705: sipush 7938
    //   708: invokeinterface 440 2 0
    //   713: pop
    //   714: aload_1
    //   715: ldc 107
    //   717: aload 8
    //   719: sipush 7937
    //   722: invokeinterface 440 2 0
    //   727: invokevirtual 293	java/util/Hashtable:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   730: pop
    //   731: aload 8
    //   733: sipush 7939
    //   736: invokeinterface 440 2 0
    //   741: ldc_w 442
    //   744: invokevirtual 446	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   747: ifeq +136 -> 883
    //   750: ldc_w 448
    //   753: astore 5
    //   755: aload_1
    //   756: ldc 101
    //   758: aload 5
    //   760: invokevirtual 293	java/util/Hashtable:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   763: pop
    //   764: iconst_1
    //   765: invokestatic 454	java/nio/IntBuffer:allocate	(I)Ljava/nio/IntBuffer;
    //   768: astore 5
    //   770: aload 8
    //   772: sipush 3379
    //   775: aload 5
    //   777: invokeinterface 458 3 0
    //   782: aload_1
    //   783: ldc 104
    //   785: aload 5
    //   787: iconst_0
    //   788: invokevirtual 462	java/nio/IntBuffer:get	(I)I
    //   791: invokestatic 339	java/lang/String:valueOf	(I)Ljava/lang/String;
    //   794: invokevirtual 293	java/util/Hashtable:put	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   797: pop
    //   798: aload 4
    //   800: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   803: if_acmpeq +29 -> 832
    //   806: aload_3
    //   807: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   810: if_acmpeq +22 -> 832
    //   813: aload 6
    //   815: aload 7
    //   817: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   820: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   823: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   826: invokeinterface 409 5 0
    //   831: pop
    //   832: aload 4
    //   834: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   837: if_acmpeq +15 -> 852
    //   840: aload 6
    //   842: aload 7
    //   844: aload 4
    //   846: invokeinterface 413 3 0
    //   851: pop
    //   852: aload_3
    //   853: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   856: if_acmpeq +14 -> 870
    //   859: aload 6
    //   861: aload 7
    //   863: aload_3
    //   864: invokeinterface 417 3 0
    //   869: pop
    //   870: aload 6
    //   872: aload 7
    //   874: invokeinterface 421 2 0
    //   879: pop
    //   880: return
    //   881: astore_1
    //   882: return
    //   883: ldc_w 464
    //   886: astore 5
    //   888: goto -133 -> 755
    //   891: astore_1
    //   892: aload 4
    //   894: astore_1
    //   895: aload_1
    //   896: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   899: if_acmpeq +29 -> 928
    //   902: aload_3
    //   903: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   906: if_acmpeq +22 -> 928
    //   909: aload 6
    //   911: aload 7
    //   913: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   916: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   919: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   922: invokeinterface 409 5 0
    //   927: pop
    //   928: aload_1
    //   929: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   932: if_acmpeq +14 -> 946
    //   935: aload 6
    //   937: aload 7
    //   939: aload_1
    //   940: invokeinterface 413 3 0
    //   945: pop
    //   946: aload_3
    //   947: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   950: if_acmpeq +14 -> 964
    //   953: aload 6
    //   955: aload 7
    //   957: aload_3
    //   958: invokeinterface 417 3 0
    //   963: pop
    //   964: aload 6
    //   966: aload 7
    //   968: invokeinterface 421 2 0
    //   973: pop
    //   974: return
    //   975: astore_1
    //   976: return
    //   977: astore_1
    //   978: aload 4
    //   980: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   983: if_acmpeq +29 -> 1012
    //   986: aload_3
    //   987: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   990: if_acmpeq +22 -> 1012
    //   993: aload 6
    //   995: aload 7
    //   997: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   1000: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   1003: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   1006: invokeinterface 409 5 0
    //   1011: pop
    //   1012: aload 4
    //   1014: getstatic 401	javax/microedition/khronos/egl/EGL10:EGL_NO_SURFACE	Ljavax/microedition/khronos/egl/EGLSurface;
    //   1017: if_acmpeq +15 -> 1032
    //   1020: aload 6
    //   1022: aload 7
    //   1024: aload 4
    //   1026: invokeinterface 413 3 0
    //   1031: pop
    //   1032: aload_3
    //   1033: getstatic 397	javax/microedition/khronos/egl/EGL10:EGL_NO_CONTEXT	Ljavax/microedition/khronos/egl/EGLContext;
    //   1036: if_acmpeq +14 -> 1050
    //   1039: aload 6
    //   1041: aload 7
    //   1043: aload_3
    //   1044: invokeinterface 417 3 0
    //   1049: pop
    //   1050: aload 6
    //   1052: aload 7
    //   1054: invokeinterface 421 2 0
    //   1059: pop
    //   1060: aload_1
    //   1061: athrow
    //   1062: astore_3
    //   1063: goto -3 -> 1060
    //   1066: astore_1
    //   1067: goto -89 -> 978
    //   1070: astore_1
    //   1071: goto -93 -> 978
    //   1074: astore_1
    //   1075: aload 4
    //   1077: astore_1
    //   1078: goto -183 -> 895
    //   1081: astore_1
    //   1082: aload 4
    //   1084: astore_1
    //   1085: goto -190 -> 895
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1088	0	this	ARAnalytics
    //   0	1088	1	paramHashtable	Hashtable<String, String>
    //   100	506	2	bool	boolean
    //   50	994	3	localObject1	Object
    //   1062	1	3	localException	Exception
    //   54	1029	4	localObject2	Object
    //   59	828	5	localObject3	Object
    //   6	1045	6	localEGL10	javax.microedition.khronos.egl.EGL10
    //   24	1029	7	localEGLDisplay	javax.microedition.khronos.egl.EGLDisplay
    //   201	570	8	localObject4	Object
    //   64	144	9	arrayOfInt	int[]
    // Exception table:
    //   from	to	target	type
    //   105	139	188	java/lang/Exception
    //   139	159	188	java/lang/Exception
    //   159	177	188	java/lang/Exception
    //   177	187	188	java/lang/Exception
    //   224	258	307	java/lang/Exception
    //   258	278	307	java/lang/Exception
    //   278	296	307	java/lang/Exception
    //   296	306	307	java/lang/Exception
    //   360	394	443	java/lang/Exception
    //   394	414	443	java/lang/Exception
    //   414	432	443	java/lang/Exception
    //   432	442	443	java/lang/Exception
    //   505	539	588	java/lang/Exception
    //   539	559	588	java/lang/Exception
    //   559	577	588	java/lang/Exception
    //   577	587	588	java/lang/Exception
    //   609	643	692	java/lang/Exception
    //   643	663	692	java/lang/Exception
    //   663	681	692	java/lang/Exception
    //   681	691	692	java/lang/Exception
    //   798	832	881	java/lang/Exception
    //   832	852	881	java/lang/Exception
    //   852	870	881	java/lang/Exception
    //   870	880	881	java/lang/Exception
    //   56	101	891	java/lang/Exception
    //   197	220	891	java/lang/Exception
    //   309	346	891	java/lang/Exception
    //   895	928	975	java/lang/Exception
    //   928	946	975	java/lang/Exception
    //   946	964	975	java/lang/Exception
    //   964	974	975	java/lang/Exception
    //   56	101	977	finally
    //   197	220	977	finally
    //   309	346	977	finally
    //   978	1012	1062	java/lang/Exception
    //   1012	1032	1062	java/lang/Exception
    //   1032	1050	1062	java/lang/Exception
    //   1050	1060	1062	java/lang/Exception
    //   349	354	1066	finally
    //   445	489	1066	finally
    //   493	498	1070	finally
    //   590	605	1070	finally
    //   694	750	1070	finally
    //   755	798	1070	finally
    //   349	354	1074	java/lang/Exception
    //   445	489	1074	java/lang/Exception
    //   493	498	1081	java/lang/Exception
    //   590	605	1081	java/lang/Exception
    //   694	750	1081	java/lang/Exception
    //   755	798	1081	java/lang/Exception
  }
  
  public int readOptInLocal()
  {
    return this.mTracker.readOptInLocal();
  }
  
  public void track(String paramString)
  {
    Hashtable localHashtable = new Hashtable();
    localHashtable.put("pageName", buildPageName(paramString));
    this.mTracker.trackApp(localHashtable);
  }
  
  public void track(Hashtable<String, String> paramHashtable)
  {
    this.mTracker.trackApp(paramHashtable);
  }
  
  public void trackGlobal(String paramString)
  {
    this.mTracker.track(paramString, null);
  }
  
  public void trackGlobal(String paramString, Hashtable<String, String> paramHashtable)
  {
    this.mTracker.track(paramString, paramHashtable);
  }
  
  public void trackWithExtraData(String paramString, Hashtable<String, String> paramHashtable)
  {
    paramHashtable.put("pageName", buildPageName(paramString));
    this.mTracker.trackApp(paramHashtable);
  }
  
  public void updateOptInFromSettings(int paramInt)
  {
    if (paramInt == 1)
    {
      this.mTracker.writeOptInLocal(1);
      this.mTracker.setup();
      this.mTracker.restartOptInWorkflowWithValue(1);
      trackSystemInfo();
      return;
    }
    this.mTracker.optIn = 0;
    this.mTracker.writeOptInLocal(0);
  }
  
  public void updateTrackerOptIn(int paramInt)
  {
    this.mTracker.optIn = paramInt;
  }
  
  private class OptInDialogCallbackImpl
    implements OptInDialogCallback
  {
    private OptInDialogCallbackImpl() {}
    
    public void showOptInDialog()
    {
      String str = ARAnalytics.this.mAppContext.getResources().getString(2131362189, new Object[] { ARAnalytics.this.mAppContext.getResources().getString(2131361793) });
      TextView localTextView = new TextView(ARAnalytics.this.mAppContext);
      localTextView.setText(Html.fromHtml(str));
      localTextView.setMovementMethod(LinkMovementMethod.getInstance());
      localTextView.setPadding((int)ARAnalytics.this.mAppContext.getResources().getDimension(2131296487), 0, (int)ARAnalytics.this.mAppContext.getResources().getDimension(2131296488), 0);
      localTextView.setTextSize(0, ARAnalytics.this.mAppContext.getResources().getDimension(2131296489));
      if (ARAnalytics.this.mOptInDlg == null)
      {
        ARAnalytics.this.mOptInDlg = new AlertDlg(ARAnalytics.this.mAppContext);
        ARAnalytics.this.mOptInDlg.setView(localTextView);
        ARAnalytics.this.mOptInDlg.setTitle(ARAnalytics.this.mAppContext.getString(2131362184));
        ARAnalytics.this.mOptInDlg.setCancelable(false);
        ARAnalytics.this.mOptInDlg.setButton(-1, ARAnalytics.this.mAppContext.getString(2131362188), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            ARAnalytics.this.updateOptIn(1);
            paramAnonymousDialogInterface.cancel();
          }
        });
        ARAnalytics.this.mOptInDlg.setButton(-2, ARAnalytics.this.mAppContext.getString(2131362187), new DialogInterface.OnClickListener()
        {
          public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
          {
            ARAnalytics.this.updateOptIn(0);
            paramAnonymousDialogInterface.cancel();
          }
        });
      }
      ARAnalytics.this.mOptInDlg.show();
    }
  }
}
