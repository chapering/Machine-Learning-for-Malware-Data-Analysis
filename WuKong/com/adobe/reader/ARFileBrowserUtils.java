package com.adobe.reader;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.os.Environment;
import android.util.Base64;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;

public class ARFileBrowserUtils
{
  public static final int DEFAULT_DOCUMENT_VIEW = 2;
  public static final int DEFAULT_LEFT_PANE_ENTRY = 2131361899;
  private static final String DEVICE_PATH_FOR_FUSE = "/dev/fuse";
  private static final String DEVICE_PATH_FOR_VOLD = "/dev/block/vold";
  private static final String DIRECTORIES_CONTAINING_PDFS = "directoriesContainingPDFs";
  public static final FilenameFilter DIRECTORY_FILTER;
  public static final int DOCUMENT_ALL_PDF_VIEW = 2;
  public static final int DOCUMENT_FOLDER_VIEW = 1;
  private static final String DOCUMENT_VIEW_STATE = "documentViewState";
  public static final String EXTENSION_SEP = ".";
  public static final String INVALID_FILE_CHARS = "|\\?*<\":>/";
  public static final String LEFT_PANE_ENTRY = "com.adobe.reader.LEFT_PANE_ENTRY";
  private static final int MAX_RECENT_FILES = 30;
  private static final String MOUNT_COMMAND = "mount";
  public static final int NOT_A_DOCUMENT_VIEW = 0;
  public static final FilenameFilter PDF_FILE_FILTER = new FilenameFilter()
  {
    public boolean accept(File paramAnonymousFile, String paramAnonymousString)
    {
      if (paramAnonymousFile == null) {}
      do
      {
        return false;
        paramAnonymousFile = new File(paramAnonymousFile.getAbsolutePath() + File.separatorChar + paramAnonymousString);
      } while ((paramAnonymousFile == null) || (paramAnonymousFile.isDirectory()) || (!paramAnonymousString.toLowerCase().endsWith(".pdf")));
      return true;
    }
  };
  private static final String RECENT_FILE = "recentFile";
  private static final String RECENT_FILE_CLOUD_ID = "recentFileCloudId";
  private static final String RECENT_FILE_THUMBNAIL = "recentFileThumbnail";
  private static final String RECENT_FILE_THUMBNAIL_STATUS = "recentFileThumbnailStatus";
  private static final String RECENT_OFFSET_X = "recentOffsetX";
  private static final String RECENT_OFFSET_Y = "recentOffsetY";
  private static final String RECENT_PAGE_NUM = "recentPageNum";
  private static final String RECENT_REFLOW_FONT_SIZE = "recentReflowFontSize";
  private static final String RECENT_VIEW_MODE = "recentViewMode";
  private static final String RECENT_ZOOM_LEVEL = "recentZoomLevel";
  private static final String ROOT_DIR;
  private static List<ARDirectoryEntry> sDirectoryList;
  public static final File sEmmcDirectory = new File("/emmc");
  private static List<ARFileEntry> sRecentFilesList;
  public static final File sRootDirectory;
  
  static
  {
    DIRECTORY_FILTER = new FilenameFilter()
    {
      public boolean accept(File paramAnonymousFile, String paramAnonymousString)
      {
        if (paramAnonymousFile == null) {}
        do
        {
          return false;
          paramAnonymousFile = new File(paramAnonymousFile.getAbsolutePath() + File.separatorChar + paramAnonymousString);
        } while ((paramAnonymousFile == null) || (!paramAnonymousFile.isDirectory()));
        return true;
      }
    };
    sRecentFilesList = new ArrayList();
    sDirectoryList = new ArrayList();
    ROOT_DIR = Environment.getExternalStorageDirectory().getAbsolutePath();
    sRootDirectory = new File(ROOT_DIR);
  }
  
  public ARFileBrowserUtils() {}
  
  public static Bitmap Base64ToBitmap(String paramString)
  {
    try
    {
      paramString = Base64.decode(paramString, 0);
      paramString = BitmapFactory.decodeByteArray(paramString, 0, paramString.length);
      return paramString;
    }
    catch (IllegalArgumentException paramString) {}
    return null;
  }
  
  public static String BitmapToBase64(Bitmap paramBitmap)
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    paramBitmap.compress(Bitmap.CompressFormat.PNG, 100, localByteArrayOutputStream);
    return Base64.encodeToString(localByteArrayOutputStream.toByteArray(), 0);
  }
  
  public static void addPDFContainingDirectoriesToPreferences(Context paramContext, List<String> paramList)
  {
    if (paramList == null) {
      return;
    }
    Collections.sort(paramList, new Comparator()
    {
      public int compare(String paramAnonymousString1, String paramAnonymousString2)
      {
        return paramAnonymousString1.compareToIgnoreCase(paramAnonymousString2);
      }
    });
    StringBuilder localStringBuilder = new StringBuilder();
    Iterator localIterator = paramList.iterator();
    for (paramList = "";; paramList = ",")
    {
      if (!localIterator.hasNext())
      {
        paramContext = paramContext.getSharedPreferences("com.adobe.reader.preferences", 0).edit();
        paramContext.putString("directoriesContainingPDFs", localStringBuilder.toString());
        paramContext.commit();
        return;
      }
      String str = (String)localIterator.next();
      localStringBuilder.append(paramList);
      localStringBuilder.append(str);
    }
  }
  
  public static String availablePathInExtStorageForFileNamed(String paramString)
  {
    try
    {
      Object localObject = getPermanentStorageDownloadDirectory();
      if (localObject == null) {
        return null;
      }
      ((File)localObject).mkdirs();
      localObject = ((File)localObject).getCanonicalPath();
      int i = paramString.lastIndexOf('.');
      if (i != -1)
      {
        String str1 = paramString.substring(0, i);
        String str2 = paramString.substring(i);
        i = 0;
        for (;;)
        {
          paramString = localObject + File.separator + paramString;
          File localFile = new File(paramString);
          if ((!localFile.exists()) || (!localFile.isFile())) {
            break;
          }
          i += 1;
          paramString = String.format("-%d", new Object[] { Integer.valueOf(i) });
          paramString = str1 + paramString + str2;
        }
        return paramString;
      }
    }
    catch (IOException paramString) {}
    return null;
  }
  
  /* Error */
  public static void clearRecentFileList(Context paramContext)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_1
    //   2: ldc 2
    //   4: monitorenter
    //   5: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   8: invokeinterface 321 1 0
    //   13: ifeq +10 -> 23
    //   16: aload_0
    //   17: invokestatic 325	com/adobe/reader/ARFileBrowserUtils:getRecentFilesList	(Landroid/content/Context;)Ljava/util/List;
    //   20: putstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   23: new 327	com/adobe/reader/ARPrefsEditor
    //   26: dup
    //   27: aload_0
    //   28: ldc -27
    //   30: iconst_0
    //   31: invokevirtual 235	android/content/Context:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   34: invokespecial 330	com/adobe/reader/ARPrefsEditor:<init>	(Landroid/content/SharedPreferences;)V
    //   37: astore_0
    //   38: iload_1
    //   39: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   42: invokeinterface 333 1 0
    //   47: if_icmplt +19 -> 66
    //   50: aload_0
    //   51: invokevirtual 336	com/adobe/reader/ARPrefsEditor:apply	()V
    //   54: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   57: invokeinterface 339 1 0
    //   62: ldc 2
    //   64: monitorexit
    //   65: return
    //   66: aload_0
    //   67: iload_1
    //   68: invokestatic 343	com/adobe/reader/ARFileBrowserUtils:removeRecentsEntryFromSharedPrefs	(Lcom/adobe/reader/ARPrefsEditor;I)V
    //   71: iload_1
    //   72: iconst_1
    //   73: iadd
    //   74: istore_1
    //   75: goto -37 -> 38
    //   78: astore_0
    //   79: ldc 2
    //   81: monitorexit
    //   82: aload_0
    //   83: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	84	0	paramContext	Context
    //   1	74	1	i	int
    // Exception table:
    //   from	to	target	type
    //   5	23	78	finally
    //   23	38	78	finally
    //   38	62	78	finally
    //   66	71	78	finally
  }
  
  public static int compareFileName(ARFileEntry paramARFileEntry1, ARFileEntry paramARFileEntry2)
  {
    return paramARFileEntry1.getFileName().toLowerCase().compareTo(paramARFileEntry2.getFileName().toLowerCase());
  }
  
  /* Error */
  public static void copyFileContents(File paramFile1, File paramFile2)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore_3
    //   5: aload_0
    //   6: invokevirtual 302	java/io/File:exists	()Z
    //   9: ifne +4 -> 13
    //   12: return
    //   13: aload_1
    //   14: invokevirtual 302	java/io/File:exists	()Z
    //   17: ifne +8 -> 25
    //   20: aload_1
    //   21: invokevirtual 364	java/io/File:createNewFile	()Z
    //   24: pop
    //   25: new 366	java/io/FileInputStream
    //   28: dup
    //   29: aload_0
    //   30: invokespecial 369	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   33: astore_0
    //   34: new 371	java/io/FileOutputStream
    //   37: dup
    //   38: aload_1
    //   39: invokespecial 372	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   42: astore_3
    //   43: sipush 1024
    //   46: newarray byte
    //   48: astore_1
    //   49: aload_0
    //   50: aload_1
    //   51: invokevirtual 378	java/io/InputStream:read	([B)I
    //   54: istore_2
    //   55: iload_2
    //   56: ifgt +26 -> 82
    //   59: aload_0
    //   60: ifnull +7 -> 67
    //   63: aload_0
    //   64: invokevirtual 381	java/io/InputStream:close	()V
    //   67: aload_3
    //   68: ifnull -56 -> 12
    //   71: aload_3
    //   72: invokevirtual 384	java/io/OutputStream:close	()V
    //   75: return
    //   76: astore_0
    //   77: aload_0
    //   78: invokevirtual 387	java/io/IOException:printStackTrace	()V
    //   81: return
    //   82: aload_3
    //   83: aload_1
    //   84: iconst_0
    //   85: iload_2
    //   86: invokevirtual 391	java/io/OutputStream:write	([BII)V
    //   89: goto -40 -> 49
    //   92: astore_1
    //   93: aload_0
    //   94: astore_1
    //   95: aload_3
    //   96: astore_0
    //   97: aload_1
    //   98: ifnull +7 -> 105
    //   101: aload_1
    //   102: invokevirtual 381	java/io/InputStream:close	()V
    //   105: aload_0
    //   106: ifnull -94 -> 12
    //   109: aload_0
    //   110: invokevirtual 384	java/io/OutputStream:close	()V
    //   113: return
    //   114: astore_0
    //   115: aload_0
    //   116: invokevirtual 387	java/io/IOException:printStackTrace	()V
    //   119: return
    //   120: astore_1
    //   121: aconst_null
    //   122: astore_0
    //   123: aload 4
    //   125: astore_3
    //   126: aload_0
    //   127: ifnull +7 -> 134
    //   130: aload_0
    //   131: invokevirtual 381	java/io/InputStream:close	()V
    //   134: aload_3
    //   135: ifnull +7 -> 142
    //   138: aload_3
    //   139: invokevirtual 384	java/io/OutputStream:close	()V
    //   142: aload_1
    //   143: athrow
    //   144: astore_0
    //   145: aload_0
    //   146: invokevirtual 387	java/io/IOException:printStackTrace	()V
    //   149: goto -7 -> 142
    //   152: astore_0
    //   153: return
    //   154: astore_1
    //   155: aload 4
    //   157: astore_3
    //   158: goto -32 -> 126
    //   161: astore_1
    //   162: goto -36 -> 126
    //   165: astore_0
    //   166: aconst_null
    //   167: astore_0
    //   168: aload_3
    //   169: astore_1
    //   170: goto -73 -> 97
    //   173: astore_1
    //   174: aconst_null
    //   175: astore_3
    //   176: aload_0
    //   177: astore_1
    //   178: aload_3
    //   179: astore_0
    //   180: goto -83 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	183	0	paramFile1	File
    //   0	183	1	paramFile2	File
    //   54	32	2	i	int
    //   4	175	3	localObject1	Object
    //   1	155	4	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   63	67	76	java/io/IOException
    //   71	75	76	java/io/IOException
    //   43	49	92	java/lang/Exception
    //   49	55	92	java/lang/Exception
    //   82	89	92	java/lang/Exception
    //   101	105	114	java/io/IOException
    //   109	113	114	java/io/IOException
    //   25	34	120	finally
    //   130	134	144	java/io/IOException
    //   138	142	144	java/io/IOException
    //   20	25	152	java/io/IOException
    //   34	43	154	finally
    //   43	49	161	finally
    //   49	55	161	finally
    //   82	89	161	finally
    //   25	34	165	java/lang/Exception
    //   34	43	173	java/lang/Exception
  }
  
  public static boolean createDirectory(String paramString)
  {
    if (paramString != null)
    {
      paramString = paramString.trim();
      if (paramString.length() > 0)
      {
        paramString = new File(paramString);
        if (!paramString.exists()) {
          break label34;
        }
      }
    }
    return false;
    label34:
    paramString.mkdir();
    return paramString.exists();
  }
  
  public static boolean deleteFile(File paramFile)
  {
    File[] arrayOfFile;
    int i;
    if ((paramFile.isDirectory()) && (paramFile.canWrite()))
    {
      arrayOfFile = paramFile.listFiles();
      if (arrayOfFile != null) {
        i = 0;
      }
    }
    for (;;)
    {
      if (i >= arrayOfFile.length) {
        return paramFile.delete();
      }
      deleteFile(arrayOfFile[i]);
      i += 1;
    }
  }
  
  private static void destroyProcess(Process paramProcess)
  {
    if (paramProcess != null) {}
    try
    {
      paramProcess.exitValue();
      return;
    }
    catch (IllegalThreadStateException localIllegalThreadStateException)
    {
      paramProcess.destroy();
    }
  }
  
  public static boolean duplicateFile(String paramString)
  {
    File localFile1 = new File(paramString);
    int i = 1;
    File localFile2;
    do
    {
      localFile2 = new File(getRenamedFilePath(paramString, i));
      i += 1;
    } while (localFile2.exists());
    try
    {
      copyFileContents(localFile1, localFile2);
      if ((localFile2.exists()) && (localFile2.length() == localFile1.length())) {
        return true;
      }
    }
    catch (SecurityException paramString)
    {
      return false;
    }
    return false;
  }
  
  /* Error */
  public static int fileAlreadyViewed(String paramString)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: iconst_0
    //   4: istore_1
    //   5: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   8: invokeinterface 333 1 0
    //   13: istore_2
    //   14: iload_1
    //   15: iload_2
    //   16: if_icmplt +10 -> 26
    //   19: iconst_m1
    //   20: istore_1
    //   21: ldc 2
    //   23: monitorexit
    //   24: iload_1
    //   25: ireturn
    //   26: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   29: iload_1
    //   30: invokeinterface 448 2 0
    //   35: checkcast 347	com/adobe/reader/ARFileEntry
    //   38: invokevirtual 451	com/adobe/reader/ARFileEntry:getFilePath	()Ljava/lang/String;
    //   41: aload_0
    //   42: invokevirtual 454	java/lang/String:equalsIgnoreCase	(Ljava/lang/String;)Z
    //   45: istore_3
    //   46: iload_3
    //   47: ifeq +6 -> 53
    //   50: goto -29 -> 21
    //   53: iload_1
    //   54: iconst_1
    //   55: iadd
    //   56: istore_1
    //   57: goto -52 -> 5
    //   60: astore_0
    //   61: ldc 2
    //   63: monitorexit
    //   64: aload_0
    //   65: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	66	0	paramString	String
    //   4	53	1	i	int
    //   13	4	2	j	int
    //   45	2	3	bool	boolean
    // Exception table:
    //   from	to	target	type
    //   5	14	60	finally
    //   26	46	60	finally
  }
  
  public static boolean fileExists(File paramFile)
  {
    try
    {
      boolean bool = paramFile.exists();
      return bool;
    }
    catch (SecurityException paramFile) {}
    return false;
  }
  
  public static String getCanonicalFilePath(String paramString)
  {
    Object localObject = new File(paramString);
    try
    {
      localObject = ((File)localObject).getCanonicalPath();
      return localObject;
    }
    catch (IOException localIOException) {}
    return paramString;
  }
  
  public static List<String> getDirectoriesContainingPDFs(Context paramContext)
  {
    Object localObject = null;
    String str = paramContext.getSharedPreferences("com.adobe.reader.preferences", 0).getString("directoriesContainingPDFs", null);
    paramContext = localObject;
    if (str != null) {
      paramContext = new ArrayList(Arrays.asList(str.split(",")));
    }
    return paramContext;
  }
  
  public static List<ARDirectoryEntry> getDirectoryList(Context paramContext)
  {
    if (sDirectoryList.isEmpty()) {
      sDirectoryList.add(new ARDirectoryEntry(paramContext.getResources().getString(2131361900)));
    }
    return sDirectoryList;
  }
  
  public static int getDocumentViewState(Activity paramActivity)
  {
    return paramActivity.getSharedPreferences("com.adobe.reader.preferences", 0).getInt("documentViewState", 2);
  }
  
  public static String getFileManagerDefaultDirectoryPath(Activity paramActivity)
  {
    Object localObject = null;
    paramActivity = localObject;
    File localFile;
    if (isPermanentStorageAvailable())
    {
      localFile = getPermanentStorageDownloadDirectory();
      paramActivity = localObject;
      if (localFile != null)
      {
        paramActivity = localObject;
        if (!localFile.exists()) {}
      }
    }
    try
    {
      paramActivity = localFile.getCanonicalPath();
      return paramActivity;
    }
    catch (IOException paramActivity) {}
    return null;
  }
  
  public static File[] getListOfExternalStorageMountPoints()
  {
    ArrayList localArrayList = new ArrayList();
    int k;
    int i;
    try
    {
      localObject1 = new ProcessBuilder(new String[] { "mount" });
      ((ProcessBuilder)localObject1).redirectErrorStream(true);
      localObject1 = ((ProcessBuilder)localObject1).start();
      try
      {
        ((Process)localObject1).waitFor();
        localObject3 = new BufferedReader(new InputStreamReader(((Process)localObject1).getInputStream()));
        for (;;)
        {
          str = ((BufferedReader)localObject3).readLine();
          if (str == null)
          {
            k = localArrayList.size();
            localObject3 = new ArrayList();
            i = 0;
            if (i < k) {
              break;
            }
            localArrayList.removeAll((Collection)localObject3);
            ((ArrayList)localObject3).clear();
            destroyProcess((Process)localObject1);
            localObject1 = (File[])localArrayList.toArray(new File[localArrayList.size()]);
            return localObject1;
          }
          if ((str.startsWith("/dev/block/vold")) || (str.startsWith("/dev/fuse"))) {
            localArrayList.add(new File(str.split(" ")[1]));
          }
        }
        if (localObject1 == null) {
          break label199;
        }
      }
      catch (Exception localException2) {}
    }
    catch (Exception localException1)
    {
      for (;;)
      {
        Object localObject1;
        Object localObject3;
        String str;
        localObject2 = null;
      }
    }
    ((Process)localObject1).destroy();
    label199:
    return new File[] { sRootDirectory };
    str = ((File)localException2.get(i)).getParent();
    int j = 0;
    break label291;
    label229:
    while (j != 0)
    {
      ((ArrayList)localObject3).add((File)localException2.get(i));
      break;
      label251:
      if (str == null) {
        break label313;
      }
      int m = str.indexOf(((File)localException2.get(j)).getAbsolutePath());
      if (m != 0) {
        break label313;
      }
      j = 1;
    }
    for (;;)
    {
      Object localObject2;
      label291:
      if (j >= k)
      {
        j = 0;
        break label229;
        i += 1;
        break;
      }
      if (i != j) {
        break label251;
      }
      label313:
      j += 1;
    }
  }
  
  public static File getPermanentStorageDownloadDirectory()
  {
    String str = getPermanentStorageDownloadDirectoryPath();
    if (str == null) {
      return null;
    }
    return new File(str);
  }
  
  public static String getPermanentStorageDownloadDirectoryPath()
  {
    try
    {
      if (isSDCardAvailable()) {
        return Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getCanonicalPath() + File.separator + "Adobe Reader";
      }
      if (isEmmcAvailable())
      {
        String str = sEmmcDirectory.getCanonicalPath() + File.separator + Environment.DIRECTORY_DOWNLOADS + File.separator + "Adobe Reader";
        return str;
      }
    }
    catch (IOException localIOException) {}
    return null;
  }
  
  public static ARLastViewedPosition getPositionForFile(Context paramContext, String paramString)
  {
    label120:
    for (;;)
    {
      try
      {
        String str = getCanonicalFilePath(paramString);
        paramString = new ARLastViewedPosition();
        int i;
        try
        {
          if (!sRecentFilesList.isEmpty()) {
            break label120;
          }
          sRecentFilesList = getRecentFilesList(paramContext);
        }
        catch (ClassCastException paramContext)
        {
          int j;
          paramContext = paramString;
          continue;
        }
        j = sRecentFilesList.size();
        if (i >= j)
        {
          paramContext = paramString;
          return paramContext;
        }
        if (((ARFileEntry)sRecentFilesList.get(i)).getFilePath().equals(str))
        {
          paramContext = ((ARFileEntry)sRecentFilesList.get(i)).getInitialPosition();
        }
        else
        {
          i += 1;
          continue;
          i = 0;
        }
      }
      finally {}
    }
  }
  
  /* Error */
  public static List<ARFileEntry> getRecentFilesList(Context paramContext)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_0
    //   4: ldc -27
    //   6: iconst_0
    //   7: invokevirtual 235	android/content/Context:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   10: astore 12
    //   12: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   15: invokeinterface 339 1 0
    //   20: iconst_0
    //   21: istore 4
    //   23: iconst_0
    //   24: istore 5
    //   26: iload 5
    //   28: bipush 30
    //   30: if_icmplt +21 -> 51
    //   33: iload 4
    //   35: ifeq +7 -> 42
    //   38: aload_0
    //   39: invokestatic 605	com/adobe/reader/ARFileBrowserUtils:removeDeletedFilesFromRecents	(Landroid/content/Context;)V
    //   42: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   45: astore_0
    //   46: ldc 2
    //   48: monitorexit
    //   49: aload_0
    //   50: areturn
    //   51: aload 12
    //   53: new 212	java/lang/StringBuilder
    //   56: dup
    //   57: ldc 57
    //   59: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   62: iload 5
    //   64: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   67: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: aconst_null
    //   71: invokeinterface 461 3 0
    //   76: astore 11
    //   78: aload 11
    //   80: ifnull -47 -> 33
    //   83: new 144	java/io/File
    //   86: dup
    //   87: aload 11
    //   89: invokespecial 153	java/io/File:<init>	(Ljava/lang/String;)V
    //   92: astore 13
    //   94: aload 13
    //   96: invokevirtual 305	java/io/File:isFile	()Z
    //   99: ifeq +506 -> 605
    //   102: aload 13
    //   104: invokestatic 610	com/adobe/reader/ARFileBrowserUtils:fileExists	(Ljava/io/File;)Z
    //   107: ifeq +498 -> 605
    //   110: aload 13
    //   112: invokevirtual 613	java/io/File:getName	()Ljava/lang/String;
    //   115: invokevirtual 353	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   118: ldc_w 615
    //   121: invokevirtual 618	java/lang/String:endsWith	(Ljava/lang/String;)Z
    //   124: ifeq +481 -> 605
    //   127: aload 12
    //   129: new 212	java/lang/StringBuilder
    //   132: dup
    //   133: ldc 75
    //   135: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   138: iload 5
    //   140: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   143: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   146: iconst_0
    //   147: invokeinterface 502 3 0
    //   152: istore 6
    //   154: aload 12
    //   156: new 212	java/lang/StringBuilder
    //   159: dup
    //   160: ldc 84
    //   162: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   165: iload 5
    //   167: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   170: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   173: fconst_0
    //   174: invokeinterface 622 3 0
    //   179: f2d
    //   180: dstore_1
    //   181: aload 12
    //   183: new 212	java/lang/StringBuilder
    //   186: dup
    //   187: ldc 69
    //   189: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   192: iload 5
    //   194: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   197: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   200: iconst_0
    //   201: invokeinterface 502 3 0
    //   206: istore 7
    //   208: aload 12
    //   210: new 212	java/lang/StringBuilder
    //   213: dup
    //   214: ldc 72
    //   216: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   219: iload 5
    //   221: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   224: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   227: iconst_0
    //   228: invokeinterface 502 3 0
    //   233: istore 8
    //   235: aload 12
    //   237: new 212	java/lang/StringBuilder
    //   240: dup
    //   241: ldc 78
    //   243: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   246: iload 5
    //   248: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   251: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   254: fconst_0
    //   255: invokeinterface 622 3 0
    //   260: fstore_3
    //   261: aload 12
    //   263: new 212	java/lang/StringBuilder
    //   266: dup
    //   267: ldc 81
    //   269: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   272: iload 5
    //   274: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   277: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   280: iconst_4
    //   281: invokeinterface 502 3 0
    //   286: istore 9
    //   288: aload 12
    //   290: new 212	java/lang/StringBuilder
    //   293: dup
    //   294: ldc 66
    //   296: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   299: iload 5
    //   301: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   304: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   307: iconst_0
    //   308: invokeinterface 502 3 0
    //   313: istore 10
    //   315: aload 12
    //   317: new 212	java/lang/StringBuilder
    //   320: dup
    //   321: ldc 63
    //   323: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   326: iload 5
    //   328: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   331: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   334: ldc -35
    //   336: invokeinterface 461 3 0
    //   341: astore 11
    //   343: aload 12
    //   345: new 212	java/lang/StringBuilder
    //   348: dup
    //   349: ldc 60
    //   351: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   354: iload 5
    //   356: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   359: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   362: aconst_null
    //   363: invokeinterface 461 3 0
    //   368: astore 14
    //   370: aload 11
    //   372: invokestatic 624	com/adobe/reader/ARFileBrowserUtils:Base64ToBitmap	(Ljava/lang/String;)Landroid/graphics/Bitmap;
    //   375: astore 15
    //   377: iload 9
    //   379: ifne +99 -> 478
    //   382: new 594	com/adobe/reader/ARLastViewedPosition
    //   385: dup
    //   386: invokespecial 595	com/adobe/reader/ARLastViewedPosition:<init>	()V
    //   389: astore 11
    //   391: invokestatic 626	com/adobe/reader/ARFileBrowserUtils:$SWITCH_TABLE$com$adobe$reader$ARFileEntry$THUMBNAIL_STATUS	()[I
    //   394: invokestatic 104	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:values	()[Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   397: iload 10
    //   399: aaload
    //   400: invokevirtual 112	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:ordinal	()I
    //   403: iaload
    //   404: tableswitch	default:+217->621, 1:+96->500, 2:+96->500, 3:+145->549
    //   432: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   435: new 347	com/adobe/reader/ARFileEntry
    //   438: dup
    //   439: aload 13
    //   441: invokevirtual 613	java/io/File:getName	()Ljava/lang/String;
    //   444: aload 13
    //   446: invokevirtual 148	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   449: aload 14
    //   451: aload 13
    //   453: invokevirtual 629	java/io/File:lastModified	()J
    //   456: aload 13
    //   458: invokevirtual 443	java/io/File:length	()J
    //   461: aload 11
    //   463: getstatic 115	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:NO_THUMBNAIL	Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   466: invokespecial 632	com/adobe/reader/ARFileEntry:<init>	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJLcom/adobe/reader/ARLastViewedPosition;Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;)V
    //   469: invokeinterface 492 2 0
    //   474: pop
    //   475: goto +149 -> 624
    //   478: new 594	com/adobe/reader/ARLastViewedPosition
    //   481: dup
    //   482: iload 6
    //   484: dload_1
    //   485: iload 7
    //   487: iload 8
    //   489: fload_3
    //   490: iload 9
    //   492: invokespecial 635	com/adobe/reader/ARLastViewedPosition:<init>	(IDIIFI)V
    //   495: astore 11
    //   497: goto -106 -> 391
    //   500: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   503: new 347	com/adobe/reader/ARFileEntry
    //   506: dup
    //   507: aload 13
    //   509: invokevirtual 613	java/io/File:getName	()Ljava/lang/String;
    //   512: aload 13
    //   514: invokevirtual 148	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   517: aload 14
    //   519: aload 13
    //   521: invokevirtual 629	java/io/File:lastModified	()J
    //   524: aload 13
    //   526: invokevirtual 443	java/io/File:length	()J
    //   529: aload 11
    //   531: invokestatic 104	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:values	()[Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   534: iload 10
    //   536: aaload
    //   537: invokespecial 632	com/adobe/reader/ARFileEntry:<init>	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJLcom/adobe/reader/ARLastViewedPosition;Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;)V
    //   540: invokeinterface 492 2 0
    //   545: pop
    //   546: goto +78 -> 624
    //   549: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   552: new 347	com/adobe/reader/ARFileEntry
    //   555: dup
    //   556: aload 13
    //   558: invokevirtual 613	java/io/File:getName	()Ljava/lang/String;
    //   561: aload 13
    //   563: invokevirtual 148	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   566: aload 14
    //   568: aload 13
    //   570: invokevirtual 629	java/io/File:lastModified	()J
    //   573: aload 13
    //   575: invokevirtual 443	java/io/File:length	()J
    //   578: aload 11
    //   580: new 637	android/graphics/drawable/BitmapDrawable
    //   583: dup
    //   584: aload_0
    //   585: invokevirtual 482	android/content/Context:getResources	()Landroid/content/res/Resources;
    //   588: aload 15
    //   590: invokespecial 640	android/graphics/drawable/BitmapDrawable:<init>	(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)V
    //   593: invokespecial 643	com/adobe/reader/ARFileEntry:<init>	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJLcom/adobe/reader/ARLastViewedPosition;Landroid/graphics/drawable/Drawable;)V
    //   596: invokeinterface 492 2 0
    //   601: pop
    //   602: goto +22 -> 624
    //   605: iconst_1
    //   606: istore 4
    //   608: goto +16 -> 624
    //   611: astore_0
    //   612: ldc 2
    //   614: monitorexit
    //   615: aload_0
    //   616: athrow
    //   617: astore_0
    //   618: goto -576 -> 42
    //   621: goto -189 -> 432
    //   624: iload 5
    //   626: iconst_1
    //   627: iadd
    //   628: istore 5
    //   630: goto -604 -> 26
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	633	0	paramContext	Context
    //   180	305	1	d	double
    //   260	230	3	f	float
    //   21	586	4	i	int
    //   24	605	5	j	int
    //   152	331	6	k	int
    //   206	280	7	m	int
    //   233	255	8	n	int
    //   286	205	9	i1	int
    //   313	222	10	i2	int
    //   76	503	11	localObject	Object
    //   10	334	12	localSharedPreferences	SharedPreferences
    //   92	482	13	localFile	File
    //   368	199	14	str	String
    //   375	214	15	localBitmap	Bitmap
    // Exception table:
    //   from	to	target	type
    //   3	20	611	finally
    //   38	42	611	finally
    //   42	46	611	finally
    //   51	78	611	finally
    //   83	377	611	finally
    //   382	391	611	finally
    //   391	432	611	finally
    //   432	475	611	finally
    //   478	497	611	finally
    //   500	546	611	finally
    //   549	602	611	finally
    //   38	42	617	java/lang/ClassCastException
    //   51	78	617	java/lang/ClassCastException
    //   83	377	617	java/lang/ClassCastException
    //   382	391	617	java/lang/ClassCastException
    //   391	432	617	java/lang/ClassCastException
    //   432	475	617	java/lang/ClassCastException
    //   478	497	617	java/lang/ClassCastException
    //   500	546	617	java/lang/ClassCastException
    //   549	602	617	java/lang/ClassCastException
  }
  
  public static String getRenamedFilePath(String paramString, int paramInt)
  {
    return paramString.substring(0, paramString.toLowerCase().lastIndexOf(".pdf")) + "(" + paramInt + ")" + ".pdf";
  }
  
  private static void insertRecentsEntryIntoSharedPrefs(ARPrefsEditor paramARPrefsEditor, int paramInt1, String paramString1, int paramInt2, float paramFloat1, int paramInt3, int paramInt4, float paramFloat2, int paramInt5, String paramString2, int paramInt6, String paramString3)
  {
    paramARPrefsEditor.putString("recentFile" + paramInt1, paramString1);
    paramARPrefsEditor.putInt("recentPageNum" + paramInt1, paramInt2);
    paramARPrefsEditor.putFloat("recentZoomLevel" + paramInt1, paramFloat1);
    paramARPrefsEditor.putInt("recentOffsetX" + paramInt1, paramInt3);
    paramARPrefsEditor.putInt("recentOffsetY" + paramInt1, paramInt4);
    paramARPrefsEditor.putFloat("recentReflowFontSize" + paramInt1, paramFloat2);
    paramARPrefsEditor.putInt("recentViewMode" + paramInt1, paramInt5);
    paramARPrefsEditor.putString("recentFileThumbnail" + paramInt1, paramString2);
    paramARPrefsEditor.putInt("recentFileThumbnailStatus" + paramInt1, paramInt6);
    paramARPrefsEditor.putString("recentFileCloudId" + paramInt1, paramString3);
  }
  
  public static boolean isEmmcAvailable()
  {
    return (sEmmcDirectory.exists()) && (sEmmcDirectory.isDirectory());
  }
  
  public static boolean isPermanentStorageAvailable()
  {
    return (isSDCardAvailable()) || (isEmmcAvailable());
  }
  
  public static boolean isSDCardAvailable()
  {
    return Environment.getExternalStorageState().equals("mounted");
  }
  
  public static boolean moveFileInternal(File paramFile1, File paramFile2)
  {
    if (paramFile1.renameTo(paramFile2)) {}
    do
    {
      return true;
      copyFileContents(paramFile1, paramFile2);
      if (!paramFile2.exists()) {
        break;
      }
    } while (deleteFile(paramFile1));
    deleteFile(paramFile2);
    return false;
  }
  
  public static void releaseRecentFiles()
  {
    if (sRecentFilesList != null) {
      sRecentFilesList.clear();
    }
  }
  
  private static void removeDeletedFilesFromRecents(Context paramContext)
  {
    paramContext = paramContext.getSharedPreferences("com.adobe.reader.preferences", 0);
    ARPrefsEditor localARPrefsEditor = new ARPrefsEditor(paramContext);
    int i = 0;
    int j = 0;
    String str = paramContext.getString("recentFile" + j, null);
    if (str == null) {}
    for (;;)
    {
      if (i >= j)
      {
        localARPrefsEditor.apply();
        return;
        int k = i;
        if (new File(str).exists())
        {
          if (i < j)
          {
            k = paramContext.getInt("recentPageNum" + j, 0);
            float f1 = paramContext.getFloat("recentZoomLevel" + j, 0.0F);
            int m = paramContext.getInt("recentOffsetX" + j, 0);
            int n = paramContext.getInt("recentOffsetY" + j, 0);
            float f2 = paramContext.getFloat("recentReflowFontSize" + j, 0.0F);
            int i1 = paramContext.getInt("recentViewMode" + j, 4);
            int i2 = paramContext.getInt("recentFileThumbnailStatus" + j, 0);
            insertRecentsEntryIntoSharedPrefs(localARPrefsEditor, i, str, k, f1, m, n, f2, i1, paramContext.getString("recentFileThumbnail" + j, ""), i2, paramContext.getString("recentFileCloudId" + j, null));
          }
          k = i + 1;
        }
        j += 1;
        i = k;
        break;
      }
      removeRecentsEntryFromSharedPrefs(localARPrefsEditor, i);
      i += 1;
    }
  }
  
  public static void removeEntryFromRecentFilesList(Context paramContext, String paramString)
  {
    for (;;)
    {
      int j;
      int k;
      try
      {
        paramString = getCanonicalFilePath(paramString);
        SharedPreferences localSharedPreferences = paramContext.getSharedPreferences("com.adobe.reader.preferences", 0);
        ARPrefsEditor localARPrefsEditor = new ARPrefsEditor(localSharedPreferences);
        i = 0;
        j = 0;
        String str = localSharedPreferences.getString("recentFile" + j, null);
        if (str == null)
        {
          if (i >= j)
          {
            localARPrefsEditor.apply();
            sRecentFilesList = getRecentFilesList(paramContext);
          }
        }
        else
        {
          k = i;
          if (str.equals(paramString)) {
            break label399;
          }
          if (i >= j) {
            break label393;
          }
          k = localSharedPreferences.getInt("recentPageNum" + j, 0);
          float f1 = localSharedPreferences.getFloat("recentZoomLevel" + j, 0.0F);
          int m = localSharedPreferences.getInt("recentOffsetX" + j, 0);
          int n = localSharedPreferences.getInt("recentOffsetY" + j, 0);
          float f2 = localSharedPreferences.getFloat("recentReflowFontSize" + j, 0.0F);
          int i1 = localSharedPreferences.getInt("recentViewMode" + j, 4);
          int i2 = localSharedPreferences.getInt("recentFileThumbnailStatus" + j, 0);
          insertRecentsEntryIntoSharedPrefs(localARPrefsEditor, i, str, k, f1, m, n, f2, i1, localSharedPreferences.getString("recentFileThumbnail" + j, ""), i2, localSharedPreferences.getString("recentFileCloudId" + j, null));
          break label393;
        }
        removeRecentsEntryFromSharedPrefs(localARPrefsEditor, i);
        i += 1;
        continue;
        k = i + 1;
      }
      finally {}
      label393:
      label399:
      j += 1;
      int i = k;
    }
  }
  
  private static void removeRecentsEntryFromSharedPrefs(ARPrefsEditor paramARPrefsEditor, int paramInt)
  {
    paramARPrefsEditor.remove("recentFile" + paramInt);
    paramARPrefsEditor.remove("recentPageNum" + paramInt);
    paramARPrefsEditor.remove("recentZoomLevel" + paramInt);
    paramARPrefsEditor.remove("recentOffsetX" + paramInt);
    paramARPrefsEditor.remove("recentOffsetY" + paramInt);
    paramARPrefsEditor.remove("recentReflowFontSize" + paramInt);
    paramARPrefsEditor.remove("recentViewMode" + paramInt);
    paramARPrefsEditor.remove("recentFileThumbnail" + paramInt);
    paramARPrefsEditor.remove("recentFileThumbnailStatus" + paramInt);
    paramARPrefsEditor.remove("recentFileCloudId" + paramInt);
  }
  
  public static boolean renameFile(String paramString1, String paramString2)
  {
    boolean bool = false;
    File localFile1 = new File(paramString1);
    File localFile2 = new File(paramString2);
    if (paramString1.equals(paramString2)) {
      bool = true;
    }
    while ((localFile2.exists()) && (paramString1.compareToIgnoreCase(paramString2) != 0)) {
      return bool;
    }
    try
    {
      bool = localFile1.renameTo(localFile2);
      return bool;
    }
    catch (SecurityException paramString1) {}
    return false;
  }
  
  public static void setDocumentViewState(Activity paramActivity, int paramInt)
  {
    paramActivity = new ARPrefsEditor(paramActivity.getSharedPreferences("com.adobe.reader.preferences", 0));
    paramActivity.putInt("documentViewState", paramInt);
    paramActivity.apply();
  }
  
  /* Error */
  public static void setThumbnailForFile(ARViewer paramARViewer, String paramString, Bitmap paramBitmap, boolean paramBoolean)
  {
    // Byte code:
    //   0: ldc 2
    //   2: monitorenter
    //   3: aload_1
    //   4: aload_0
    //   5: invokevirtual 694	com/adobe/reader/ARViewer:getCacheDir	()Ljava/io/File;
    //   8: invokevirtual 280	java/io/File:getCanonicalPath	()Ljava/lang/String;
    //   11: invokevirtual 558	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   14: istore 5
    //   16: iload 5
    //   18: ifeq +7 -> 25
    //   21: ldc 2
    //   23: monitorexit
    //   24: return
    //   25: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   28: invokeinterface 321 1 0
    //   33: ifeq +10 -> 43
    //   36: aload_0
    //   37: invokestatic 325	com/adobe/reader/ARFileBrowserUtils:getRecentFilesList	(Landroid/content/Context;)Ljava/util/List;
    //   40: putstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   43: aload_1
    //   44: invokestatic 696	com/adobe/reader/ARFileBrowserUtils:fileAlreadyViewed	(Ljava/lang/String;)I
    //   47: istore 4
    //   49: iload 4
    //   51: iconst_m1
    //   52: if_icmpeq -31 -> 21
    //   55: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   58: iload 4
    //   60: invokeinterface 448 2 0
    //   65: checkcast 347	com/adobe/reader/ARFileEntry
    //   68: invokevirtual 700	com/adobe/reader/ARFileEntry:getThumbnailStatus	()Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   71: getstatic 115	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:NO_THUMBNAIL	Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   74: if_acmpne -53 -> 21
    //   77: new 327	com/adobe/reader/ARPrefsEditor
    //   80: dup
    //   81: aload_0
    //   82: ldc -27
    //   84: iconst_0
    //   85: invokevirtual 701	com/adobe/reader/ARViewer:getSharedPreferences	(Ljava/lang/String;I)Landroid/content/SharedPreferences;
    //   88: invokespecial 330	com/adobe/reader/ARPrefsEditor:<init>	(Landroid/content/SharedPreferences;)V
    //   91: astore_1
    //   92: iload_3
    //   93: ifeq +113 -> 206
    //   96: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   99: iload 4
    //   101: invokeinterface 448 2 0
    //   106: checkcast 347	com/adobe/reader/ARFileEntry
    //   109: aload_0
    //   110: invokevirtual 702	com/adobe/reader/ARViewer:getResources	()Landroid/content/res/Resources;
    //   113: ldc_w 703
    //   116: invokevirtual 707	android/content/res/Resources:getDrawable	(I)Landroid/graphics/drawable/Drawable;
    //   119: invokevirtual 711	com/adobe/reader/ARFileEntry:setPdfIcon	(Landroid/graphics/drawable/Drawable;)V
    //   122: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   125: iload 4
    //   127: invokeinterface 448 2 0
    //   132: checkcast 347	com/adobe/reader/ARFileEntry
    //   135: getstatic 118	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:NO_THUMBNAIL_ON_PROTECTED_FILE	Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   138: invokevirtual 715	com/adobe/reader/ARFileEntry:setThumbnailStatus	(Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;)V
    //   141: aload_1
    //   142: new 212	java/lang/StringBuilder
    //   145: dup
    //   146: ldc 63
    //   148: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   151: iload 4
    //   153: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   156: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   159: ldc -35
    //   161: invokevirtual 653	com/adobe/reader/ARPrefsEditor:putString	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
    //   164: pop
    //   165: aload_1
    //   166: new 212	java/lang/StringBuilder
    //   169: dup
    //   170: ldc 66
    //   172: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   175: iload 4
    //   177: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   180: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   183: getstatic 118	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:NO_THUMBNAIL_ON_PROTECTED_FILE	Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   186: invokevirtual 112	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:ordinal	()I
    //   189: invokevirtual 657	com/adobe/reader/ARPrefsEditor:putInt	(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;
    //   192: pop
    //   193: aload_1
    //   194: invokevirtual 336	com/adobe/reader/ARPrefsEditor:apply	()V
    //   197: goto -176 -> 21
    //   200: astore_0
    //   201: ldc 2
    //   203: monitorexit
    //   204: aload_0
    //   205: athrow
    //   206: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   209: iload 4
    //   211: invokeinterface 448 2 0
    //   216: checkcast 347	com/adobe/reader/ARFileEntry
    //   219: new 637	android/graphics/drawable/BitmapDrawable
    //   222: dup
    //   223: aload_2
    //   224: invokespecial 718	android/graphics/drawable/BitmapDrawable:<init>	(Landroid/graphics/Bitmap;)V
    //   227: invokevirtual 711	com/adobe/reader/ARFileEntry:setPdfIcon	(Landroid/graphics/drawable/Drawable;)V
    //   230: getstatic 134	com/adobe/reader/ARFileBrowserUtils:sRecentFilesList	Ljava/util/List;
    //   233: iload 4
    //   235: invokeinterface 448 2 0
    //   240: checkcast 347	com/adobe/reader/ARFileEntry
    //   243: getstatic 108	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:HAS_THUMBNAIL	Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   246: invokevirtual 715	com/adobe/reader/ARFileEntry:setThumbnailStatus	(Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;)V
    //   249: aload_1
    //   250: new 212	java/lang/StringBuilder
    //   253: dup
    //   254: ldc 63
    //   256: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   259: iload 4
    //   261: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   264: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   267: aload_2
    //   268: invokestatic 720	com/adobe/reader/ARFileBrowserUtils:BitmapToBase64	(Landroid/graphics/Bitmap;)Ljava/lang/String;
    //   271: invokevirtual 653	com/adobe/reader/ARPrefsEditor:putString	(Ljava/lang/String;Ljava/lang/String;)Landroid/content/SharedPreferences$Editor;
    //   274: pop
    //   275: aload_1
    //   276: new 212	java/lang/StringBuilder
    //   279: dup
    //   280: ldc 66
    //   282: invokespecial 296	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
    //   285: iload 4
    //   287: invokevirtual 608	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   290: invokevirtual 244	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   293: getstatic 108	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:HAS_THUMBNAIL	Lcom/adobe/reader/ARFileEntry$THUMBNAIL_STATUS;
    //   296: invokevirtual 112	com/adobe/reader/ARFileEntry$THUMBNAIL_STATUS:ordinal	()I
    //   299: invokevirtual 657	com/adobe/reader/ARPrefsEditor:putInt	(Ljava/lang/String;I)Landroid/content/SharedPreferences$Editor;
    //   302: pop
    //   303: goto -110 -> 193
    //   306: astore_0
    //   307: goto -286 -> 21
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	310	0	paramARViewer	ARViewer
    //   0	310	1	paramString	String
    //   0	310	2	paramBitmap	Bitmap
    //   0	310	3	paramBoolean	boolean
    //   47	239	4	i	int
    //   14	3	5	bool	boolean
    // Exception table:
    //   from	to	target	type
    //   3	16	200	finally
    //   25	43	200	finally
    //   43	49	200	finally
    //   55	92	200	finally
    //   96	193	200	finally
    //   193	197	200	finally
    //   206	303	200	finally
    //   3	16	306	java/io/IOException
  }
  
  public static void sortFileList(File[] paramArrayOfFile)
  {
    if (paramArrayOfFile != null) {
      Arrays.sort(paramArrayOfFile, new Comparator()
      {
        public int compare(File paramAnonymousFile1, File paramAnonymousFile2)
        {
          return paramAnonymousFile1.getName().toLowerCase().compareTo(paramAnonymousFile2.getName().toLowerCase());
        }
      });
    }
  }
  
  public static void updateRecentFilesList(String paramString1, String paramString2, ARLastViewedPosition paramARLastViewedPosition, Context paramContext)
  {
    for (;;)
    {
      String str;
      ARFileEntry.THUMBNAIL_STATUS localTHUMBNAIL_STATUS;
      boolean bool;
      int k;
      int i;
      label121:
      int j;
      Object localObject;
      try
      {
        str = getCanonicalFilePath(paramString1);
        localTHUMBNAIL_STATUS = ARFileEntry.THUMBNAIL_STATUS.NO_THUMBNAIL;
      }
      finally {}
      try
      {
        bool = str.startsWith(paramContext.getCacheDir().getCanonicalPath());
        if (!bool) {
          continue;
        }
      }
      catch (IOException paramString1)
      {
        label449:
        continue;
        paramString1 = null;
        continue;
        label501:
        j = k;
      }
    }
    return;
    if (sRecentFilesList.isEmpty()) {
      sRecentFilesList = getRecentFilesList(paramContext);
    }
    k = fileAlreadyViewed(str);
    if (k != -1)
    {
      localTHUMBNAIL_STATUS = ((ARFileEntry)sRecentFilesList.get(k)).getThumbnailStatus();
      paramString1 = ((ARFileEntry)sRecentFilesList.get(k)).getPdfIcon();
      paramContext = new ARPrefsEditor(paramContext.getSharedPreferences("com.adobe.reader.preferences", 0));
      i = 0;
      if (k != -1) {
        break label501;
      }
      j = sRecentFilesList.size();
      if (i >= j)
      {
        if (k != -1) {
          sRecentFilesList.remove(k);
        }
        localObject = new File(str);
        if (localTHUMBNAIL_STATUS != ARFileEntry.THUMBNAIL_STATUS.HAS_THUMBNAIL) {
          break label449;
        }
        sRecentFilesList.add(0, new ARFileEntry(((File)localObject).getName(), ((File)localObject).getAbsolutePath(), paramString2, ((File)localObject).lastModified(), ((File)localObject).length(), paramARLastViewedPosition, paramString1));
      }
      for (;;)
      {
        insertRecentsEntryIntoSharedPrefs(paramContext, 0, str, paramARLastViewedPosition.mPageNum, (float)paramARLastViewedPosition.mZoomLevel, paramARLastViewedPosition.mOffsetX, paramARLastViewedPosition.mOffsetY, paramARLastViewedPosition.mReflowFontSize, paramARLastViewedPosition.mViewMode, BitmapToBase64(((BitmapDrawable)((ARFileEntry)sRecentFilesList.get(0)).getPdfIcon()).getBitmap()), ((ARFileEntry)sRecentFilesList.get(0)).getThumbnailStatus().ordinal(), paramString2);
        paramContext.apply();
        break;
        localObject = ((ARFileEntry)sRecentFilesList.get(i)).getInitialPosition();
        insertRecentsEntryIntoSharedPrefs(paramContext, i + 1, ((ARFileEntry)sRecentFilesList.get(i)).getFilePath(), ((ARLastViewedPosition)localObject).mPageNum, (float)((ARLastViewedPosition)localObject).mZoomLevel, ((ARLastViewedPosition)localObject).mOffsetX, ((ARLastViewedPosition)localObject).mOffsetY, ((ARLastViewedPosition)localObject).mReflowFontSize, ((ARLastViewedPosition)localObject).mViewMode, BitmapToBase64(((BitmapDrawable)((ARFileEntry)sRecentFilesList.get(i)).getPdfIcon()).getBitmap()), ((ARFileEntry)sRecentFilesList.get(i)).getThumbnailStatus().ordinal(), ((ARFileEntry)sRecentFilesList.get(i)).getFileID());
        i += 1;
        break label121;
        sRecentFilesList.add(0, new ARFileEntry(((File)localObject).getName(), ((File)localObject).getAbsolutePath(), paramString2, ((File)localObject).lastModified(), ((File)localObject).length(), paramARLastViewedPosition, localTHUMBNAIL_STATUS));
      }
    }
  }
  
  public static void updateRecentPosition(ARLastViewedPosition paramARLastViewedPosition, String paramString, Context paramContext)
  {
    for (;;)
    {
      boolean bool;
      try
      {
        paramString = getCanonicalFilePath(paramString);
      }
      finally {}
      try
      {
        bool = paramString.startsWith(paramContext.getCacheDir().getCanonicalPath());
        if (!bool) {
          continue;
        }
      }
      catch (IOException paramARLastViewedPosition)
      {
        continue;
        i = 0;
        continue;
      }
      return;
      if (!sRecentFilesList.isEmpty()) {
        break;
      }
      sRecentFilesList = getRecentFilesList(paramContext);
      break;
      if (i < sRecentFilesList.size()) {
        if (((ARFileEntry)sRecentFilesList.get(i)).getFilePath().equals(paramString))
        {
          ((ARFileEntry)sRecentFilesList.get(i)).setInitialPosition(paramARLastViewedPosition);
          paramString = new ARPrefsEditor(paramContext.getSharedPreferences("com.adobe.reader.preferences", 0));
          paramString.putInt("recentPageNum" + i, paramARLastViewedPosition.mPageNum);
          paramString.putFloat("recentZoomLevel" + i, (float)paramARLastViewedPosition.mZoomLevel);
          paramString.putInt("recentOffsetX" + i, paramARLastViewedPosition.mOffsetX);
          paramString.putInt("recentOffsetY" + i, paramARLastViewedPosition.mOffsetY);
          paramString.putFloat("recentReflowFontSize" + i, paramARLastViewedPosition.mReflowFontSize);
          paramString.putInt("recentViewMode" + i, paramARLastViewedPosition.mViewMode);
          paramString.apply();
        }
        else
        {
          i += 1;
        }
      }
    }
  }
}
