package com.adobe.reader;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.TextView;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class ARReplyNoteEntryAdapter
  extends ArrayAdapter<ARReplyNote>
{
  private static final int COMMENT_TYPE = 0;
  private static final int REPLY_TYPE = 1;
  private static final int VIEW_COUNT = 2;
  private ARViewer mContext;
  private LayoutInflater mInflater = null;
  
  public ARReplyNoteEntryAdapter(Context paramContext, int paramInt)
  {
    super(paramContext, paramInt, new ArrayList());
    this.mContext = ((ARViewer)paramContext);
  }
  
  public void addAll(List<ARReplyNote> paramList)
  {
    if (paramList == null) {}
    for (;;)
    {
      return;
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        ARReplyNote localARReplyNote = (ARReplyNote)paramList.next();
        if (localARReplyNote != null) {
          add(localARReplyNote);
        }
      }
    }
  }
  
  public int getItemViewType(int paramInt)
  {
    if (paramInt == 0) {
      return 0;
    }
    return 1;
  }
  
  public View getView(int paramInt, View paramView, ViewGroup paramViewGroup)
  {
    if (this.mInflater == null) {
      this.mInflater = ((LayoutInflater)this.mContext.getSystemService("layout_inflater"));
    }
    int i = getItemViewType(paramInt);
    ARReplyNoteEntryWrapper localARReplyNoteEntryWrapper;
    if (paramView == null)
    {
      localARReplyNoteEntryWrapper = new ARReplyNoteEntryWrapper();
      switch (i)
      {
      default: 
        paramViewGroup = paramView;
        if (paramViewGroup != null) {
          paramViewGroup.setTag(localARReplyNoteEntryWrapper);
        }
        break;
      }
    }
    for (;;)
    {
      label80:
      Object localObject = this.mContext.getPageView().getDocViewManager();
      if (localObject != null)
      {
        if ((((ARDocViewManager)localObject).isOperationPermitted(1, 2)) && (paramInt == 0) && (paramView == null)) {
          localARReplyNoteEntryWrapper.mReplyContentView.setEnabled(true);
        }
        boolean bool = ((ARDocViewManager)localObject).isOperationPermitted(0, 3);
        localARReplyNoteEntryWrapper.mReplyContentView.setEnabled(bool);
      }
      paramView = (ARReplyNote)getItem(paramInt);
      if ((paramView.getAuthor() == null) || (paramView.getAuthor().length() <= 0))
      {
        localARReplyNoteEntryWrapper.mReplyAuthorView.setVisibility(8);
        label179:
        if ((paramView.getDate() != null) && (paramView.getDate().length() > 0)) {
          break label522;
        }
        localARReplyNoteEntryWrapper.mReplyDateView.setVisibility(8);
      }
      for (;;)
      {
        if (paramView.getContent() != null)
        {
          localObject = paramView.getContent();
          paramView = (View)localObject;
          if (localObject != null) {
            paramView = ((String)localObject).replace('\r', '\n');
          }
          localARReplyNoteEntryWrapper.mReplyContentView.setText(paramView);
        }
        return paramViewGroup;
        paramViewGroup = this.mInflater.inflate(2130903050, null);
        localARReplyNoteEntryWrapper.mReplyAuthorView = ((TextView)paramViewGroup.findViewById(2131492940));
        localARReplyNoteEntryWrapper.mReplyDateView = ((TextView)paramViewGroup.findViewById(2131492941));
        localARReplyNoteEntryWrapper.mReplyContentView = ((TextView)paramViewGroup.findViewById(2131492943));
        localARReplyNoteEntryWrapper.mReplyContentView.setOnClickListener(new View.OnClickListener()
        {
          public void onClick(View paramAnonymousView)
          {
            paramAnonymousView = ARReplyNoteEntryAdapter.this.mContext.getPageView().getDocViewManager();
            if ((paramAnonymousView != null) && (paramAnonymousView.isOperationPermitted(1, 2)))
            {
              paramAnonymousView = paramAnonymousView.getCommentManager();
              if (paramAnonymousView != null)
              {
                paramAnonymousView = paramAnonymousView.getStickyNoteHandler();
                if ((paramAnonymousView != null) && (paramAnonymousView.getNumReplies() == 0)) {
                  paramAnonymousView.EditPressedOnPopup();
                }
              }
            }
          }
        });
        i = this.mContext.getPageView().getDocViewManager().getCommentManager().getStickyNoteHandler().getNumReplies();
        localObject = (TextView)paramViewGroup.findViewById(2131492942);
        if (i == 0)
        {
          ((TextView)localObject).setVisibility(8);
          break;
        }
        if (i > 1)
        {
          ((TextView)localObject).setText(this.mContext.getString(2131361940, new Object[] { Integer.valueOf(i) }));
          break;
        }
        ((TextView)localObject).setText(this.mContext.getString(2131361941, new Object[] { Integer.valueOf(i) }));
        break;
        paramViewGroup = this.mInflater.inflate(2130903076, null);
        localARReplyNoteEntryWrapper.mReplyAuthorView = ((TextView)paramViewGroup.findViewById(2131493049));
        localARReplyNoteEntryWrapper.mReplyDateView = ((TextView)paramViewGroup.findViewById(2131493050));
        localARReplyNoteEntryWrapper.mReplyContentView = ((EditText)paramViewGroup.findViewById(2131493051));
        break;
        localARReplyNoteEntryWrapper = (ARReplyNoteEntryWrapper)paramView.getTag();
        paramViewGroup = paramView;
        break label80;
        localARReplyNoteEntryWrapper.mReplyAuthorView.setText(paramView.getAuthor());
        localARReplyNoteEntryWrapper.mReplyAuthorView.setVisibility(0);
        break label179;
        label522:
        localARReplyNoteEntryWrapper.mReplyDateView.setText(paramView.getDate());
        localARReplyNoteEntryWrapper.mReplyDateView.setVisibility(0);
      }
    }
  }
  
  public int getViewTypeCount()
  {
    return 2;
  }
  
  public static class ARReplyNoteEntryWrapper
  {
    public TextView mReplyAuthorView;
    public TextView mReplyContentView;
    public TextView mReplyDateView;
    
    public ARReplyNoteEntryWrapper() {}
  }
}
