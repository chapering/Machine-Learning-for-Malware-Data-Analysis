package com.adobe.reader;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.NotificationManager;
import android.app.ProgressDialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.res.Configuration;
import android.net.Uri;
import android.os.Bundle;
import android.view.MotionEvent;

public class ARSendForSignature
  extends Activity
{
  public static final String BROADCAST_ACTION_ON_RESTART = "com.adobe.adobereader.ARSendForSignature.onRestart";
  public static final String BROADCAST_ACTION_ON_STOP = "com.adobe.adobereader.ARSendForSignature.onStop";
  private BroadcastReceiver broadcastReceiver_serviceComplete = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      if (ARSendForSignature.this.mProgressDialog != null)
      {
        ARSendForSignature.this.mProgressDialog.dismiss();
        ARSendForSignature.this.mProgressDialog = null;
      }
      ((NotificationManager)ARSendForSignature.this.getSystemService("notification")).cancelAll();
      paramAnonymousContext = paramAnonymousIntent.getExtras();
      int i = paramAnonymousContext.getInt("Result");
      if (i == 0)
      {
        paramAnonymousContext = new Intent("android.intent.action.VIEW").setData(Uri.parse(paramAnonymousContext.getString("URL")));
        ARSendForSignature.this.startActivity(paramAnonymousContext);
        ARSendForSignature.this.finish();
        return;
      }
      if (i == 1) {}
      for (ARSendForSignature.this.mErrorMessage = ARSendForSignature.this.mActivity.getString(2131362056);; ARSendForSignature.this.mErrorMessage = ARSendForSignature.this.mActivity.getString(2131362048))
      {
        ARSendForSignature.this.displayErrorDialog();
        return;
      }
    }
  };
  private Activity mActivity;
  private AlertDialog mAlertDialog = null;
  private AlertDialog mConfirmationDialog = null;
  private Boolean mConfirmed = Boolean.valueOf(false);
  private String mErrorMessage;
  private ProgressDialog mProgressDialog = null;
  private Intent mServiceIntent;
  
  public ARSendForSignature() {}
  
  private void displayErrorDialog()
  {
    this.mAlertDialog = new AlertDialog.Builder(this.mActivity).create();
    this.mAlertDialog.setMessage(this.mErrorMessage);
    this.mAlertDialog.setButton(this.mActivity.getString(2131361831), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        ARSendForSignature.this.finish();
      }
    });
    this.mAlertDialog.show();
  }
  
  private void showConfirmationDialog()
  {
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(this);
    localBuilder.setCancelable(false);
    localBuilder.setPositiveButton(getString(2131362051), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        ARSendForSignature.this.mConfirmed = Boolean.valueOf(true);
        ARSendForSignature.this.mConfirmationDialog.dismiss();
        ARSendForSignature.this.mConfirmationDialog = null;
        if (ARSendForSignature.this.mServiceIntent != null) {
          ARSendForSignature.this.startService(ARSendForSignature.this.mServiceIntent);
        }
        ARSendForSignature.this.showProgressDialog();
      }
    });
    localBuilder.setNegativeButton(getString(2131362050), new DialogInterface.OnClickListener()
    {
      public void onClick(DialogInterface paramAnonymousDialogInterface, int paramAnonymousInt)
      {
        ARSendForSignature.this.finish();
      }
    });
    this.mConfirmationDialog = localBuilder.create();
    this.mConfirmationDialog.setTitle(getString(2131362049));
    this.mConfirmationDialog.setMessage(getString(2131362055));
    this.mConfirmationDialog.show();
  }
  
  public void onBackPressed()
  {
    super.onBackPressed();
    finish();
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    this.mActivity = this;
    this.mServiceIntent = new Intent(this.mActivity, AREchoSignUploadService.class);
    paramBundle = getIntent().getExtras();
    if (paramBundle != null)
    {
      Bundle localBundle = new Bundle();
      localBundle.putCharSequence("URL", ((Uri)paramBundle.get("android.intent.extra.STREAM")).toString());
      this.mServiceIntent.putExtras(localBundle);
      LocalBroadcastManager.getInstance(this).registerReceiver(this.broadcastReceiver_serviceComplete, new IntentFilter("com.adobe.adobereader.AREchoSignUploadService.complete"));
    }
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
    if (this.mConfirmationDialog != null) {
      this.mConfirmationDialog.dismiss();
    }
    if (this.mProgressDialog != null) {
      this.mProgressDialog.dismiss();
    }
    if (this.mAlertDialog != null) {
      this.mAlertDialog.dismiss();
    }
    if (this.mServiceIntent != null) {
      stopService(this.mServiceIntent);
    }
  }
  
  protected void onPause()
  {
    super.onPause();
  }
  
  protected void onRestart()
  {
    LocalBroadcastManager.getInstance(this).registerReceiver(this.broadcastReceiver_serviceComplete, new IntentFilter("com.adobe.adobereader.AREchoSignUploadService.complete"));
    Intent localIntent = new Intent("com.adobe.adobereader.ARSendForSignature.onRestart");
    LocalBroadcastManager.getInstance(this).sendBroadcast(localIntent);
    super.onRestart();
  }
  
  protected void onResume()
  {
    super.onResume();
  }
  
  protected void onStart()
  {
    super.onStart();
    if ((!this.mConfirmed.booleanValue()) && (this.mConfirmationDialog == null)) {
      showConfirmationDialog();
    }
  }
  
  protected void onStop()
  {
    super.onStop();
    Intent localIntent = new Intent("com.adobe.adobereader.ARSendForSignature.onStop");
    LocalBroadcastManager.getInstance(this).sendBroadcast(localIntent);
    LocalBroadcastManager.getInstance(this).unregisterReceiver(this.broadcastReceiver_serviceComplete);
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    return true;
  }
  
  protected void showProgressDialog()
  {
    this.mProgressDialog = new ProgressDialog(this.mActivity)
    {
      public void onBackPressed()
      {
        super.onBackPressed();
        ARSendForSignature.this.finish();
      }
    };
    this.mProgressDialog.setMessage(this.mActivity.getString(2131362052));
    this.mProgressDialog.setCancelable(false);
    this.mProgressDialog.show();
  }
}
