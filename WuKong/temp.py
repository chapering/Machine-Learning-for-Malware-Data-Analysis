def getsegment(lines):
    aa = []
    blocktext = ''
    for line in lines:
        for char in line:
            #if '{' in line:
                blocktext += char
                if char == '{':
                    aa.append('{')
                elif char == '}':
                    aa.pop()
                    if not aa:
                        return blocktext

def locateonemethod(file):
    with open(file,'r') as f:
        lines = f.readlines()
        for linenum, line in enumerate(lines):
            if line.startswith('public class '):
                classsegment = getsegment(lines[linenum:])
                for l in classsegment:
                    if l.startswith('  public static ') and lines[linenum+1].startswith('  {'):
                        methodsegment=getsegment(lines[linenum+1:])
        return methodsegment

def getvariblelist(method):
    varibleset = set()
    for line in method:
        for word in line.split(' '):
            if (word not in keywords) and (word not in symbols):
                varibleset.add(word)
    return varibleset

def accvaribleused(variblename,method):
    acc = 0
    for line in method:
        for word in line.split(' '):
            if word == variblename:
                acc += 1
    return acc
def accvaribledefined(variblename, method):
    acc = 0
    for line in method:
        if '=' in line:
            for word in line.split(' '):
                if word == variblename:
                    acc += 1
    return acc
def accifclause(variblename, method):
    acc = 0
    for linenum, line in enumerate(method):
        if 'if'in line.split(' '):
            for l in getsegment(method[linenum:]):
                for word in l.split(' '):
                    if word == variblename:
                        acc += 1
    return acc
def accloop(variblename, method):
    acc = 0
    for linenum, line in enumerate(method):
        if 'for' or 'while' in line.split(' '):
            for l in getsegment(method[linenum:]):
                for word in l.split(' '):
                    if word == variblename:
                        acc += 1
    return acc
def accaddition(variblename, method):
    acc = 0
    for line in method:
        if '+' or '-' in line:
            for word in line.split(' '):
                if word == variblename:
                    acc += 1
    return acc

def accmultiplication(variblename, method):
    acc = 0
    for line in method:
        if '*' or '/' in line:
            for word in line.split(' '):
                if word == variblename:
                    acc += 1
    return acc

def accarrayindex(variblename, method):
    acc = 0
    for line in method:
        if ' ['+variblename+'] ' in line:
            acc += 1
    return acc

def accconstantsdefination(variblename, method):
    acc = 0
    for line in method:
        if '=' in line:
            for index, word in enumerate(line.split(' ')):
                if (word == variblename) and (line.split(' ')[index+2].isdigit()):
                    acc += 1
    return acc
